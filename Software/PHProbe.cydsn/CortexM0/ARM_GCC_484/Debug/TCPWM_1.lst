ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TCPWM_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	TCPWM_1_initVar
  18              		.bss
  19              		.type	TCPWM_1_initVar, %object
  20              		.size	TCPWM_1_initVar, 1
  21              	TCPWM_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.TCPWM_1_Init,"ax",%progbits
  24              		.align	2
  25              		.global	TCPWM_1_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	TCPWM_1_Init, %function
  29              	TCPWM_1_Init:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\TCPWM_1.c"
   1:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/TCPWM_1.c **** * File Name: TCPWM_1.c
   3:.\Generated_Source\PSoC4/TCPWM_1.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/TCPWM_1.c **** *
   5:.\Generated_Source\PSoC4/TCPWM_1.c **** * Description:
   6:.\Generated_Source\PSoC4/TCPWM_1.c **** *  This file provides the source code to the API for the TCPWM_1
   7:.\Generated_Source\PSoC4/TCPWM_1.c **** *  component
   8:.\Generated_Source\PSoC4/TCPWM_1.c **** *
   9:.\Generated_Source\PSoC4/TCPWM_1.c **** * Note:
  10:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
  11:.\Generated_Source\PSoC4/TCPWM_1.c **** *
  12:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/TCPWM_1.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/TCPWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/TCPWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/TCPWM_1.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  19:.\Generated_Source\PSoC4/TCPWM_1.c **** #include "TCPWM_1.h"
  20:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  21:.\Generated_Source\PSoC4/TCPWM_1.c **** uint8 TCPWM_1_initVar = 0u;
  22:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  23:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  24:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_Init
  26:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 2


  27:.\Generated_Source\PSoC4/TCPWM_1.c **** *
  28:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
  29:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Initialize/Restore default TCPWM_1 configuration.
  30:.\Generated_Source\PSoC4/TCPWM_1.c **** *
  31:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
  32:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
  33:.\Generated_Source\PSoC4/TCPWM_1.c **** *
  34:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
  35:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
  36:.\Generated_Source\PSoC4/TCPWM_1.c **** *
  37:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_Init(void)
  39:.\Generated_Source\PSoC4/TCPWM_1.c **** {
  32              		.loc 1 39 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  41:.\Generated_Source\PSoC4/TCPWM_1.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__QUAD == TCPWM_1_CONFIG)
  43:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_CONTROL_REG = TCPWM_1_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/TCPWM_1.c ****         
  45:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_TRIG_CONTROL1_REG  = TCPWM_1_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  48:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_SetInterruptMode(TCPWM_1_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/TCPWM_1.c ****         
  51:.\Generated_Source\PSoC4/TCPWM_1.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_SetCounterMode(TCPWM_1_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WritePeriod(TCPWM_1_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WriteCounter(TCPWM_1_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif  /* (TCPWM_1__QUAD == TCPWM_1_CONFIG) */
  56:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  57:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__TIMER == TCPWM_1_CONFIG)
  58:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_CONTROL_REG = TCPWM_1_CTRL_TIMER_BASE_CONFIG;
  40              		.loc 1 58 0
  41 0004 0B4B     		ldr	r3, .L2
  42 0006 E022     		mov	r2, #224
  43 0008 D200     		lsl	r2, r2, #3
  44 000a 1A60     		str	r2, [r3]
  59:.\Generated_Source\PSoC4/TCPWM_1.c ****         
  60:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_TRIG_CONTROL1_REG  = TCPWM_1_TIMER_SIGNALS_MODES;
  45              		.loc 1 61 0
  46 000c 0A4B     		ldr	r3, .L2+4
  47 000e 0C22     		mov	r2, #12
  48 0010 1A60     		str	r2, [r3]
  62:.\Generated_Source\PSoC4/TCPWM_1.c ****     
  63:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_SetInterruptMode(TCPWM_1_TC_INTERRUPT_MASK);
  49              		.loc 1 64 0
  50 0012 0220     		mov	r0, #2
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 3


  51 0014 FFF7FEFF 		bl	TCPWM_1_SetInterruptMode
  65:.\Generated_Source\PSoC4/TCPWM_1.c ****         
  66:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WritePeriod(TCPWM_1_TC_PERIOD_VALUE );
  52              		.loc 1 67 0
  53 0018 084B     		ldr	r3, .L2+8
  54 001a 181C     		mov	r0, r3
  55 001c FFF7FEFF 		bl	TCPWM_1_WritePeriod
  68:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  69:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__COMPARE == TCPWM_1_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCompare(TCPWM_1_TC_COMPARE_VALUE);
  56              		.loc 1 70 0
  57 0020 074B     		ldr	r3, .L2+12
  58 0022 181C     		mov	r0, r3
  59 0024 FFF7FEFF 		bl	TCPWM_1_WriteCompare
  71:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  72:.\Generated_Source\PSoC4/TCPWM_1.c ****             #if (1u == TCPWM_1_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_WriteCompareBuf(TCPWM_1_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* (1u == TCPWM_1_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__COMPARE == TCPWM_1_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  78:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1_CY_TCPWM_V2 && TCPWM_1_TIMER_UPDOWN_CNT_USED && !TCPWM_1_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/TCPWM_1.c ****         #elif(TCPWM_1__COUNT_DOWN == TCPWM_1_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCounter(TCPWM_1_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/TCPWM_1.c ****         #else
  84:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCounter(0u);
  60              		.loc 1 84 0
  61 0028 0020     		mov	r0, #0
  62 002a FFF7FEFF 		bl	TCPWM_1_WriteCounter
  85:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif /* (TCPWM_1_CY_TCPWM_V2 && TCPWM_1_TIMER_UPDOWN_CNT_USED && !TCPWM_1_CY_TCPWM_4000) 
  86:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif  /* (TCPWM_1__TIMER == TCPWM_1_CONFIG) */
  87:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  88:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__PWM_SEL == TCPWM_1_CONFIG)
  89:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_CONTROL_REG = TCPWM_1_CTRL_PWM_BASE_CONFIG;
  90:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  91:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__PWM_PR == TCPWM_1_PWM_MODE)
  92:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_CONTROL_REG |= TCPWM_1_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCounter(TCPWM_1_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/TCPWM_1.c ****         #else
  95:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_CONTROL_REG |= TCPWM_1_CTRL_PWM_ALIGN | TCPWM_1_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/TCPWM_1.c ****             
  97:.\Generated_Source\PSoC4/TCPWM_1.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1_CY_TCPWM_V2 && TCPWM_1_PWM_UPDOWN_CNT_USED && !TCPWM_1_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/TCPWM_1.c ****             #elif (TCPWM_1__RIGHT == TCPWM_1_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_WriteCounter(TCPWM_1_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/TCPWM_1.c ****             #else 
 103:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* (TCPWM_1_CY_TCPWM_V2 && TCPWM_1_PWM_UPDOWN_CNT_USED && !TCPWM_1_CY_TCPWM_400
 105:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM_PR == TCPWM_1_PWM_MODE) */
 106:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 107:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__PWM_DT == TCPWM_1_PWM_MODE)
 108:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_CONTROL_REG |= TCPWM_1_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM_DT == TCPWM_1_PWM_MODE) */
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 4


 110:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 111:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__PWM == TCPWM_1_PWM_MODE)
 112:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_CONTROL_REG |= TCPWM_1_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM == TCPWM_1_PWM_MODE) */
 114:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 115:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_TRIG_CONTROL1_REG  = TCPWM_1_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/TCPWM_1.c ****     
 118:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_SetInterruptMode(TCPWM_1_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 121:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__PWM_PR == TCPWM_1_PWM_MODE)
 123:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/TCPWM_1.c ****                     (TCPWM_1_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/TCPWM_1.c ****                     TCPWM_1_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/TCPWM_1.c ****                     TCPWM_1_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/TCPWM_1.c ****         #else
 128:.\Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1__LEFT == TCPWM_1_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_TRIG_CONTROL2_REG = TCPWM_1_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* ( TCPWM_1_PWM_LEFT == TCPWM_1_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 132:.\Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1__RIGHT == TCPWM_1_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_TRIG_CONTROL2_REG = TCPWM_1_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* ( TCPWM_1_PWM_RIGHT == TCPWM_1_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 136:.\Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1__CENTER == TCPWM_1_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_TRIG_CONTROL2_REG = TCPWM_1_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* ( TCPWM_1_PWM_CENTER == TCPWM_1_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 140:.\Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1__ASYMMETRIC == TCPWM_1_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_TRIG_CONTROL2_REG = TCPWM_1_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* (TCPWM_1__ASYMMETRIC == TCPWM_1_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM_PR == TCPWM_1_PWM_MODE) */
 144:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 145:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WritePeriod(TCPWM_1_PWM_PERIOD_VALUE );
 147:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WriteCompare(TCPWM_1_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 149:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (1u == TCPWM_1_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCompareBuf(TCPWM_1_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (1u == TCPWM_1_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 154:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (1u == TCPWM_1_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WritePeriodBuf(TCPWM_1_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (1u == TCPWM_1_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif  /* (TCPWM_1__PWM_SEL == TCPWM_1_CONFIG) */
 159:.\Generated_Source\PSoC4/TCPWM_1.c ****     
 160:.\Generated_Source\PSoC4/TCPWM_1.c **** }
  63              		.loc 1 160 0
  64 002e BD46     		mov	sp, r7
  65              		@ sp needed
  66 0030 80BD     		pop	{r7, pc}
  67              	.L3:
  68 0032 C046     		.align	2
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 5


  69              	.L2:
  70 0034 00010540 		.word	1074069760
  71 0038 24010540 		.word	1074069796
  72 003c BD510000 		.word	20925
  73 0040 BC510000 		.word	20924
  74              		.cfi_endproc
  75              	.LFE0:
  76              		.size	TCPWM_1_Init, .-TCPWM_1_Init
  77              		.section	.text.TCPWM_1_Enable,"ax",%progbits
  78              		.align	2
  79              		.global	TCPWM_1_Enable
  80              		.code	16
  81              		.thumb_func
  82              		.type	TCPWM_1_Enable, %function
  83              	TCPWM_1_Enable:
  84              	.LFB1:
 161:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 162:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 163:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_Enable
 165:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 167:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 168:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Enables the TCPWM_1.
 169:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 170:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 171:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 172:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 173:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 174:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 175:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 176:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_Enable(void)
 178:.\Generated_Source\PSoC4/TCPWM_1.c **** {
  85              		.loc 1 178 0
  86              		.cfi_startproc
  87 0000 90B5     		push	{r4, r7, lr}
  88              		.cfi_def_cfa_offset 12
  89              		.cfi_offset 4, -12
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 83B0     		sub	sp, sp, #12
  93              		.cfi_def_cfa_offset 24
  94 0004 00AF     		add	r7, sp, #0
  95              		.cfi_def_cfa_register 7
 179:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 181:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
  96              		.loc 1 181 0
  97 0006 FC1D     		add	r4, r7, #7
  98 0008 FFF7FEFF 		bl	CyEnterCriticalSection
  99 000c 031C     		mov	r3, r0
 100 000e 2370     		strb	r3, [r4]
 182:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_BLOCK_CONTROL_REG |= TCPWM_1_MASK;
 101              		.loc 1 182 0
 102 0010 084B     		ldr	r3, .L5
 103 0012 084A     		ldr	r2, .L5
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 6


 104 0014 1268     		ldr	r2, [r2]
 105 0016 0121     		mov	r1, #1
 106 0018 0A43     		orr	r2, r1
 107 001a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 108              		.loc 1 183 0
 109 001c FB1D     		add	r3, r7, #7
 110 001e 1B78     		ldrb	r3, [r3]
 111 0020 181C     		mov	r0, r3
 112 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 185:.\Generated_Source\PSoC4/TCPWM_1.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__PWM_SEL == TCPWM_1_CONFIG)
 187:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (0u == TCPWM_1_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_TriggerCommand(TCPWM_1_MASK, TCPWM_1_CMD_START);
 189:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif /* (0u == TCPWM_1_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1__PWM_SEL == TCPWM_1_CONFIG) */
 191:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 192:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__TIMER == TCPWM_1_CONFIG)
 193:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (0u == TCPWM_1_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_TriggerCommand(TCPWM_1_MASK, TCPWM_1_CMD_START);
 113              		.loc 1 194 0
 114 0026 0120     		mov	r0, #1
 115 0028 1821     		mov	r1, #24
 116 002a FFF7FEFF 		bl	TCPWM_1_TriggerCommand
 195:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif /* (0u == TCPWM_1_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1__TIMER == TCPWM_1_CONFIG) */
 197:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 117              		.loc 1 197 0
 118 002e BD46     		mov	sp, r7
 119 0030 03B0     		add	sp, sp, #12
 120              		@ sp needed
 121 0032 90BD     		pop	{r4, r7, pc}
 122              	.L6:
 123              		.align	2
 124              	.L5:
 125 0034 00000540 		.word	1074069504
 126              		.cfi_endproc
 127              	.LFE1:
 128              		.size	TCPWM_1_Enable, .-TCPWM_1_Enable
 129              		.section	.text.TCPWM_1_Start,"ax",%progbits
 130              		.align	2
 131              		.global	TCPWM_1_Start
 132              		.code	16
 133              		.thumb_func
 134              		.type	TCPWM_1_Start, %function
 135              	TCPWM_1_Start:
 136              	.LFB2:
 198:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 199:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 200:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_Start
 202:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 204:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 205:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Initializes the TCPWM_1 with default customizer
 206:.\Generated_Source\PSoC4/TCPWM_1.c **** *  values when called the first time and enables the TCPWM_1.
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 7


 207:.\Generated_Source\PSoC4/TCPWM_1.c **** *  For subsequent calls the configuration is left unchanged and the component is
 208:.\Generated_Source\PSoC4/TCPWM_1.c **** *  just enabled.
 209:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 210:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 211:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 212:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 213:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 214:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 215:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 216:.\Generated_Source\PSoC4/TCPWM_1.c **** * Global variables:
 217:.\Generated_Source\PSoC4/TCPWM_1.c **** *  TCPWM_1_initVar: global variable is used to indicate initial
 218:.\Generated_Source\PSoC4/TCPWM_1.c **** *  configuration of this component.  The variable is initialized to zero and set
 219:.\Generated_Source\PSoC4/TCPWM_1.c **** *  to 1 the first time TCPWM_1_Start() is called. This allows
 220:.\Generated_Source\PSoC4/TCPWM_1.c **** *  enabling/disabling a component without re-initialization in all subsequent
 221:.\Generated_Source\PSoC4/TCPWM_1.c **** *  calls to the TCPWM_1_Start() routine.
 222:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 223:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 224:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_Start(void)
 225:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 137              		.loc 1 225 0
 138              		.cfi_startproc
 139 0000 80B5     		push	{r7, lr}
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
 143 0002 00AF     		add	r7, sp, #0
 144              		.cfi_def_cfa_register 7
 226:.\Generated_Source\PSoC4/TCPWM_1.c ****     if (0u == TCPWM_1_initVar)
 145              		.loc 1 226 0
 146 0004 064B     		ldr	r3, .L9
 147 0006 1B78     		ldrb	r3, [r3]
 148 0008 002B     		cmp	r3, #0
 149 000a 04D1     		bne	.L8
 227:.\Generated_Source\PSoC4/TCPWM_1.c ****     {
 228:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_Init();
 150              		.loc 1 228 0
 151 000c FFF7FEFF 		bl	TCPWM_1_Init
 229:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_initVar = 1u;
 152              		.loc 1 229 0
 153 0010 034B     		ldr	r3, .L9
 154 0012 0122     		mov	r2, #1
 155 0014 1A70     		strb	r2, [r3]
 156              	.L8:
 230:.\Generated_Source\PSoC4/TCPWM_1.c ****     }
 231:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 232:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_Enable();
 157              		.loc 1 232 0
 158 0016 FFF7FEFF 		bl	TCPWM_1_Enable
 233:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 159              		.loc 1 233 0
 160 001a BD46     		mov	sp, r7
 161              		@ sp needed
 162 001c 80BD     		pop	{r7, pc}
 163              	.L10:
 164 001e C046     		.align	2
 165              	.L9:
 166 0020 00000000 		.word	TCPWM_1_initVar
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 8


 167              		.cfi_endproc
 168              	.LFE2:
 169              		.size	TCPWM_1_Start, .-TCPWM_1_Start
 170              		.section	.text.TCPWM_1_Stop,"ax",%progbits
 171              		.align	2
 172              		.global	TCPWM_1_Stop
 173              		.code	16
 174              		.thumb_func
 175              		.type	TCPWM_1_Stop, %function
 176              	TCPWM_1_Stop:
 177              	.LFB3:
 234:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 235:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 236:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_Stop
 238:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 239:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 240:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 241:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Disables the TCPWM_1.
 242:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 243:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 244:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 245:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 246:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 247:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 248:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 249:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_Stop(void)
 251:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 178              		.loc 1 251 0
 179              		.cfi_startproc
 180 0000 90B5     		push	{r4, r7, lr}
 181              		.cfi_def_cfa_offset 12
 182              		.cfi_offset 4, -12
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185 0002 83B0     		sub	sp, sp, #12
 186              		.cfi_def_cfa_offset 24
 187 0004 00AF     		add	r7, sp, #0
 188              		.cfi_def_cfa_register 7
 252:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 253:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 254:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 189              		.loc 1 254 0
 190 0006 FC1D     		add	r4, r7, #7
 191 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 192 000c 031C     		mov	r3, r0
 193 000e 2370     		strb	r3, [r4]
 255:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 256:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_BLOCK_CONTROL_REG &= (uint32)~TCPWM_1_MASK;
 194              		.loc 1 256 0
 195 0010 064B     		ldr	r3, .L12
 196 0012 064A     		ldr	r2, .L12
 197 0014 1268     		ldr	r2, [r2]
 198 0016 0121     		mov	r1, #1
 199 0018 8A43     		bic	r2, r1
 200 001a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 9


 257:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 258:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 201              		.loc 1 258 0
 202 001c FB1D     		add	r3, r7, #7
 203 001e 1B78     		ldrb	r3, [r3]
 204 0020 181C     		mov	r0, r3
 205 0022 FFF7FEFF 		bl	CyExitCriticalSection
 259:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 206              		.loc 1 259 0
 207 0026 BD46     		mov	sp, r7
 208 0028 03B0     		add	sp, sp, #12
 209              		@ sp needed
 210 002a 90BD     		pop	{r4, r7, pc}
 211              	.L13:
 212              		.align	2
 213              	.L12:
 214 002c 00000540 		.word	1074069504
 215              		.cfi_endproc
 216              	.LFE3:
 217              		.size	TCPWM_1_Stop, .-TCPWM_1_Stop
 218              		.section	.text.TCPWM_1_SetMode,"ax",%progbits
 219              		.align	2
 220              		.global	TCPWM_1_SetMode
 221              		.code	16
 222              		.thumb_func
 223              		.type	TCPWM_1_SetMode, %function
 224              	TCPWM_1_SetMode:
 225              	.LFB4:
 260:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 261:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 262:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetMode
 264:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 266:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 267:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the operation mode of the TCPWM_1. This function is used when
 268:.\Generated_Source\PSoC4/TCPWM_1.c **** *  configured as a generic TCPWM_1 and the actual mode of operation is
 269:.\Generated_Source\PSoC4/TCPWM_1.c **** *  set at runtime. The mode must be set while the component is disabled.
 270:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 271:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 272:.\Generated_Source\PSoC4/TCPWM_1.c **** *  mode: Mode for the TCPWM_1 to operate in
 273:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 274:.\Generated_Source\PSoC4/TCPWM_1.c **** *   - TCPWM_1_MODE_TIMER_COMPARE - Timer / Counter with
 275:.\Generated_Source\PSoC4/TCPWM_1.c **** *                                                 compare capability
 276:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_TIMER_CAPTURE - Timer / Counter with
 277:.\Generated_Source\PSoC4/TCPWM_1.c **** *                                                 capture capability
 278:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_QUAD - Quadrature decoder
 279:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_PWM - PWM
 280:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_PWM_DT - PWM with dead time
 281:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_PWM_PR - PWM with pseudo random capability
 282:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 283:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 284:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 285:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 286:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetMode(uint32 mode)
 288:.\Generated_Source\PSoC4/TCPWM_1.c **** {
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 10


 226              		.loc 1 288 0
 227              		.cfi_startproc
 228 0000 90B5     		push	{r4, r7, lr}
 229              		.cfi_def_cfa_offset 12
 230              		.cfi_offset 4, -12
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 85B0     		sub	sp, sp, #20
 234              		.cfi_def_cfa_offset 32
 235 0004 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
 237 0006 7860     		str	r0, [r7, #4]
 289:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 290:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 291:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 238              		.loc 1 291 0
 239 0008 3C1C     		mov	r4, r7
 240 000a 0F34     		add	r4, r4, #15
 241 000c FFF7FEFF 		bl	CyEnterCriticalSection
 242 0010 031C     		mov	r3, r0
 243 0012 2370     		strb	r3, [r4]
 292:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 293:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_MODE_MASK;
 244              		.loc 1 293 0
 245 0014 0A4B     		ldr	r3, .L15
 246 0016 0A4A     		ldr	r2, .L15
 247 0018 1168     		ldr	r1, [r2]
 248 001a 0A4A     		ldr	r2, .L15+4
 249 001c 0A40     		and	r2, r1
 250 001e 1A60     		str	r2, [r3]
 294:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= mode;
 251              		.loc 1 294 0
 252 0020 074B     		ldr	r3, .L15
 253 0022 074A     		ldr	r2, .L15
 254 0024 1168     		ldr	r1, [r2]
 255 0026 7A68     		ldr	r2, [r7, #4]
 256 0028 0A43     		orr	r2, r1
 257 002a 1A60     		str	r2, [r3]
 295:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 296:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 258              		.loc 1 296 0
 259 002c 3B1C     		mov	r3, r7
 260 002e 0F33     		add	r3, r3, #15
 261 0030 1B78     		ldrb	r3, [r3]
 262 0032 181C     		mov	r0, r3
 263 0034 FFF7FEFF 		bl	CyExitCriticalSection
 297:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 264              		.loc 1 297 0
 265 0038 BD46     		mov	sp, r7
 266 003a 05B0     		add	sp, sp, #20
 267              		@ sp needed
 268 003c 90BD     		pop	{r4, r7, pc}
 269              	.L16:
 270 003e C046     		.align	2
 271              	.L15:
 272 0040 00010540 		.word	1074069760
 273 0044 FFFFFFF8 		.word	-117440513
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 11


 274              		.cfi_endproc
 275              	.LFE4:
 276              		.size	TCPWM_1_SetMode, .-TCPWM_1_SetMode
 277              		.section	.text.TCPWM_1_SetQDMode,"ax",%progbits
 278              		.align	2
 279              		.global	TCPWM_1_SetQDMode
 280              		.code	16
 281              		.thumb_func
 282              		.type	TCPWM_1_SetQDMode, %function
 283              	TCPWM_1_SetQDMode:
 284              	.LFB5:
 298:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 299:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 300:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetQDMode
 302:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 304:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 305:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 306:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 307:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 308:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 309:.\Generated_Source\PSoC4/TCPWM_1.c **** *  qdMode: Quadrature Decoder mode
 310:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 311:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_X1 - Counts on phi 1 rising
 312:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_X2 - Counts on both edges of phi1 (2x faster)
 313:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_X4 - Counts on both edges of phi1 and phi2
 314:.\Generated_Source\PSoC4/TCPWM_1.c **** *                                        (4x faster)
 315:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 316:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 317:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 318:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 319:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetQDMode(uint32 qdMode)
 321:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 285              		.loc 1 321 0
 286              		.cfi_startproc
 287 0000 90B5     		push	{r4, r7, lr}
 288              		.cfi_def_cfa_offset 12
 289              		.cfi_offset 4, -12
 290              		.cfi_offset 7, -8
 291              		.cfi_offset 14, -4
 292 0002 85B0     		sub	sp, sp, #20
 293              		.cfi_def_cfa_offset 32
 294 0004 00AF     		add	r7, sp, #0
 295              		.cfi_def_cfa_register 7
 296 0006 7860     		str	r0, [r7, #4]
 322:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 323:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 324:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 297              		.loc 1 324 0
 298 0008 3C1C     		mov	r4, r7
 299 000a 0F34     		add	r4, r4, #15
 300 000c FFF7FEFF 		bl	CyEnterCriticalSection
 301 0010 031C     		mov	r3, r0
 302 0012 2370     		strb	r3, [r4]
 325:.\Generated_Source\PSoC4/TCPWM_1.c **** 
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 12


 326:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_QUAD_MODE_MASK;
 303              		.loc 1 326 0
 304 0014 0A4B     		ldr	r3, .L18
 305 0016 0A4A     		ldr	r2, .L18
 306 0018 1168     		ldr	r1, [r2]
 307 001a 0A4A     		ldr	r2, .L18+4
 308 001c 0A40     		and	r2, r1
 309 001e 1A60     		str	r2, [r3]
 327:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= qdMode;
 310              		.loc 1 327 0
 311 0020 074B     		ldr	r3, .L18
 312 0022 074A     		ldr	r2, .L18
 313 0024 1168     		ldr	r1, [r2]
 314 0026 7A68     		ldr	r2, [r7, #4]
 315 0028 0A43     		orr	r2, r1
 316 002a 1A60     		str	r2, [r3]
 328:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 329:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 317              		.loc 1 329 0
 318 002c 3B1C     		mov	r3, r7
 319 002e 0F33     		add	r3, r3, #15
 320 0030 1B78     		ldrb	r3, [r3]
 321 0032 181C     		mov	r0, r3
 322 0034 FFF7FEFF 		bl	CyExitCriticalSection
 330:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 323              		.loc 1 330 0
 324 0038 BD46     		mov	sp, r7
 325 003a 05B0     		add	sp, sp, #20
 326              		@ sp needed
 327 003c 90BD     		pop	{r4, r7, pc}
 328              	.L19:
 329 003e C046     		.align	2
 330              	.L18:
 331 0040 00010540 		.word	1074069760
 332 0044 FFFF8FFF 		.word	-7340033
 333              		.cfi_endproc
 334              	.LFE5:
 335              		.size	TCPWM_1_SetQDMode, .-TCPWM_1_SetQDMode
 336              		.section	.text.TCPWM_1_SetPrescaler,"ax",%progbits
 337              		.align	2
 338              		.global	TCPWM_1_SetPrescaler
 339              		.code	16
 340              		.thumb_func
 341              		.type	TCPWM_1_SetPrescaler, %function
 342              	TCPWM_1_SetPrescaler:
 343              	.LFB6:
 331:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 332:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 333:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 334:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPrescaler
 335:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 336:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 337:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 338:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 339:.\Generated_Source\PSoC4/TCPWM_1.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 340:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 341:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 13


 342:.\Generated_Source\PSoC4/TCPWM_1.c **** *  prescaler: Prescaler divider value
 343:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 344:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 345:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY2    - Divide by 2
 346:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY4    - Divide by 4
 347:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY8    - Divide by 8
 348:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY16   - Divide by 16
 349:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY32   - Divide by 32
 350:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY64   - Divide by 64
 351:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY128  - Divide by 128
 352:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 353:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 354:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 355:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 356:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPrescaler(uint32 prescaler)
 358:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 344              		.loc 1 358 0
 345              		.cfi_startproc
 346 0000 90B5     		push	{r4, r7, lr}
 347              		.cfi_def_cfa_offset 12
 348              		.cfi_offset 4, -12
 349              		.cfi_offset 7, -8
 350              		.cfi_offset 14, -4
 351 0002 85B0     		sub	sp, sp, #20
 352              		.cfi_def_cfa_offset 32
 353 0004 00AF     		add	r7, sp, #0
 354              		.cfi_def_cfa_register 7
 355 0006 7860     		str	r0, [r7, #4]
 359:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 360:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 361:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 356              		.loc 1 361 0
 357 0008 3C1C     		mov	r4, r7
 358 000a 0F34     		add	r4, r4, #15
 359 000c FFF7FEFF 		bl	CyEnterCriticalSection
 360 0010 031C     		mov	r3, r0
 361 0012 2370     		strb	r3, [r4]
 362:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 363:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_PRESCALER_MASK;
 362              		.loc 1 363 0
 363 0014 0A4B     		ldr	r3, .L21
 364 0016 0A4A     		ldr	r2, .L21
 365 0018 1168     		ldr	r1, [r2]
 366 001a 0A4A     		ldr	r2, .L21+4
 367 001c 0A40     		and	r2, r1
 368 001e 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= prescaler;
 369              		.loc 1 364 0
 370 0020 074B     		ldr	r3, .L21
 371 0022 074A     		ldr	r2, .L21
 372 0024 1168     		ldr	r1, [r2]
 373 0026 7A68     		ldr	r2, [r7, #4]
 374 0028 0A43     		orr	r2, r1
 375 002a 1A60     		str	r2, [r3]
 365:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 366:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 14


 376              		.loc 1 366 0
 377 002c 3B1C     		mov	r3, r7
 378 002e 0F33     		add	r3, r3, #15
 379 0030 1B78     		ldrb	r3, [r3]
 380 0032 181C     		mov	r0, r3
 381 0034 FFF7FEFF 		bl	CyExitCriticalSection
 367:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 382              		.loc 1 367 0
 383 0038 BD46     		mov	sp, r7
 384 003a 05B0     		add	sp, sp, #20
 385              		@ sp needed
 386 003c 90BD     		pop	{r4, r7, pc}
 387              	.L22:
 388 003e C046     		.align	2
 389              	.L21:
 390 0040 00010540 		.word	1074069760
 391 0044 FF00FFFF 		.word	-65281
 392              		.cfi_endproc
 393              	.LFE6:
 394              		.size	TCPWM_1_SetPrescaler, .-TCPWM_1_SetPrescaler
 395              		.section	.text.TCPWM_1_SetOneShot,"ax",%progbits
 396              		.align	2
 397              		.global	TCPWM_1_SetOneShot
 398              		.code	16
 399              		.thumb_func
 400              		.type	TCPWM_1_SetOneShot, %function
 401              	TCPWM_1_SetOneShot:
 402              	.LFB7:
 368:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 369:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 370:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetOneShot
 372:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 374:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 375:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the TCPWM_1 runs
 376:.\Generated_Source\PSoC4/TCPWM_1.c **** *  continuously or stops when terminal count is reached.  By default the
 377:.\Generated_Source\PSoC4/TCPWM_1.c **** *  TCPWM_1 operates in the continuous mode.
 378:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 379:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 380:.\Generated_Source\PSoC4/TCPWM_1.c **** *  oneShotEnable
 381:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 382:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Continuous
 383:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Enable One Shot
 384:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 385:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 386:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 387:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 388:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetOneShot(uint32 oneShotEnable)
 390:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 403              		.loc 1 390 0
 404              		.cfi_startproc
 405 0000 90B5     		push	{r4, r7, lr}
 406              		.cfi_def_cfa_offset 12
 407              		.cfi_offset 4, -12
 408              		.cfi_offset 7, -8
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 15


 409              		.cfi_offset 14, -4
 410 0002 85B0     		sub	sp, sp, #20
 411              		.cfi_def_cfa_offset 32
 412 0004 00AF     		add	r7, sp, #0
 413              		.cfi_def_cfa_register 7
 414 0006 7860     		str	r0, [r7, #4]
 391:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 392:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 393:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 415              		.loc 1 393 0
 416 0008 3C1C     		mov	r4, r7
 417 000a 0F34     		add	r4, r4, #15
 418 000c FFF7FEFF 		bl	CyEnterCriticalSection
 419 0010 031C     		mov	r3, r0
 420 0012 2370     		strb	r3, [r4]
 394:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 395:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_ONESHOT_MASK;
 421              		.loc 1 395 0
 422 0014 0B4B     		ldr	r3, .L24
 423 0016 0B4A     		ldr	r2, .L24
 424 0018 1168     		ldr	r1, [r2]
 425 001a 0B4A     		ldr	r2, .L24+4
 426 001c 0A40     		and	r2, r1
 427 001e 1A60     		str	r2, [r3]
 396:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((oneShotEnable & TCPWM_1_1BIT_MASK) <<
 428              		.loc 1 396 0
 429 0020 084B     		ldr	r3, .L24
 430 0022 084A     		ldr	r2, .L24
 431 0024 1168     		ldr	r1, [r2]
 432 0026 7868     		ldr	r0, [r7, #4]
 433 0028 0122     		mov	r2, #1
 434 002a 0240     		and	r2, r0
 435 002c 9204     		lsl	r2, r2, #18
 436 002e 0A43     		orr	r2, r1
 437 0030 1A60     		str	r2, [r3]
 397:.\Generated_Source\PSoC4/TCPWM_1.c ****                                                                TCPWM_1_ONESHOT_SHIFT));
 398:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 399:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 438              		.loc 1 399 0
 439 0032 3B1C     		mov	r3, r7
 440 0034 0F33     		add	r3, r3, #15
 441 0036 1B78     		ldrb	r3, [r3]
 442 0038 181C     		mov	r0, r3
 443 003a FFF7FEFF 		bl	CyExitCriticalSection
 400:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 444              		.loc 1 400 0
 445 003e BD46     		mov	sp, r7
 446 0040 05B0     		add	sp, sp, #20
 447              		@ sp needed
 448 0042 90BD     		pop	{r4, r7, pc}
 449              	.L25:
 450              		.align	2
 451              	.L24:
 452 0044 00010540 		.word	1074069760
 453 0048 FFFFFBFF 		.word	-262145
 454              		.cfi_endproc
 455              	.LFE7:
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 16


 456              		.size	TCPWM_1_SetOneShot, .-TCPWM_1_SetOneShot
 457              		.section	.text.TCPWM_1_SetPWMMode,"ax",%progbits
 458              		.align	2
 459              		.global	TCPWM_1_SetPWMMode
 460              		.code	16
 461              		.thumb_func
 462              		.type	TCPWM_1_SetPWMMode, %function
 463              	TCPWM_1_SetPWMMode:
 464              	.LFB8:
 401:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 402:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 403:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMMode
 405:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 407:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 408:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the control register that determines what mode of operation the PWM
 409:.\Generated_Source\PSoC4/TCPWM_1.c **** *  output lines are driven in.  There is a setting for what to do on a
 410:.\Generated_Source\PSoC4/TCPWM_1.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 411:.\Generated_Source\PSoC4/TCPWM_1.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 412:.\Generated_Source\PSoC4/TCPWM_1.c **** *  the mode.
 413:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 414:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 415:.\Generated_Source\PSoC4/TCPWM_1.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 416:.\Generated_Source\PSoC4/TCPWM_1.c **** *  for each of the three or use one of the preconfigured PWM settings.
 417:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 418:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - CC_MATCH_SET        - Set on comparison match
 419:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 420:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 421:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 422:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - OVERLOW_SET         - Set on overflow
 423:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 424:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - OVERLOW_INVERT      - Invert on overflow
 425:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 426:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - UNDERFLOW_SET       - Set on underflow
 427:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 428:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 429:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 430:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 431:.\Generated_Source\PSoC4/TCPWM_1.c **** *                             with up counting mode
 432:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 433:.\Generated_Source\PSoC4/TCPWM_1.c **** *                             with down counting mode
 434:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 435:.\Generated_Source\PSoC4/TCPWM_1.c **** *                             combined with up/down 0 mode
 436:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 437:.\Generated_Source\PSoC4/TCPWM_1.c **** *                             with up/down 1 mode
 438:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 439:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 440:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 441:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 442:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 443:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMMode(uint32 modeMask)
 444:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 465              		.loc 1 444 0
 466              		.cfi_startproc
 467 0000 80B5     		push	{r7, lr}
 468              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 17


 469              		.cfi_offset 7, -8
 470              		.cfi_offset 14, -4
 471 0002 82B0     		sub	sp, sp, #8
 472              		.cfi_def_cfa_offset 16
 473 0004 00AF     		add	r7, sp, #0
 474              		.cfi_def_cfa_register 7
 475 0006 7860     		str	r0, [r7, #4]
 445:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL2_REG = (modeMask & TCPWM_1_6BIT_MASK);
 476              		.loc 1 445 0
 477 0008 034B     		ldr	r3, .L27
 478 000a 7968     		ldr	r1, [r7, #4]
 479 000c 3F22     		mov	r2, #63
 480 000e 0A40     		and	r2, r1
 481 0010 1A60     		str	r2, [r3]
 446:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 482              		.loc 1 446 0
 483 0012 BD46     		mov	sp, r7
 484 0014 02B0     		add	sp, sp, #8
 485              		@ sp needed
 486 0016 80BD     		pop	{r7, pc}
 487              	.L28:
 488              		.align	2
 489              	.L27:
 490 0018 28010540 		.word	1074069800
 491              		.cfi_endproc
 492              	.LFE8:
 493              		.size	TCPWM_1_SetPWMMode, .-TCPWM_1_SetPWMMode
 494              		.section	.text.TCPWM_1_SetPWMSyncKill,"ax",%progbits
 495              		.align	2
 496              		.global	TCPWM_1_SetPWMSyncKill
 497              		.code	16
 498              		.thumb_func
 499              		.type	TCPWM_1_SetPWMSyncKill, %function
 500              	TCPWM_1_SetPWMSyncKill:
 501              	.LFB9:
 447:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 448:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 449:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 450:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMSyncKill
 452:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 453:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 454:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 455:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 456:.\Generated_Source\PSoC4/TCPWM_1.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 457:.\Generated_Source\PSoC4/TCPWM_1.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 458:.\Generated_Source\PSoC4/TCPWM_1.c **** *  and PWM with dead time modes.
 459:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 460:.\Generated_Source\PSoC4/TCPWM_1.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 461:.\Generated_Source\PSoC4/TCPWM_1.c **** *  signals until the next terminal count.
 462:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 463:.\Generated_Source\PSoC4/TCPWM_1.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 464:.\Generated_Source\PSoC4/TCPWM_1.c **** *  signals when the kill signal is present.  This mode should only be used
 465:.\Generated_Source\PSoC4/TCPWM_1.c **** *  when the kill signal (stop input) is configured in the pass through mode
 466:.\Generated_Source\PSoC4/TCPWM_1.c **** *  (Level sensitive signal).
 467:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 468:.\Generated_Source\PSoC4/TCPWM_1.c **** *
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 18


 469:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 470:.\Generated_Source\PSoC4/TCPWM_1.c **** *  syncKillEnable
 471:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 472:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Asynchronous
 473:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Synchronous
 474:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 475:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 476:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 477:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 478:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMSyncKill(uint32 syncKillEnable)
 480:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 502              		.loc 1 480 0
 503              		.cfi_startproc
 504 0000 90B5     		push	{r4, r7, lr}
 505              		.cfi_def_cfa_offset 12
 506              		.cfi_offset 4, -12
 507              		.cfi_offset 7, -8
 508              		.cfi_offset 14, -4
 509 0002 85B0     		sub	sp, sp, #20
 510              		.cfi_def_cfa_offset 32
 511 0004 00AF     		add	r7, sp, #0
 512              		.cfi_def_cfa_register 7
 513 0006 7860     		str	r0, [r7, #4]
 481:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 482:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 483:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 514              		.loc 1 483 0
 515 0008 3C1C     		mov	r4, r7
 516 000a 0F34     		add	r4, r4, #15
 517 000c FFF7FEFF 		bl	CyEnterCriticalSection
 518 0010 031C     		mov	r3, r0
 519 0012 2370     		strb	r3, [r4]
 484:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 485:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_PWM_SYNC_KILL_MASK;
 520              		.loc 1 485 0
 521 0014 0B4B     		ldr	r3, .L30
 522 0016 0B4A     		ldr	r2, .L30
 523 0018 1268     		ldr	r2, [r2]
 524 001a 0421     		mov	r1, #4
 525 001c 8A43     		bic	r2, r1
 526 001e 1A60     		str	r2, [r3]
 486:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((syncKillEnable & TCPWM_1_1BIT_MASK)  <<
 527              		.loc 1 486 0
 528 0020 084B     		ldr	r3, .L30
 529 0022 084A     		ldr	r2, .L30
 530 0024 1168     		ldr	r1, [r2]
 531 0026 7868     		ldr	r0, [r7, #4]
 532 0028 0122     		mov	r2, #1
 533 002a 0240     		and	r2, r0
 534 002c 9200     		lsl	r2, r2, #2
 535 002e 0A43     		orr	r2, r1
 536 0030 1A60     		str	r2, [r3]
 487:.\Generated_Source\PSoC4/TCPWM_1.c ****                                                TCPWM_1_PWM_SYNC_KILL_SHIFT));
 488:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 489:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 537              		.loc 1 489 0
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 19


 538 0032 3B1C     		mov	r3, r7
 539 0034 0F33     		add	r3, r3, #15
 540 0036 1B78     		ldrb	r3, [r3]
 541 0038 181C     		mov	r0, r3
 542 003a FFF7FEFF 		bl	CyExitCriticalSection
 490:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 543              		.loc 1 490 0
 544 003e BD46     		mov	sp, r7
 545 0040 05B0     		add	sp, sp, #20
 546              		@ sp needed
 547 0042 90BD     		pop	{r4, r7, pc}
 548              	.L31:
 549              		.align	2
 550              	.L30:
 551 0044 00010540 		.word	1074069760
 552              		.cfi_endproc
 553              	.LFE9:
 554              		.size	TCPWM_1_SetPWMSyncKill, .-TCPWM_1_SetPWMSyncKill
 555              		.section	.text.TCPWM_1_SetPWMStopOnKill,"ax",%progbits
 556              		.align	2
 557              		.global	TCPWM_1_SetPWMStopOnKill
 558              		.code	16
 559              		.thumb_func
 560              		.type	TCPWM_1_SetPWMStopOnKill, %function
 561              	TCPWM_1_SetPWMStopOnKill:
 562              	.LFB10:
 491:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 492:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 493:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMStopOnKill
 495:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 496:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 497:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 498:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 499:.\Generated_Source\PSoC4/TCPWM_1.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 500:.\Generated_Source\PSoC4/TCPWM_1.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 501:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 502:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 503:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 504:.\Generated_Source\PSoC4/TCPWM_1.c **** *  stopOnKillEnable
 505:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 506:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Don't stop
 507:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Stop
 508:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 509:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 510:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 511:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 512:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMStopOnKill(uint32 stopOnKillEnable)
 514:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 563              		.loc 1 514 0
 564              		.cfi_startproc
 565 0000 90B5     		push	{r4, r7, lr}
 566              		.cfi_def_cfa_offset 12
 567              		.cfi_offset 4, -12
 568              		.cfi_offset 7, -8
 569              		.cfi_offset 14, -4
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 20


 570 0002 85B0     		sub	sp, sp, #20
 571              		.cfi_def_cfa_offset 32
 572 0004 00AF     		add	r7, sp, #0
 573              		.cfi_def_cfa_register 7
 574 0006 7860     		str	r0, [r7, #4]
 515:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 516:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 517:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 575              		.loc 1 517 0
 576 0008 3C1C     		mov	r4, r7
 577 000a 0F34     		add	r4, r4, #15
 578 000c FFF7FEFF 		bl	CyEnterCriticalSection
 579 0010 031C     		mov	r3, r0
 580 0012 2370     		strb	r3, [r4]
 518:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 519:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_PWM_STOP_KILL_MASK;
 581              		.loc 1 519 0
 582 0014 0B4B     		ldr	r3, .L33
 583 0016 0B4A     		ldr	r2, .L33
 584 0018 1268     		ldr	r2, [r2]
 585 001a 0821     		mov	r1, #8
 586 001c 8A43     		bic	r2, r1
 587 001e 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((stopOnKillEnable & TCPWM_1_1BIT_MASK)  <<
 588              		.loc 1 520 0
 589 0020 084B     		ldr	r3, .L33
 590 0022 084A     		ldr	r2, .L33
 591 0024 1168     		ldr	r1, [r2]
 592 0026 7868     		ldr	r0, [r7, #4]
 593 0028 0122     		mov	r2, #1
 594 002a 0240     		and	r2, r0
 595 002c D200     		lsl	r2, r2, #3
 596 002e 0A43     		orr	r2, r1
 597 0030 1A60     		str	r2, [r3]
 521:.\Generated_Source\PSoC4/TCPWM_1.c ****                                                          TCPWM_1_PWM_STOP_KILL_SHIFT));
 522:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 523:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 598              		.loc 1 523 0
 599 0032 3B1C     		mov	r3, r7
 600 0034 0F33     		add	r3, r3, #15
 601 0036 1B78     		ldrb	r3, [r3]
 602 0038 181C     		mov	r0, r3
 603 003a FFF7FEFF 		bl	CyExitCriticalSection
 524:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 604              		.loc 1 524 0
 605 003e BD46     		mov	sp, r7
 606 0040 05B0     		add	sp, sp, #20
 607              		@ sp needed
 608 0042 90BD     		pop	{r4, r7, pc}
 609              	.L34:
 610              		.align	2
 611              	.L33:
 612 0044 00010540 		.word	1074069760
 613              		.cfi_endproc
 614              	.LFE10:
 615              		.size	TCPWM_1_SetPWMStopOnKill, .-TCPWM_1_SetPWMStopOnKill
 616              		.section	.text.TCPWM_1_SetPWMDeadTime,"ax",%progbits
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 21


 617              		.align	2
 618              		.global	TCPWM_1_SetPWMDeadTime
 619              		.code	16
 620              		.thumb_func
 621              		.type	TCPWM_1_SetPWMDeadTime, %function
 622              	TCPWM_1_SetPWMDeadTime:
 623              	.LFB11:
 525:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 526:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 527:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMDeadTime
 529:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 530:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 531:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 532:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the dead time control value.  This value delays the rising edge of
 533:.\Generated_Source\PSoC4/TCPWM_1.c **** *  both the line and line_n signals the designated number of cycles resulting
 534:.\Generated_Source\PSoC4/TCPWM_1.c **** *  in both signals being inactive for that many cycles.  This functionality is
 535:.\Generated_Source\PSoC4/TCPWM_1.c **** *  only applicable to the PWM in the dead time mode.
 536:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 537:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 538:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 539:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Dead time to insert
 540:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values: 0 to 255
 541:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 542:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 543:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 544:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 545:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMDeadTime(uint32 deadTime)
 547:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 624              		.loc 1 547 0
 625              		.cfi_startproc
 626 0000 90B5     		push	{r4, r7, lr}
 627              		.cfi_def_cfa_offset 12
 628              		.cfi_offset 4, -12
 629              		.cfi_offset 7, -8
 630              		.cfi_offset 14, -4
 631 0002 85B0     		sub	sp, sp, #20
 632              		.cfi_def_cfa_offset 32
 633 0004 00AF     		add	r7, sp, #0
 634              		.cfi_def_cfa_register 7
 635 0006 7860     		str	r0, [r7, #4]
 548:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 549:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 550:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 636              		.loc 1 550 0
 637 0008 3C1C     		mov	r4, r7
 638 000a 0F34     		add	r4, r4, #15
 639 000c FFF7FEFF 		bl	CyEnterCriticalSection
 640 0010 031C     		mov	r3, r0
 641 0012 2370     		strb	r3, [r4]
 551:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 552:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_PRESCALER_MASK;
 642              		.loc 1 552 0
 643 0014 0B4B     		ldr	r3, .L36
 644 0016 0B4A     		ldr	r2, .L36
 645 0018 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 22


 646 001a 0B4A     		ldr	r2, .L36+4
 647 001c 0A40     		and	r2, r1
 648 001e 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((deadTime & TCPWM_1_8BIT_MASK) <<
 649              		.loc 1 553 0
 650 0020 084B     		ldr	r3, .L36
 651 0022 084A     		ldr	r2, .L36
 652 0024 1168     		ldr	r1, [r2]
 653 0026 7A68     		ldr	r2, [r7, #4]
 654 0028 1202     		lsl	r2, r2, #8
 655 002a 1204     		lsl	r2, r2, #16
 656 002c 120C     		lsr	r2, r2, #16
 657 002e 0A43     		orr	r2, r1
 658 0030 1A60     		str	r2, [r3]
 554:.\Generated_Source\PSoC4/TCPWM_1.c ****                                                           TCPWM_1_PRESCALER_SHIFT));
 555:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 556:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 659              		.loc 1 556 0
 660 0032 3B1C     		mov	r3, r7
 661 0034 0F33     		add	r3, r3, #15
 662 0036 1B78     		ldrb	r3, [r3]
 663 0038 181C     		mov	r0, r3
 664 003a FFF7FEFF 		bl	CyExitCriticalSection
 557:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 665              		.loc 1 557 0
 666 003e BD46     		mov	sp, r7
 667 0040 05B0     		add	sp, sp, #20
 668              		@ sp needed
 669 0042 90BD     		pop	{r4, r7, pc}
 670              	.L37:
 671              		.align	2
 672              	.L36:
 673 0044 00010540 		.word	1074069760
 674 0048 FF00FFFF 		.word	-65281
 675              		.cfi_endproc
 676              	.LFE11:
 677              		.size	TCPWM_1_SetPWMDeadTime, .-TCPWM_1_SetPWMDeadTime
 678              		.section	.text.TCPWM_1_SetPWMInvert,"ax",%progbits
 679              		.align	2
 680              		.global	TCPWM_1_SetPWMInvert
 681              		.code	16
 682              		.thumb_func
 683              		.type	TCPWM_1_SetPWMInvert, %function
 684              	TCPWM_1_SetPWMInvert:
 685              	.LFB12:
 558:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 559:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 560:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMInvert
 562:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 563:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 564:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 565:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the bits that control whether the line and line_n outputs are
 566:.\Generated_Source\PSoC4/TCPWM_1.c **** *  inverted from their normal output values.  This functionality is only
 567:.\Generated_Source\PSoC4/TCPWM_1.c **** *  applicable to the three PWM modes.
 568:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 569:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 23


 570:.\Generated_Source\PSoC4/TCPWM_1.c **** *  mask: Mask of outputs to invert.
 571:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 572:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_INVERT_LINE   - Inverts the line output
 573:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_INVERT_LINE_N - Inverts the line_n output
 574:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 575:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 576:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 577:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 578:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMInvert(uint32 mask)
 580:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 686              		.loc 1 580 0
 687              		.cfi_startproc
 688 0000 90B5     		push	{r4, r7, lr}
 689              		.cfi_def_cfa_offset 12
 690              		.cfi_offset 4, -12
 691              		.cfi_offset 7, -8
 692              		.cfi_offset 14, -4
 693 0002 85B0     		sub	sp, sp, #20
 694              		.cfi_def_cfa_offset 32
 695 0004 00AF     		add	r7, sp, #0
 696              		.cfi_def_cfa_register 7
 697 0006 7860     		str	r0, [r7, #4]
 581:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 582:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 583:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 698              		.loc 1 583 0
 699 0008 3C1C     		mov	r4, r7
 700 000a 0F34     		add	r4, r4, #15
 701 000c FFF7FEFF 		bl	CyEnterCriticalSection
 702 0010 031C     		mov	r3, r0
 703 0012 2370     		strb	r3, [r4]
 584:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 585:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_INV_OUT_MASK;
 704              		.loc 1 585 0
 705 0014 0A4B     		ldr	r3, .L39
 706 0016 0A4A     		ldr	r2, .L39
 707 0018 1168     		ldr	r1, [r2]
 708 001a 0A4A     		ldr	r2, .L39+4
 709 001c 0A40     		and	r2, r1
 710 001e 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= mask;
 711              		.loc 1 586 0
 712 0020 074B     		ldr	r3, .L39
 713 0022 074A     		ldr	r2, .L39
 714 0024 1168     		ldr	r1, [r2]
 715 0026 7A68     		ldr	r2, [r7, #4]
 716 0028 0A43     		orr	r2, r1
 717 002a 1A60     		str	r2, [r3]
 587:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 588:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 718              		.loc 1 588 0
 719 002c 3B1C     		mov	r3, r7
 720 002e 0F33     		add	r3, r3, #15
 721 0030 1B78     		ldrb	r3, [r3]
 722 0032 181C     		mov	r0, r3
 723 0034 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 24


 589:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 724              		.loc 1 589 0
 725 0038 BD46     		mov	sp, r7
 726 003a 05B0     		add	sp, sp, #20
 727              		@ sp needed
 728 003c 90BD     		pop	{r4, r7, pc}
 729              	.L40:
 730 003e C046     		.align	2
 731              	.L39:
 732 0040 00010540 		.word	1074069760
 733 0044 FFFFCFFF 		.word	-3145729
 734              		.cfi_endproc
 735              	.LFE12:
 736              		.size	TCPWM_1_SetPWMInvert, .-TCPWM_1_SetPWMInvert
 737              		.section	.text.TCPWM_1_WriteCounter,"ax",%progbits
 738              		.align	2
 739              		.global	TCPWM_1_WriteCounter
 740              		.code	16
 741              		.thumb_func
 742              		.type	TCPWM_1_WriteCounter, %function
 743              	TCPWM_1_WriteCounter:
 744              	.LFB13:
 590:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 591:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 592:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 593:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WriteCounter
 595:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 596:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 597:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 598:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 599:.\Generated_Source\PSoC4/TCPWM_1.c **** *  setting the counter (not the period) to the value written. It is not
 600:.\Generated_Source\PSoC4/TCPWM_1.c **** *  advised to write to this field when the counter is running.
 601:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 602:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 603:.\Generated_Source\PSoC4/TCPWM_1.c **** *  count: value to write
 604:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 605:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 606:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 607:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 608:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WriteCounter(uint32 count)
 610:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 745              		.loc 1 610 0
 746              		.cfi_startproc
 747 0000 80B5     		push	{r7, lr}
 748              		.cfi_def_cfa_offset 8
 749              		.cfi_offset 7, -8
 750              		.cfi_offset 14, -4
 751 0002 82B0     		sub	sp, sp, #8
 752              		.cfi_def_cfa_offset 16
 753 0004 00AF     		add	r7, sp, #0
 754              		.cfi_def_cfa_register 7
 755 0006 7860     		str	r0, [r7, #4]
 611:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_COUNTER_REG = (count & TCPWM_1_16BIT_MASK);
 756              		.loc 1 611 0
 757 0008 034B     		ldr	r3, .L42
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 25


 758 000a 7A68     		ldr	r2, [r7, #4]
 759 000c 1204     		lsl	r2, r2, #16
 760 000e 120C     		lsr	r2, r2, #16
 761 0010 1A60     		str	r2, [r3]
 612:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 762              		.loc 1 612 0
 763 0012 BD46     		mov	sp, r7
 764 0014 02B0     		add	sp, sp, #8
 765              		@ sp needed
 766 0016 80BD     		pop	{r7, pc}
 767              	.L43:
 768              		.align	2
 769              	.L42:
 770 0018 08010540 		.word	1074069768
 771              		.cfi_endproc
 772              	.LFE13:
 773              		.size	TCPWM_1_WriteCounter, .-TCPWM_1_WriteCounter
 774              		.section	.text.TCPWM_1_ReadCounter,"ax",%progbits
 775              		.align	2
 776              		.global	TCPWM_1_ReadCounter
 777              		.code	16
 778              		.thumb_func
 779              		.type	TCPWM_1_ReadCounter, %function
 780              	TCPWM_1_ReadCounter:
 781              	.LFB14:
 613:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 614:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 615:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCounter
 617:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 619:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 620:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the current counter value.
 621:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 622:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 623:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 624:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 625:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 626:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Current counter value
 627:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 628:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCounter(void)
 630:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 782              		.loc 1 630 0
 783              		.cfi_startproc
 784 0000 80B5     		push	{r7, lr}
 785              		.cfi_def_cfa_offset 8
 786              		.cfi_offset 7, -8
 787              		.cfi_offset 14, -4
 788 0002 00AF     		add	r7, sp, #0
 789              		.cfi_def_cfa_register 7
 631:.\Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_COUNTER_REG & TCPWM_1_16BIT_MASK);
 790              		.loc 1 631 0
 791 0004 034B     		ldr	r3, .L46
 792 0006 1B68     		ldr	r3, [r3]
 793 0008 1B04     		lsl	r3, r3, #16
 794 000a 1B0C     		lsr	r3, r3, #16
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 26


 632:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 795              		.loc 1 632 0
 796 000c 181C     		mov	r0, r3
 797 000e BD46     		mov	sp, r7
 798              		@ sp needed
 799 0010 80BD     		pop	{r7, pc}
 800              	.L47:
 801 0012 C046     		.align	2
 802              	.L46:
 803 0014 08010540 		.word	1074069768
 804              		.cfi_endproc
 805              	.LFE14:
 806              		.size	TCPWM_1_ReadCounter, .-TCPWM_1_ReadCounter
 807              		.section	.text.TCPWM_1_SetCounterMode,"ax",%progbits
 808              		.align	2
 809              		.global	TCPWM_1_SetCounterMode
 810              		.code	16
 811              		.thumb_func
 812              		.type	TCPWM_1_SetCounterMode, %function
 813              	TCPWM_1_SetCounterMode:
 814              	.LFB15:
 633:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 634:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 635:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetCounterMode
 637:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 639:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 640:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 641:.\Generated_Source\PSoC4/TCPWM_1.c **** *  and the PWM with a pseudo random output.
 642:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 643:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 644:.\Generated_Source\PSoC4/TCPWM_1.c **** *  counterMode: Enumerated counter type values
 645:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 646:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_COUNT_UP       - Counts up
 647:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_COUNT_DOWN     - Counts down
 648:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_COUNT_UPDOWN0  - Counts up and down. Terminal count
 649:.\Generated_Source\PSoC4/TCPWM_1.c **** *                                         generated when counter reaches 0
 650:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_COUNT_UPDOWN1  - Counts up and down. Terminal count
 651:.\Generated_Source\PSoC4/TCPWM_1.c **** *                                         generated both when counter reaches 0
 652:.\Generated_Source\PSoC4/TCPWM_1.c **** *                                         and period
 653:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 654:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 655:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 656:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 657:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetCounterMode(uint32 counterMode)
 659:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 815              		.loc 1 659 0
 816              		.cfi_startproc
 817 0000 90B5     		push	{r4, r7, lr}
 818              		.cfi_def_cfa_offset 12
 819              		.cfi_offset 4, -12
 820              		.cfi_offset 7, -8
 821              		.cfi_offset 14, -4
 822 0002 85B0     		sub	sp, sp, #20
 823              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 27


 824 0004 00AF     		add	r7, sp, #0
 825              		.cfi_def_cfa_register 7
 826 0006 7860     		str	r0, [r7, #4]
 660:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 661:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 662:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 827              		.loc 1 662 0
 828 0008 3C1C     		mov	r4, r7
 829 000a 0F34     		add	r4, r4, #15
 830 000c FFF7FEFF 		bl	CyEnterCriticalSection
 831 0010 031C     		mov	r3, r0
 832 0012 2370     		strb	r3, [r4]
 663:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 664:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_UPDOWN_MASK;
 833              		.loc 1 664 0
 834 0014 0A4B     		ldr	r3, .L49
 835 0016 0A4A     		ldr	r2, .L49
 836 0018 1168     		ldr	r1, [r2]
 837 001a 0A4A     		ldr	r2, .L49+4
 838 001c 0A40     		and	r2, r1
 839 001e 1A60     		str	r2, [r3]
 665:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= counterMode;
 840              		.loc 1 665 0
 841 0020 074B     		ldr	r3, .L49
 842 0022 074A     		ldr	r2, .L49
 843 0024 1168     		ldr	r1, [r2]
 844 0026 7A68     		ldr	r2, [r7, #4]
 845 0028 0A43     		orr	r2, r1
 846 002a 1A60     		str	r2, [r3]
 666:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 667:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 847              		.loc 1 667 0
 848 002c 3B1C     		mov	r3, r7
 849 002e 0F33     		add	r3, r3, #15
 850 0030 1B78     		ldrb	r3, [r3]
 851 0032 181C     		mov	r0, r3
 852 0034 FFF7FEFF 		bl	CyExitCriticalSection
 668:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 853              		.loc 1 668 0
 854 0038 BD46     		mov	sp, r7
 855 003a 05B0     		add	sp, sp, #20
 856              		@ sp needed
 857 003c 90BD     		pop	{r4, r7, pc}
 858              	.L50:
 859 003e C046     		.align	2
 860              	.L49:
 861 0040 00010540 		.word	1074069760
 862 0044 FFFFFCFF 		.word	-196609
 863              		.cfi_endproc
 864              	.LFE15:
 865              		.size	TCPWM_1_SetCounterMode, .-TCPWM_1_SetCounterMode
 866              		.section	.text.TCPWM_1_WritePeriod,"ax",%progbits
 867              		.align	2
 868              		.global	TCPWM_1_WritePeriod
 869              		.code	16
 870              		.thumb_func
 871              		.type	TCPWM_1_WritePeriod, %function
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 28


 872              	TCPWM_1_WritePeriod:
 873              	.LFB16:
 669:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 670:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 671:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WritePeriod
 673:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 675:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 676:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the 16 bit period register with the new period value.
 677:.\Generated_Source\PSoC4/TCPWM_1.c **** *  To cause the counter to count for N cycles this register should be written
 678:.\Generated_Source\PSoC4/TCPWM_1.c **** *  with N-1 (counts from 0 to period inclusive).
 679:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 680:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 681:.\Generated_Source\PSoC4/TCPWM_1.c **** *  period: Period value
 682:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 683:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 684:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 685:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 686:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 687:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WritePeriod(uint32 period)
 688:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 874              		.loc 1 688 0
 875              		.cfi_startproc
 876 0000 80B5     		push	{r7, lr}
 877              		.cfi_def_cfa_offset 8
 878              		.cfi_offset 7, -8
 879              		.cfi_offset 14, -4
 880 0002 82B0     		sub	sp, sp, #8
 881              		.cfi_def_cfa_offset 16
 882 0004 00AF     		add	r7, sp, #0
 883              		.cfi_def_cfa_register 7
 884 0006 7860     		str	r0, [r7, #4]
 689:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_PERIOD_REG = (period & TCPWM_1_16BIT_MASK);
 885              		.loc 1 689 0
 886 0008 034B     		ldr	r3, .L52
 887 000a 7A68     		ldr	r2, [r7, #4]
 888 000c 1204     		lsl	r2, r2, #16
 889 000e 120C     		lsr	r2, r2, #16
 890 0010 1A60     		str	r2, [r3]
 690:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 891              		.loc 1 690 0
 892 0012 BD46     		mov	sp, r7
 893 0014 02B0     		add	sp, sp, #8
 894              		@ sp needed
 895 0016 80BD     		pop	{r7, pc}
 896              	.L53:
 897              		.align	2
 898              	.L52:
 899 0018 14010540 		.word	1074069780
 900              		.cfi_endproc
 901              	.LFE16:
 902              		.size	TCPWM_1_WritePeriod, .-TCPWM_1_WritePeriod
 903              		.section	.text.TCPWM_1_ReadPeriod,"ax",%progbits
 904              		.align	2
 905              		.global	TCPWM_1_ReadPeriod
 906              		.code	16
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 29


 907              		.thumb_func
 908              		.type	TCPWM_1_ReadPeriod, %function
 909              	TCPWM_1_ReadPeriod:
 910              	.LFB17:
 691:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 692:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 693:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadPeriod
 695:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 696:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 697:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 698:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the 16 bit period register.
 699:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 700:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 701:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 702:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 703:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 704:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Period value
 705:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 706:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadPeriod(void)
 708:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 911              		.loc 1 708 0
 912              		.cfi_startproc
 913 0000 80B5     		push	{r7, lr}
 914              		.cfi_def_cfa_offset 8
 915              		.cfi_offset 7, -8
 916              		.cfi_offset 14, -4
 917 0002 00AF     		add	r7, sp, #0
 918              		.cfi_def_cfa_register 7
 709:.\Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_PERIOD_REG & TCPWM_1_16BIT_MASK);
 919              		.loc 1 709 0
 920 0004 034B     		ldr	r3, .L56
 921 0006 1B68     		ldr	r3, [r3]
 922 0008 1B04     		lsl	r3, r3, #16
 923 000a 1B0C     		lsr	r3, r3, #16
 710:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 924              		.loc 1 710 0
 925 000c 181C     		mov	r0, r3
 926 000e BD46     		mov	sp, r7
 927              		@ sp needed
 928 0010 80BD     		pop	{r7, pc}
 929              	.L57:
 930 0012 C046     		.align	2
 931              	.L56:
 932 0014 14010540 		.word	1074069780
 933              		.cfi_endproc
 934              	.LFE17:
 935              		.size	TCPWM_1_ReadPeriod, .-TCPWM_1_ReadPeriod
 936              		.section	.text.TCPWM_1_SetCompareSwap,"ax",%progbits
 937              		.align	2
 938              		.global	TCPWM_1_SetCompareSwap
 939              		.code	16
 940              		.thumb_func
 941              		.type	TCPWM_1_SetCompareSwap, %function
 942              	TCPWM_1_SetCompareSwap:
 943              	.LFB18:
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 30


 711:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 712:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 713:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetCompareSwap
 715:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 716:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 717:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 718:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the compare registers are
 719:.\Generated_Source\PSoC4/TCPWM_1.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 720:.\Generated_Source\PSoC4/TCPWM_1.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 721:.\Generated_Source\PSoC4/TCPWM_1.c **** *  following a hardware switch event.
 722:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 723:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 724:.\Generated_Source\PSoC4/TCPWM_1.c **** *  swapEnable
 725:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 726:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Disable swap
 727:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Enable swap
 728:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 729:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 730:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 731:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 732:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 733:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetCompareSwap(uint32 swapEnable)
 734:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 944              		.loc 1 734 0
 945              		.cfi_startproc
 946 0000 90B5     		push	{r4, r7, lr}
 947              		.cfi_def_cfa_offset 12
 948              		.cfi_offset 4, -12
 949              		.cfi_offset 7, -8
 950              		.cfi_offset 14, -4
 951 0002 85B0     		sub	sp, sp, #20
 952              		.cfi_def_cfa_offset 32
 953 0004 00AF     		add	r7, sp, #0
 954              		.cfi_def_cfa_register 7
 955 0006 7860     		str	r0, [r7, #4]
 735:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 736:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 737:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 956              		.loc 1 737 0
 957 0008 3C1C     		mov	r4, r7
 958 000a 0F34     		add	r4, r4, #15
 959 000c FFF7FEFF 		bl	CyEnterCriticalSection
 960 0010 031C     		mov	r3, r0
 961 0012 2370     		strb	r3, [r4]
 738:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 739:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_RELOAD_CC_MASK;
 962              		.loc 1 739 0
 963 0014 0B4B     		ldr	r3, .L59
 964 0016 0B4A     		ldr	r2, .L59
 965 0018 1268     		ldr	r2, [r2]
 966 001a 0121     		mov	r1, #1
 967 001c 8A43     		bic	r2, r1
 968 001e 1A60     		str	r2, [r3]
 740:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= (swapEnable & TCPWM_1_1BIT_MASK);
 969              		.loc 1 740 0
 970 0020 084B     		ldr	r3, .L59
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 31


 971 0022 084A     		ldr	r2, .L59
 972 0024 1168     		ldr	r1, [r2]
 973 0026 7868     		ldr	r0, [r7, #4]
 974 0028 0122     		mov	r2, #1
 975 002a 0240     		and	r2, r0
 976 002c 0A43     		orr	r2, r1
 977 002e 1A60     		str	r2, [r3]
 741:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 742:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 978              		.loc 1 742 0
 979 0030 3B1C     		mov	r3, r7
 980 0032 0F33     		add	r3, r3, #15
 981 0034 1B78     		ldrb	r3, [r3]
 982 0036 181C     		mov	r0, r3
 983 0038 FFF7FEFF 		bl	CyExitCriticalSection
 743:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 984              		.loc 1 743 0
 985 003c BD46     		mov	sp, r7
 986 003e 05B0     		add	sp, sp, #20
 987              		@ sp needed
 988 0040 90BD     		pop	{r4, r7, pc}
 989              	.L60:
 990 0042 C046     		.align	2
 991              	.L59:
 992 0044 00010540 		.word	1074069760
 993              		.cfi_endproc
 994              	.LFE18:
 995              		.size	TCPWM_1_SetCompareSwap, .-TCPWM_1_SetCompareSwap
 996              		.section	.text.TCPWM_1_WritePeriodBuf,"ax",%progbits
 997              		.align	2
 998              		.global	TCPWM_1_WritePeriodBuf
 999              		.code	16
 1000              		.thumb_func
 1001              		.type	TCPWM_1_WritePeriodBuf, %function
 1002              	TCPWM_1_WritePeriodBuf:
 1003              	.LFB19:
 744:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 745:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 746:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WritePeriodBuf
 748:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 750:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 751:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the 16 bit period buf register with the new period value.
 752:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 753:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 754:.\Generated_Source\PSoC4/TCPWM_1.c **** *  periodBuf: Period value
 755:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 756:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 757:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 758:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 759:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WritePeriodBuf(uint32 periodBuf)
 761:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1004              		.loc 1 761 0
 1005              		.cfi_startproc
 1006 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 32


 1007              		.cfi_def_cfa_offset 8
 1008              		.cfi_offset 7, -8
 1009              		.cfi_offset 14, -4
 1010 0002 82B0     		sub	sp, sp, #8
 1011              		.cfi_def_cfa_offset 16
 1012 0004 00AF     		add	r7, sp, #0
 1013              		.cfi_def_cfa_register 7
 1014 0006 7860     		str	r0, [r7, #4]
 762:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_PERIOD_BUF_REG = (periodBuf & TCPWM_1_16BIT_MASK);
 1015              		.loc 1 762 0
 1016 0008 034B     		ldr	r3, .L62
 1017 000a 7A68     		ldr	r2, [r7, #4]
 1018 000c 1204     		lsl	r2, r2, #16
 1019 000e 120C     		lsr	r2, r2, #16
 1020 0010 1A60     		str	r2, [r3]
 763:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1021              		.loc 1 763 0
 1022 0012 BD46     		mov	sp, r7
 1023 0014 02B0     		add	sp, sp, #8
 1024              		@ sp needed
 1025 0016 80BD     		pop	{r7, pc}
 1026              	.L63:
 1027              		.align	2
 1028              	.L62:
 1029 0018 18010540 		.word	1074069784
 1030              		.cfi_endproc
 1031              	.LFE19:
 1032              		.size	TCPWM_1_WritePeriodBuf, .-TCPWM_1_WritePeriodBuf
 1033              		.section	.text.TCPWM_1_ReadPeriodBuf,"ax",%progbits
 1034              		.align	2
 1035              		.global	TCPWM_1_ReadPeriodBuf
 1036              		.code	16
 1037              		.thumb_func
 1038              		.type	TCPWM_1_ReadPeriodBuf, %function
 1039              	TCPWM_1_ReadPeriodBuf:
 1040              	.LFB20:
 764:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 765:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 766:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 767:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadPeriodBuf
 768:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 769:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 770:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 771:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the 16 bit period buf register.
 772:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 773:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 774:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 775:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 776:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 777:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Period value
 778:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 779:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 780:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadPeriodBuf(void)
 781:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1041              		.loc 1 781 0
 1042              		.cfi_startproc
 1043 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 33


 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 7, -8
 1046              		.cfi_offset 14, -4
 1047 0002 00AF     		add	r7, sp, #0
 1048              		.cfi_def_cfa_register 7
 782:.\Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_PERIOD_BUF_REG & TCPWM_1_16BIT_MASK);
 1049              		.loc 1 782 0
 1050 0004 034B     		ldr	r3, .L66
 1051 0006 1B68     		ldr	r3, [r3]
 1052 0008 1B04     		lsl	r3, r3, #16
 1053 000a 1B0C     		lsr	r3, r3, #16
 783:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1054              		.loc 1 783 0
 1055 000c 181C     		mov	r0, r3
 1056 000e BD46     		mov	sp, r7
 1057              		@ sp needed
 1058 0010 80BD     		pop	{r7, pc}
 1059              	.L67:
 1060 0012 C046     		.align	2
 1061              	.L66:
 1062 0014 18010540 		.word	1074069784
 1063              		.cfi_endproc
 1064              	.LFE20:
 1065              		.size	TCPWM_1_ReadPeriodBuf, .-TCPWM_1_ReadPeriodBuf
 1066              		.section	.text.TCPWM_1_SetPeriodSwap,"ax",%progbits
 1067              		.align	2
 1068              		.global	TCPWM_1_SetPeriodSwap
 1069              		.code	16
 1070              		.thumb_func
 1071              		.type	TCPWM_1_SetPeriodSwap, %function
 1072              	TCPWM_1_SetPeriodSwap:
 1073              	.LFB21:
 784:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 785:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 786:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPeriodSwap
 788:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 789:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 790:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 791:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the period registers are
 792:.\Generated_Source\PSoC4/TCPWM_1.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 793:.\Generated_Source\PSoC4/TCPWM_1.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 794:.\Generated_Source\PSoC4/TCPWM_1.c **** *  switch event.
 795:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 796:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 797:.\Generated_Source\PSoC4/TCPWM_1.c **** *  swapEnable
 798:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 799:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Disable swap
 800:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Enable swap
 801:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 802:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 803:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 804:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 805:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPeriodSwap(uint32 swapEnable)
 807:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1074              		.loc 1 807 0
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 34


 1075              		.cfi_startproc
 1076 0000 90B5     		push	{r4, r7, lr}
 1077              		.cfi_def_cfa_offset 12
 1078              		.cfi_offset 4, -12
 1079              		.cfi_offset 7, -8
 1080              		.cfi_offset 14, -4
 1081 0002 85B0     		sub	sp, sp, #20
 1082              		.cfi_def_cfa_offset 32
 1083 0004 00AF     		add	r7, sp, #0
 1084              		.cfi_def_cfa_register 7
 1085 0006 7860     		str	r0, [r7, #4]
 808:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 809:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 810:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1086              		.loc 1 810 0
 1087 0008 3C1C     		mov	r4, r7
 1088 000a 0F34     		add	r4, r4, #15
 1089 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1090 0010 031C     		mov	r3, r0
 1091 0012 2370     		strb	r3, [r4]
 811:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 812:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_RELOAD_PERIOD_MASK;
 1092              		.loc 1 812 0
 1093 0014 0B4B     		ldr	r3, .L69
 1094 0016 0B4A     		ldr	r2, .L69
 1095 0018 1268     		ldr	r2, [r2]
 1096 001a 0221     		mov	r1, #2
 1097 001c 8A43     		bic	r2, r1
 1098 001e 1A60     		str	r2, [r3]
 813:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((swapEnable & TCPWM_1_1BIT_MASK) <<
 1099              		.loc 1 813 0
 1100 0020 084B     		ldr	r3, .L69
 1101 0022 084A     		ldr	r2, .L69
 1102 0024 1168     		ldr	r1, [r2]
 1103 0026 7868     		ldr	r0, [r7, #4]
 1104 0028 0122     		mov	r2, #1
 1105 002a 0240     		and	r2, r0
 1106 002c 5200     		lsl	r2, r2, #1
 1107 002e 0A43     		orr	r2, r1
 1108 0030 1A60     		str	r2, [r3]
 814:.\Generated_Source\PSoC4/TCPWM_1.c ****                                                             TCPWM_1_RELOAD_PERIOD_SHIFT));
 815:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 816:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1109              		.loc 1 816 0
 1110 0032 3B1C     		mov	r3, r7
 1111 0034 0F33     		add	r3, r3, #15
 1112 0036 1B78     		ldrb	r3, [r3]
 1113 0038 181C     		mov	r0, r3
 1114 003a FFF7FEFF 		bl	CyExitCriticalSection
 817:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1115              		.loc 1 817 0
 1116 003e BD46     		mov	sp, r7
 1117 0040 05B0     		add	sp, sp, #20
 1118              		@ sp needed
 1119 0042 90BD     		pop	{r4, r7, pc}
 1120              	.L70:
 1121              		.align	2
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 35


 1122              	.L69:
 1123 0044 00010540 		.word	1074069760
 1124              		.cfi_endproc
 1125              	.LFE21:
 1126              		.size	TCPWM_1_SetPeriodSwap, .-TCPWM_1_SetPeriodSwap
 1127              		.section	.text.TCPWM_1_WriteCompare,"ax",%progbits
 1128              		.align	2
 1129              		.global	TCPWM_1_WriteCompare
 1130              		.code	16
 1131              		.thumb_func
 1132              		.type	TCPWM_1_WriteCompare, %function
 1133              	TCPWM_1_WriteCompare:
 1134              	.LFB22:
 818:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 819:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 820:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 821:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WriteCompare
 822:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 823:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 824:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 825:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the 16 bit compare register with the new compare value. Not
 826:.\Generated_Source\PSoC4/TCPWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 827:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 828:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 829:.\Generated_Source\PSoC4/TCPWM_1.c **** *  compare: Compare value
 830:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 831:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 832:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 833:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 834:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 835:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WriteCompare(uint32 compare)
 836:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1135              		.loc 1 836 0
 1136              		.cfi_startproc
 1137 0000 80B5     		push	{r7, lr}
 1138              		.cfi_def_cfa_offset 8
 1139              		.cfi_offset 7, -8
 1140              		.cfi_offset 14, -4
 1141 0002 82B0     		sub	sp, sp, #8
 1142              		.cfi_def_cfa_offset 16
 1143 0004 00AF     		add	r7, sp, #0
 1144              		.cfi_def_cfa_register 7
 1145 0006 7860     		str	r0, [r7, #4]
 837:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 838:.\Generated_Source\PSoC4/TCPWM_1.c ****         uint32 currentMode;
 839:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 840:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 841:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 842:.\Generated_Source\PSoC4/TCPWM_1.c ****         currentMode = ((TCPWM_1_CONTROL_REG & TCPWM_1_UPDOWN_MASK) >> TCPWM_1_UPDOWN_SHIFT);
 843:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 844:.\Generated_Source\PSoC4/TCPWM_1.c ****         if (((uint32)TCPWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 845:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 846:.\Generated_Source\PSoC4/TCPWM_1.c ****             compare++;
 847:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 848:.\Generated_Source\PSoC4/TCPWM_1.c ****         else if (((uint32)TCPWM_1__COUNT_UP == currentMode) && (0u != compare))
 849:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 850:.\Generated_Source\PSoC4/TCPWM_1.c ****             compare--;
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 36


 851:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 852:.\Generated_Source\PSoC4/TCPWM_1.c ****         else
 853:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 854:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 855:.\Generated_Source\PSoC4/TCPWM_1.c ****         
 856:.\Generated_Source\PSoC4/TCPWM_1.c ****     
 857:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 858:.\Generated_Source\PSoC4/TCPWM_1.c ****     
 859:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_COMP_CAP_REG = (compare & TCPWM_1_16BIT_MASK);
 1146              		.loc 1 859 0
 1147 0008 034B     		ldr	r3, .L72
 1148 000a 7A68     		ldr	r2, [r7, #4]
 1149 000c 1204     		lsl	r2, r2, #16
 1150 000e 120C     		lsr	r2, r2, #16
 1151 0010 1A60     		str	r2, [r3]
 860:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1152              		.loc 1 860 0
 1153 0012 BD46     		mov	sp, r7
 1154 0014 02B0     		add	sp, sp, #8
 1155              		@ sp needed
 1156 0016 80BD     		pop	{r7, pc}
 1157              	.L73:
 1158              		.align	2
 1159              	.L72:
 1160 0018 0C010540 		.word	1074069772
 1161              		.cfi_endproc
 1162              	.LFE22:
 1163              		.size	TCPWM_1_WriteCompare, .-TCPWM_1_WriteCompare
 1164              		.section	.text.TCPWM_1_ReadCompare,"ax",%progbits
 1165              		.align	2
 1166              		.global	TCPWM_1_ReadCompare
 1167              		.code	16
 1168              		.thumb_func
 1169              		.type	TCPWM_1_ReadCompare, %function
 1170              	TCPWM_1_ReadCompare:
 1171              	.LFB23:
 861:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 862:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 863:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCompare
 865:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 867:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 868:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 869:.\Generated_Source\PSoC4/TCPWM_1.c **** *  or in Quadrature Decoder modes.
 870:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 871:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 872:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 873:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 874:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 875:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Compare value
 876:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 877:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCompare(void)
 879:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1172              		.loc 1 879 0
 1173              		.cfi_startproc
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 37


 1174 0000 80B5     		push	{r7, lr}
 1175              		.cfi_def_cfa_offset 8
 1176              		.cfi_offset 7, -8
 1177              		.cfi_offset 14, -4
 1178 0002 00AF     		add	r7, sp, #0
 1179              		.cfi_def_cfa_register 7
 880:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 881:.\Generated_Source\PSoC4/TCPWM_1.c ****         uint32 currentMode;
 882:.\Generated_Source\PSoC4/TCPWM_1.c ****         uint32 regVal;
 883:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 884:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 885:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 886:.\Generated_Source\PSoC4/TCPWM_1.c ****         currentMode = ((TCPWM_1_CONTROL_REG & TCPWM_1_UPDOWN_MASK) >> TCPWM_1_UPDOWN_SHIFT);
 887:.\Generated_Source\PSoC4/TCPWM_1.c ****         
 888:.\Generated_Source\PSoC4/TCPWM_1.c ****         regVal = TCPWM_1_COMP_CAP_REG;
 889:.\Generated_Source\PSoC4/TCPWM_1.c ****         
 890:.\Generated_Source\PSoC4/TCPWM_1.c ****         if (((uint32)TCPWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
 891:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 892:.\Generated_Source\PSoC4/TCPWM_1.c ****             regVal--;
 893:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 894:.\Generated_Source\PSoC4/TCPWM_1.c ****         else if (((uint32)TCPWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 895:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 896:.\Generated_Source\PSoC4/TCPWM_1.c ****             regVal++;
 897:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 898:.\Generated_Source\PSoC4/TCPWM_1.c ****         else
 899:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 900:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 901:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 902:.\Generated_Source\PSoC4/TCPWM_1.c ****         return (regVal & TCPWM_1_16BIT_MASK);
 903:.\Generated_Source\PSoC4/TCPWM_1.c ****     #else
 904:.\Generated_Source\PSoC4/TCPWM_1.c ****         return (TCPWM_1_COMP_CAP_REG & TCPWM_1_16BIT_MASK);
 1180              		.loc 1 904 0
 1181 0004 034B     		ldr	r3, .L76
 1182 0006 1B68     		ldr	r3, [r3]
 1183 0008 1B04     		lsl	r3, r3, #16
 1184 000a 1B0C     		lsr	r3, r3, #16
 905:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1185              		.loc 1 906 0
 1186 000c 181C     		mov	r0, r3
 1187 000e BD46     		mov	sp, r7
 1188              		@ sp needed
 1189 0010 80BD     		pop	{r7, pc}
 1190              	.L77:
 1191 0012 C046     		.align	2
 1192              	.L76:
 1193 0014 0C010540 		.word	1074069772
 1194              		.cfi_endproc
 1195              	.LFE23:
 1196              		.size	TCPWM_1_ReadCompare, .-TCPWM_1_ReadCompare
 1197              		.section	.text.TCPWM_1_WriteCompareBuf,"ax",%progbits
 1198              		.align	2
 1199              		.global	TCPWM_1_WriteCompareBuf
 1200              		.code	16
 1201              		.thumb_func
 1202              		.type	TCPWM_1_WriteCompareBuf, %function
 1203              	TCPWM_1_WriteCompareBuf:
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 38


 1204              	.LFB24:
 907:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 908:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 909:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 910:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WriteCompareBuf
 911:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 912:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 913:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 914:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 915:.\Generated_Source\PSoC4/TCPWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 916:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 917:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 918:.\Generated_Source\PSoC4/TCPWM_1.c **** *  compareBuf: Compare value
 919:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 920:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 921:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 922:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 923:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 924:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WriteCompareBuf(uint32 compareBuf)
 925:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1205              		.loc 1 925 0
 1206              		.cfi_startproc
 1207 0000 80B5     		push	{r7, lr}
 1208              		.cfi_def_cfa_offset 8
 1209              		.cfi_offset 7, -8
 1210              		.cfi_offset 14, -4
 1211 0002 82B0     		sub	sp, sp, #8
 1212              		.cfi_def_cfa_offset 16
 1213 0004 00AF     		add	r7, sp, #0
 1214              		.cfi_def_cfa_register 7
 1215 0006 7860     		str	r0, [r7, #4]
 926:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 927:.\Generated_Source\PSoC4/TCPWM_1.c ****         uint32 currentMode;
 928:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 929:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 930:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 931:.\Generated_Source\PSoC4/TCPWM_1.c ****         currentMode = ((TCPWM_1_CONTROL_REG & TCPWM_1_UPDOWN_MASK) >> TCPWM_1_UPDOWN_SHIFT);
 932:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 933:.\Generated_Source\PSoC4/TCPWM_1.c ****         if (((uint32)TCPWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 934:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 935:.\Generated_Source\PSoC4/TCPWM_1.c ****             compareBuf++;
 936:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 937:.\Generated_Source\PSoC4/TCPWM_1.c ****         else if (((uint32)TCPWM_1__COUNT_UP == currentMode) && (0u != compareBuf))
 938:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 939:.\Generated_Source\PSoC4/TCPWM_1.c ****             compareBuf --;
 940:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 941:.\Generated_Source\PSoC4/TCPWM_1.c ****         else
 942:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 943:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 944:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 945:.\Generated_Source\PSoC4/TCPWM_1.c ****     
 946:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_COMP_CAP_BUF_REG = (compareBuf & TCPWM_1_16BIT_MASK);
 1216              		.loc 1 946 0
 1217 0008 034B     		ldr	r3, .L79
 1218 000a 7A68     		ldr	r2, [r7, #4]
 1219 000c 1204     		lsl	r2, r2, #16
 1220 000e 120C     		lsr	r2, r2, #16
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 39


 1221 0010 1A60     		str	r2, [r3]
 947:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1222              		.loc 1 947 0
 1223 0012 BD46     		mov	sp, r7
 1224 0014 02B0     		add	sp, sp, #8
 1225              		@ sp needed
 1226 0016 80BD     		pop	{r7, pc}
 1227              	.L80:
 1228              		.align	2
 1229              	.L79:
 1230 0018 10010540 		.word	1074069776
 1231              		.cfi_endproc
 1232              	.LFE24:
 1233              		.size	TCPWM_1_WriteCompareBuf, .-TCPWM_1_WriteCompareBuf
 1234              		.section	.text.TCPWM_1_ReadCompareBuf,"ax",%progbits
 1235              		.align	2
 1236              		.global	TCPWM_1_ReadCompareBuf
 1237              		.code	16
 1238              		.thumb_func
 1239              		.type	TCPWM_1_ReadCompareBuf, %function
 1240              	TCPWM_1_ReadCompareBuf:
 1241              	.LFB25:
 948:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 949:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 950:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 951:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCompareBuf
 952:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 953:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 954:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 955:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 956:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Capture or in Quadrature Decoder modes.
 957:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 958:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 959:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 960:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 961:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 962:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Compare buffer value
 963:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 964:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 965:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCompareBuf(void)
 966:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1242              		.loc 1 966 0
 1243              		.cfi_startproc
 1244 0000 80B5     		push	{r7, lr}
 1245              		.cfi_def_cfa_offset 8
 1246              		.cfi_offset 7, -8
 1247              		.cfi_offset 14, -4
 1248 0002 00AF     		add	r7, sp, #0
 1249              		.cfi_def_cfa_register 7
 967:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 968:.\Generated_Source\PSoC4/TCPWM_1.c ****         uint32 currentMode;
 969:.\Generated_Source\PSoC4/TCPWM_1.c ****         uint32 regVal;
 970:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 971:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 972:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 973:.\Generated_Source\PSoC4/TCPWM_1.c ****         currentMode = ((TCPWM_1_CONTROL_REG & TCPWM_1_UPDOWN_MASK) >> TCPWM_1_UPDOWN_SHIFT);
 974:.\Generated_Source\PSoC4/TCPWM_1.c **** 
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 40


 975:.\Generated_Source\PSoC4/TCPWM_1.c ****         regVal = TCPWM_1_COMP_CAP_BUF_REG;
 976:.\Generated_Source\PSoC4/TCPWM_1.c ****         
 977:.\Generated_Source\PSoC4/TCPWM_1.c ****         if (((uint32)TCPWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
 978:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 979:.\Generated_Source\PSoC4/TCPWM_1.c ****             regVal--;
 980:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 981:.\Generated_Source\PSoC4/TCPWM_1.c ****         else if (((uint32)TCPWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 982:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 983:.\Generated_Source\PSoC4/TCPWM_1.c ****             regVal++;
 984:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 985:.\Generated_Source\PSoC4/TCPWM_1.c ****         else
 986:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 987:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 988:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 989:.\Generated_Source\PSoC4/TCPWM_1.c ****         return (regVal & TCPWM_1_16BIT_MASK);
 990:.\Generated_Source\PSoC4/TCPWM_1.c ****     #else
 991:.\Generated_Source\PSoC4/TCPWM_1.c ****         return (TCPWM_1_COMP_CAP_BUF_REG & TCPWM_1_16BIT_MASK);
 1250              		.loc 1 991 0
 1251 0004 034B     		ldr	r3, .L83
 1252 0006 1B68     		ldr	r3, [r3]
 1253 0008 1B04     		lsl	r3, r3, #16
 1254 000a 1B0C     		lsr	r3, r3, #16
 992:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 993:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1255              		.loc 1 993 0
 1256 000c 181C     		mov	r0, r3
 1257 000e BD46     		mov	sp, r7
 1258              		@ sp needed
 1259 0010 80BD     		pop	{r7, pc}
 1260              	.L84:
 1261 0012 C046     		.align	2
 1262              	.L83:
 1263 0014 10010540 		.word	1074069776
 1264              		.cfi_endproc
 1265              	.LFE25:
 1266              		.size	TCPWM_1_ReadCompareBuf, .-TCPWM_1_ReadCompareBuf
 1267              		.section	.text.TCPWM_1_ReadCapture,"ax",%progbits
 1268              		.align	2
 1269              		.global	TCPWM_1_ReadCapture
 1270              		.code	16
 1271              		.thumb_func
 1272              		.type	TCPWM_1_ReadCapture, %function
 1273              	TCPWM_1_ReadCapture:
 1274              	.LFB26:
 994:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 995:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 996:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCapture
 998:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1000:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1001:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the captured counter value. This API is applicable only for
1002:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1003:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1004:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1005:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1006:.\Generated_Source\PSoC4/TCPWM_1.c **** *
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 41


1007:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1008:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Capture value
1009:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1010:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1011:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCapture(void)
1012:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1275              		.loc 1 1012 0
 1276              		.cfi_startproc
 1277 0000 80B5     		push	{r7, lr}
 1278              		.cfi_def_cfa_offset 8
 1279              		.cfi_offset 7, -8
 1280              		.cfi_offset 14, -4
 1281 0002 00AF     		add	r7, sp, #0
 1282              		.cfi_def_cfa_register 7
1013:.\Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_COMP_CAP_REG & TCPWM_1_16BIT_MASK);
 1283              		.loc 1 1013 0
 1284 0004 034B     		ldr	r3, .L87
 1285 0006 1B68     		ldr	r3, [r3]
 1286 0008 1B04     		lsl	r3, r3, #16
 1287 000a 1B0C     		lsr	r3, r3, #16
1014:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1288              		.loc 1 1014 0
 1289 000c 181C     		mov	r0, r3
 1290 000e BD46     		mov	sp, r7
 1291              		@ sp needed
 1292 0010 80BD     		pop	{r7, pc}
 1293              	.L88:
 1294 0012 C046     		.align	2
 1295              	.L87:
 1296 0014 0C010540 		.word	1074069772
 1297              		.cfi_endproc
 1298              	.LFE26:
 1299              		.size	TCPWM_1_ReadCapture, .-TCPWM_1_ReadCapture
 1300              		.section	.text.TCPWM_1_ReadCaptureBuf,"ax",%progbits
 1301              		.align	2
 1302              		.global	TCPWM_1_ReadCaptureBuf
 1303              		.code	16
 1304              		.thumb_func
 1305              		.type	TCPWM_1_ReadCaptureBuf, %function
 1306              	TCPWM_1_ReadCaptureBuf:
 1307              	.LFB27:
1015:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1016:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1017:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1018:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCaptureBuf
1019:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1020:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1021:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1022:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the capture buffer register. This API is applicable only for
1023:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1024:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1025:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1026:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1027:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1028:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1029:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Capture buffer value
1030:.\Generated_Source\PSoC4/TCPWM_1.c **** *
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 42


1031:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCaptureBuf(void)
1033:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1308              		.loc 1 1033 0
 1309              		.cfi_startproc
 1310 0000 80B5     		push	{r7, lr}
 1311              		.cfi_def_cfa_offset 8
 1312              		.cfi_offset 7, -8
 1313              		.cfi_offset 14, -4
 1314 0002 00AF     		add	r7, sp, #0
 1315              		.cfi_def_cfa_register 7
1034:.\Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_COMP_CAP_BUF_REG & TCPWM_1_16BIT_MASK);
 1316              		.loc 1 1034 0
 1317 0004 034B     		ldr	r3, .L91
 1318 0006 1B68     		ldr	r3, [r3]
 1319 0008 1B04     		lsl	r3, r3, #16
 1320 000a 1B0C     		lsr	r3, r3, #16
1035:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1321              		.loc 1 1035 0
 1322 000c 181C     		mov	r0, r3
 1323 000e BD46     		mov	sp, r7
 1324              		@ sp needed
 1325 0010 80BD     		pop	{r7, pc}
 1326              	.L92:
 1327 0012 C046     		.align	2
 1328              	.L91:
 1329 0014 10010540 		.word	1074069776
 1330              		.cfi_endproc
 1331              	.LFE27:
 1332              		.size	TCPWM_1_ReadCaptureBuf, .-TCPWM_1_ReadCaptureBuf
 1333              		.section	.text.TCPWM_1_SetCaptureMode,"ax",%progbits
 1334              		.align	2
 1335              		.global	TCPWM_1_SetCaptureMode
 1336              		.code	16
 1337              		.thumb_func
 1338              		.type	TCPWM_1_SetCaptureMode, %function
 1339              	TCPWM_1_SetCaptureMode:
 1340              	.LFB28:
1036:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1037:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1038:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetCaptureMode
1040:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1041:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1042:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1043:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1044:.\Generated_Source\PSoC4/TCPWM_1.c **** *  This input is not applicable to the Timer/Counter without Capture and
1045:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Quadrature Decoder modes.
1046:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1047:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1048:.\Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1049:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1050:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1051:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1052:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1053:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1054:.\Generated_Source\PSoC4/TCPWM_1.c **** *
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 43


1055:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1056:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1057:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1058:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1059:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetCaptureMode(uint32 triggerMode)
1060:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1341              		.loc 1 1060 0
 1342              		.cfi_startproc
 1343 0000 90B5     		push	{r4, r7, lr}
 1344              		.cfi_def_cfa_offset 12
 1345              		.cfi_offset 4, -12
 1346              		.cfi_offset 7, -8
 1347              		.cfi_offset 14, -4
 1348 0002 85B0     		sub	sp, sp, #20
 1349              		.cfi_def_cfa_offset 32
 1350 0004 00AF     		add	r7, sp, #0
 1351              		.cfi_def_cfa_register 7
 1352 0006 7860     		str	r0, [r7, #4]
1061:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1062:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1063:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1353              		.loc 1 1063 0
 1354 0008 3C1C     		mov	r4, r7
 1355 000a 0F34     		add	r4, r4, #15
 1356 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1357 0010 031C     		mov	r3, r0
 1358 0012 2370     		strb	r3, [r4]
1064:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1065:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_CAPTURE_MASK;
 1359              		.loc 1 1065 0
 1360 0014 0A4B     		ldr	r3, .L94
 1361 0016 0A4A     		ldr	r2, .L94
 1362 0018 1268     		ldr	r2, [r2]
 1363 001a 0321     		mov	r1, #3
 1364 001c 8A43     		bic	r2, r1
 1365 001e 1A60     		str	r2, [r3]
1066:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= triggerMode;
 1366              		.loc 1 1066 0
 1367 0020 074B     		ldr	r3, .L94
 1368 0022 074A     		ldr	r2, .L94
 1369 0024 1168     		ldr	r1, [r2]
 1370 0026 7A68     		ldr	r2, [r7, #4]
 1371 0028 0A43     		orr	r2, r1
 1372 002a 1A60     		str	r2, [r3]
1067:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1068:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1373              		.loc 1 1068 0
 1374 002c 3B1C     		mov	r3, r7
 1375 002e 0F33     		add	r3, r3, #15
 1376 0030 1B78     		ldrb	r3, [r3]
 1377 0032 181C     		mov	r0, r3
 1378 0034 FFF7FEFF 		bl	CyExitCriticalSection
1069:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1379              		.loc 1 1069 0
 1380 0038 BD46     		mov	sp, r7
 1381 003a 05B0     		add	sp, sp, #20
 1382              		@ sp needed
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 44


 1383 003c 90BD     		pop	{r4, r7, pc}
 1384              	.L95:
 1385 003e C046     		.align	2
 1386              	.L94:
 1387 0040 24010540 		.word	1074069796
 1388              		.cfi_endproc
 1389              	.LFE28:
 1390              		.size	TCPWM_1_SetCaptureMode, .-TCPWM_1_SetCaptureMode
 1391              		.section	.text.TCPWM_1_SetReloadMode,"ax",%progbits
 1392              		.align	2
 1393              		.global	TCPWM_1_SetReloadMode
 1394              		.code	16
 1395              		.thumb_func
 1396              		.type	TCPWM_1_SetReloadMode, %function
 1397              	TCPWM_1_SetReloadMode:
 1398              	.LFB29:
1070:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1071:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1072:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetReloadMode
1074:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1075:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1076:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1077:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1078:.\Generated_Source\PSoC4/TCPWM_1.c **** *  input.
1079:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1080:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1081:.\Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1082:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1083:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1084:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1085:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1086:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1087:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1088:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1089:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1090:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1091:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetReloadMode(uint32 triggerMode)
1093:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1399              		.loc 1 1093 0
 1400              		.cfi_startproc
 1401 0000 90B5     		push	{r4, r7, lr}
 1402              		.cfi_def_cfa_offset 12
 1403              		.cfi_offset 4, -12
 1404              		.cfi_offset 7, -8
 1405              		.cfi_offset 14, -4
 1406 0002 85B0     		sub	sp, sp, #20
 1407              		.cfi_def_cfa_offset 32
 1408 0004 00AF     		add	r7, sp, #0
 1409              		.cfi_def_cfa_register 7
 1410 0006 7860     		str	r0, [r7, #4]
1094:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1095:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1096:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1411              		.loc 1 1096 0
 1412 0008 3C1C     		mov	r4, r7
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 45


 1413 000a 0F34     		add	r4, r4, #15
 1414 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1415 0010 031C     		mov	r3, r0
 1416 0012 2370     		strb	r3, [r4]
1097:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1098:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_RELOAD_MASK;
 1417              		.loc 1 1098 0
 1418 0014 0A4B     		ldr	r3, .L97
 1419 0016 0A4A     		ldr	r2, .L97
 1420 0018 1268     		ldr	r2, [r2]
 1421 001a 3021     		mov	r1, #48
 1422 001c 8A43     		bic	r2, r1
 1423 001e 1A60     		str	r2, [r3]
1099:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_RELOAD_SHIFT));
 1424              		.loc 1 1099 0
 1425 0020 074B     		ldr	r3, .L97
 1426 0022 074A     		ldr	r2, .L97
 1427 0024 1168     		ldr	r1, [r2]
 1428 0026 7A68     		ldr	r2, [r7, #4]
 1429 0028 1201     		lsl	r2, r2, #4
 1430 002a 0A43     		orr	r2, r1
 1431 002c 1A60     		str	r2, [r3]
1100:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1101:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1432              		.loc 1 1101 0
 1433 002e 3B1C     		mov	r3, r7
 1434 0030 0F33     		add	r3, r3, #15
 1435 0032 1B78     		ldrb	r3, [r3]
 1436 0034 181C     		mov	r0, r3
 1437 0036 FFF7FEFF 		bl	CyExitCriticalSection
1102:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1438              		.loc 1 1102 0
 1439 003a BD46     		mov	sp, r7
 1440 003c 05B0     		add	sp, sp, #20
 1441              		@ sp needed
 1442 003e 90BD     		pop	{r4, r7, pc}
 1443              	.L98:
 1444              		.align	2
 1445              	.L97:
 1446 0040 24010540 		.word	1074069796
 1447              		.cfi_endproc
 1448              	.LFE29:
 1449              		.size	TCPWM_1_SetReloadMode, .-TCPWM_1_SetReloadMode
 1450              		.section	.text.TCPWM_1_SetStartMode,"ax",%progbits
 1451              		.align	2
 1452              		.global	TCPWM_1_SetStartMode
 1453              		.code	16
 1454              		.thumb_func
 1455              		.type	TCPWM_1_SetStartMode, %function
 1456              	TCPWM_1_SetStartMode:
 1457              	.LFB30:
1103:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1104:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1105:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1106:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetStartMode
1107:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1108:.\Generated_Source\PSoC4/TCPWM_1.c **** *
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 46


1109:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1110:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1111:.\Generated_Source\PSoC4/TCPWM_1.c **** *  phiB input.
1112:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1113:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1114:.\Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1115:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1116:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1117:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1118:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1119:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1120:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1121:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1122:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1123:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1124:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetStartMode(uint32 triggerMode)
1126:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1458              		.loc 1 1126 0
 1459              		.cfi_startproc
 1460 0000 90B5     		push	{r4, r7, lr}
 1461              		.cfi_def_cfa_offset 12
 1462              		.cfi_offset 4, -12
 1463              		.cfi_offset 7, -8
 1464              		.cfi_offset 14, -4
 1465 0002 85B0     		sub	sp, sp, #20
 1466              		.cfi_def_cfa_offset 32
 1467 0004 00AF     		add	r7, sp, #0
 1468              		.cfi_def_cfa_register 7
 1469 0006 7860     		str	r0, [r7, #4]
1127:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1128:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1129:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1470              		.loc 1 1129 0
 1471 0008 3C1C     		mov	r4, r7
 1472 000a 0F34     		add	r4, r4, #15
 1473 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1474 0010 031C     		mov	r3, r0
 1475 0012 2370     		strb	r3, [r4]
1130:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1131:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_START_MASK;
 1476              		.loc 1 1131 0
 1477 0014 0A4B     		ldr	r3, .L100
 1478 0016 0A4A     		ldr	r2, .L100
 1479 0018 1168     		ldr	r1, [r2]
 1480 001a 0A4A     		ldr	r2, .L100+4
 1481 001c 0A40     		and	r2, r1
 1482 001e 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_START_SHIFT));
 1483              		.loc 1 1132 0
 1484 0020 074B     		ldr	r3, .L100
 1485 0022 074A     		ldr	r2, .L100
 1486 0024 1168     		ldr	r1, [r2]
 1487 0026 7A68     		ldr	r2, [r7, #4]
 1488 0028 1202     		lsl	r2, r2, #8
 1489 002a 0A43     		orr	r2, r1
 1490 002c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 47


1133:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1134:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1491              		.loc 1 1134 0
 1492 002e 3B1C     		mov	r3, r7
 1493 0030 0F33     		add	r3, r3, #15
 1494 0032 1B78     		ldrb	r3, [r3]
 1495 0034 181C     		mov	r0, r3
 1496 0036 FFF7FEFF 		bl	CyExitCriticalSection
1135:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1497              		.loc 1 1135 0
 1498 003a BD46     		mov	sp, r7
 1499 003c 05B0     		add	sp, sp, #20
 1500              		@ sp needed
 1501 003e 90BD     		pop	{r4, r7, pc}
 1502              	.L101:
 1503              		.align	2
 1504              	.L100:
 1505 0040 24010540 		.word	1074069796
 1506 0044 FFFCFFFF 		.word	-769
 1507              		.cfi_endproc
 1508              	.LFE30:
 1509              		.size	TCPWM_1_SetStartMode, .-TCPWM_1_SetStartMode
 1510              		.section	.text.TCPWM_1_SetStopMode,"ax",%progbits
 1511              		.align	2
 1512              		.global	TCPWM_1_SetStopMode
 1513              		.code	16
 1514              		.thumb_func
 1515              		.type	TCPWM_1_SetStopMode, %function
 1516              	TCPWM_1_SetStopMode:
 1517              	.LFB31:
1136:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1137:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1138:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetStopMode
1140:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1141:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1142:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1143:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1144:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1145:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1146:.\Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1147:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1148:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1149:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1150:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1151:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1152:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1153:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1154:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1155:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1156:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1157:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetStopMode(uint32 triggerMode)
1158:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1518              		.loc 1 1158 0
 1519              		.cfi_startproc
 1520 0000 90B5     		push	{r4, r7, lr}
 1521              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 48


 1522              		.cfi_offset 4, -12
 1523              		.cfi_offset 7, -8
 1524              		.cfi_offset 14, -4
 1525 0002 85B0     		sub	sp, sp, #20
 1526              		.cfi_def_cfa_offset 32
 1527 0004 00AF     		add	r7, sp, #0
 1528              		.cfi_def_cfa_register 7
 1529 0006 7860     		str	r0, [r7, #4]
1159:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1160:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1161:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1530              		.loc 1 1161 0
 1531 0008 3C1C     		mov	r4, r7
 1532 000a 0F34     		add	r4, r4, #15
 1533 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1534 0010 031C     		mov	r3, r0
 1535 0012 2370     		strb	r3, [r4]
1162:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1163:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_STOP_MASK;
 1536              		.loc 1 1163 0
 1537 0014 0A4B     		ldr	r3, .L103
 1538 0016 0A4A     		ldr	r2, .L103
 1539 0018 1268     		ldr	r2, [r2]
 1540 001a C021     		mov	r1, #192
 1541 001c 8A43     		bic	r2, r1
 1542 001e 1A60     		str	r2, [r3]
1164:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_STOP_SHIFT));
 1543              		.loc 1 1164 0
 1544 0020 074B     		ldr	r3, .L103
 1545 0022 074A     		ldr	r2, .L103
 1546 0024 1168     		ldr	r1, [r2]
 1547 0026 7A68     		ldr	r2, [r7, #4]
 1548 0028 9201     		lsl	r2, r2, #6
 1549 002a 0A43     		orr	r2, r1
 1550 002c 1A60     		str	r2, [r3]
1165:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1166:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1551              		.loc 1 1166 0
 1552 002e 3B1C     		mov	r3, r7
 1553 0030 0F33     		add	r3, r3, #15
 1554 0032 1B78     		ldrb	r3, [r3]
 1555 0034 181C     		mov	r0, r3
 1556 0036 FFF7FEFF 		bl	CyExitCriticalSection
1167:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1557              		.loc 1 1167 0
 1558 003a BD46     		mov	sp, r7
 1559 003c 05B0     		add	sp, sp, #20
 1560              		@ sp needed
 1561 003e 90BD     		pop	{r4, r7, pc}
 1562              	.L104:
 1563              		.align	2
 1564              	.L103:
 1565 0040 24010540 		.word	1074069796
 1566              		.cfi_endproc
 1567              	.LFE31:
 1568              		.size	TCPWM_1_SetStopMode, .-TCPWM_1_SetStopMode
 1569              		.section	.text.TCPWM_1_SetCountMode,"ax",%progbits
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 49


 1570              		.align	2
 1571              		.global	TCPWM_1_SetCountMode
 1572              		.code	16
 1573              		.thumb_func
 1574              		.type	TCPWM_1_SetCountMode, %function
 1575              	TCPWM_1_SetCountMode:
 1576              	.LFB32:
1168:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1169:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1170:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1171:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetCountMode
1172:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1173:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1174:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1175:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1176:.\Generated_Source\PSoC4/TCPWM_1.c **** *  input.
1177:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1178:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1179:.\Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1180:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1181:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1182:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1183:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1184:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1185:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1186:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1187:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1188:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1189:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1190:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetCountMode(uint32 triggerMode)
1191:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1577              		.loc 1 1191 0
 1578              		.cfi_startproc
 1579 0000 90B5     		push	{r4, r7, lr}
 1580              		.cfi_def_cfa_offset 12
 1581              		.cfi_offset 4, -12
 1582              		.cfi_offset 7, -8
 1583              		.cfi_offset 14, -4
 1584 0002 85B0     		sub	sp, sp, #20
 1585              		.cfi_def_cfa_offset 32
 1586 0004 00AF     		add	r7, sp, #0
 1587              		.cfi_def_cfa_register 7
 1588 0006 7860     		str	r0, [r7, #4]
1192:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1193:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1194:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1589              		.loc 1 1194 0
 1590 0008 3C1C     		mov	r4, r7
 1591 000a 0F34     		add	r4, r4, #15
 1592 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1593 0010 031C     		mov	r3, r0
 1594 0012 2370     		strb	r3, [r4]
1195:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1196:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_COUNT_MASK;
 1595              		.loc 1 1196 0
 1596 0014 0A4B     		ldr	r3, .L106
 1597 0016 0A4A     		ldr	r2, .L106
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 50


 1598 0018 1268     		ldr	r2, [r2]
 1599 001a 0C21     		mov	r1, #12
 1600 001c 8A43     		bic	r2, r1
 1601 001e 1A60     		str	r2, [r3]
1197:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_COUNT_SHIFT));
 1602              		.loc 1 1197 0
 1603 0020 074B     		ldr	r3, .L106
 1604 0022 074A     		ldr	r2, .L106
 1605 0024 1168     		ldr	r1, [r2]
 1606 0026 7A68     		ldr	r2, [r7, #4]
 1607 0028 9200     		lsl	r2, r2, #2
 1608 002a 0A43     		orr	r2, r1
 1609 002c 1A60     		str	r2, [r3]
1198:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1199:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1610              		.loc 1 1199 0
 1611 002e 3B1C     		mov	r3, r7
 1612 0030 0F33     		add	r3, r3, #15
 1613 0032 1B78     		ldrb	r3, [r3]
 1614 0034 181C     		mov	r0, r3
 1615 0036 FFF7FEFF 		bl	CyExitCriticalSection
1200:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1616              		.loc 1 1200 0
 1617 003a BD46     		mov	sp, r7
 1618 003c 05B0     		add	sp, sp, #20
 1619              		@ sp needed
 1620 003e 90BD     		pop	{r4, r7, pc}
 1621              	.L107:
 1622              		.align	2
 1623              	.L106:
 1624 0040 24010540 		.word	1074069796
 1625              		.cfi_endproc
 1626              	.LFE32:
 1627              		.size	TCPWM_1_SetCountMode, .-TCPWM_1_SetCountMode
 1628              		.section	.text.TCPWM_1_TriggerCommand,"ax",%progbits
 1629              		.align	2
 1630              		.global	TCPWM_1_TriggerCommand
 1631              		.code	16
 1632              		.thumb_func
 1633              		.type	TCPWM_1_TriggerCommand, %function
 1634              	TCPWM_1_TriggerCommand:
 1635              	.LFB33:
1201:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1202:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1203:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_TriggerCommand
1205:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1207:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1208:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1209:.\Generated_Source\PSoC4/TCPWM_1.c **** *  The mask can be used to apply this command simultaneously to more than one
1210:.\Generated_Source\PSoC4/TCPWM_1.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1211:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1212:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1213:.\Generated_Source\PSoC4/TCPWM_1.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1214:.\Generated_Source\PSoC4/TCPWM_1.c **** *        command should apply to.  This function from one instance can be used
1215:.\Generated_Source\PSoC4/TCPWM_1.c **** *        to apply the command to any of the instances in the design.
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 51


1216:.\Generated_Source\PSoC4/TCPWM_1.c **** *        The mask value for a specific instance is available with the MASK
1217:.\Generated_Source\PSoC4/TCPWM_1.c **** *        define.
1218:.\Generated_Source\PSoC4/TCPWM_1.c **** *  command: Enumerated command values. Capture command only applicable for
1219:.\Generated_Source\PSoC4/TCPWM_1.c **** *           Timer/Counter with Capture and PWM modes.
1220:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1221:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_CMD_CAPTURE    - Trigger Capture command
1222:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_CMD_RELOAD     - Trigger Reload command
1223:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_CMD_STOP       - Trigger Stop command
1224:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_CMD_START      - Trigger Start command
1225:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1226:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1227:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1228:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1229:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1230:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_TriggerCommand(uint32 mask, uint32 command)
1231:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1636              		.loc 1 1231 0
 1637              		.cfi_startproc
 1638 0000 90B5     		push	{r4, r7, lr}
 1639              		.cfi_def_cfa_offset 12
 1640              		.cfi_offset 4, -12
 1641              		.cfi_offset 7, -8
 1642              		.cfi_offset 14, -4
 1643 0002 85B0     		sub	sp, sp, #20
 1644              		.cfi_def_cfa_offset 32
 1645 0004 00AF     		add	r7, sp, #0
 1646              		.cfi_def_cfa_register 7
 1647 0006 7860     		str	r0, [r7, #4]
 1648 0008 3960     		str	r1, [r7]
1232:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1233:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1234:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1649              		.loc 1 1234 0
 1650 000a 3C1C     		mov	r4, r7
 1651 000c 0F34     		add	r4, r4, #15
 1652 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1653 0012 031C     		mov	r3, r0
 1654 0014 2370     		strb	r3, [r4]
1235:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1236:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_COMMAND_REG = ((uint32)(mask << command));
 1655              		.loc 1 1236 0
 1656 0016 084B     		ldr	r3, .L109
 1657 0018 3A68     		ldr	r2, [r7]
 1658 001a 7968     		ldr	r1, [r7, #4]
 1659 001c 081C     		mov	r0, r1
 1660 001e 9040     		lsl	r0, r0, r2
 1661 0020 021C     		mov	r2, r0
 1662 0022 1A60     		str	r2, [r3]
1237:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1238:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1663              		.loc 1 1238 0
 1664 0024 3B1C     		mov	r3, r7
 1665 0026 0F33     		add	r3, r3, #15
 1666 0028 1B78     		ldrb	r3, [r3]
 1667 002a 181C     		mov	r0, r3
 1668 002c FFF7FEFF 		bl	CyExitCriticalSection
1239:.\Generated_Source\PSoC4/TCPWM_1.c **** }
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 52


 1669              		.loc 1 1239 0
 1670 0030 BD46     		mov	sp, r7
 1671 0032 05B0     		add	sp, sp, #20
 1672              		@ sp needed
 1673 0034 90BD     		pop	{r4, r7, pc}
 1674              	.L110:
 1675 0036 C046     		.align	2
 1676              	.L109:
 1677 0038 08000540 		.word	1074069512
 1678              		.cfi_endproc
 1679              	.LFE33:
 1680              		.size	TCPWM_1_TriggerCommand, .-TCPWM_1_TriggerCommand
 1681              		.section	.text.TCPWM_1_ReadStatus,"ax",%progbits
 1682              		.align	2
 1683              		.global	TCPWM_1_ReadStatus
 1684              		.code	16
 1685              		.thumb_func
 1686              		.type	TCPWM_1_ReadStatus, %function
 1687              	TCPWM_1_ReadStatus:
 1688              	.LFB34:
1240:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1241:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1242:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1243:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadStatus
1244:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1245:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1246:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1247:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the status of the TCPWM_1.
1248:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1249:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1250:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1251:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1252:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1253:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Status
1254:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1255:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_STATUS_DOWN    - Set if counting down
1256:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_STATUS_RUNNING - Set if counter is running
1257:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1258:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1259:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadStatus(void)
1260:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1689              		.loc 1 1260 0
 1690              		.cfi_startproc
 1691 0000 80B5     		push	{r7, lr}
 1692              		.cfi_def_cfa_offset 8
 1693              		.cfi_offset 7, -8
 1694              		.cfi_offset 14, -4
 1695 0002 00AF     		add	r7, sp, #0
 1696              		.cfi_def_cfa_register 7
1261:.\Generated_Source\PSoC4/TCPWM_1.c ****     return ((TCPWM_1_STATUS_REG >> TCPWM_1_RUNNING_STATUS_SHIFT) |
 1697              		.loc 1 1261 0
 1698 0004 054B     		ldr	r3, .L113
 1699 0006 1B68     		ldr	r3, [r3]
 1700 0008 9A0F     		lsr	r2, r3, #30
1262:.\Generated_Source\PSoC4/TCPWM_1.c ****             (TCPWM_1_STATUS_REG & TCPWM_1_STATUS_DOWN));
 1701              		.loc 1 1262 0
 1702 000a 044B     		ldr	r3, .L113
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 53


 1703 000c 1968     		ldr	r1, [r3]
 1704 000e 0123     		mov	r3, #1
 1705 0010 0B40     		and	r3, r1
1261:.\Generated_Source\PSoC4/TCPWM_1.c ****     return ((TCPWM_1_STATUS_REG >> TCPWM_1_RUNNING_STATUS_SHIFT) |
 1706              		.loc 1 1261 0
 1707 0012 1343     		orr	r3, r2
1263:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1708              		.loc 1 1263 0
 1709 0014 181C     		mov	r0, r3
 1710 0016 BD46     		mov	sp, r7
 1711              		@ sp needed
 1712 0018 80BD     		pop	{r7, pc}
 1713              	.L114:
 1714 001a C046     		.align	2
 1715              	.L113:
 1716 001c 04010540 		.word	1074069764
 1717              		.cfi_endproc
 1718              	.LFE34:
 1719              		.size	TCPWM_1_ReadStatus, .-TCPWM_1_ReadStatus
 1720              		.section	.text.TCPWM_1_SetInterruptMode,"ax",%progbits
 1721              		.align	2
 1722              		.global	TCPWM_1_SetInterruptMode
 1723              		.code	16
 1724              		.thumb_func
 1725              		.type	TCPWM_1_SetInterruptMode, %function
 1726              	TCPWM_1_SetInterruptMode:
 1727              	.LFB35:
1264:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1265:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1266:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1267:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetInterruptMode
1268:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1269:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1270:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1271:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the interrupt mask to control which interrupt
1272:.\Generated_Source\PSoC4/TCPWM_1.c **** *  requests generate the interrupt signal.
1273:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1274:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1275:.\Generated_Source\PSoC4/TCPWM_1.c **** *   interruptMask: Mask of bits to be enabled
1276:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1277:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1278:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1279:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1280:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1281:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1282:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1283:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetInterruptMode(uint32 interruptMask)
1285:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1728              		.loc 1 1285 0
 1729              		.cfi_startproc
 1730 0000 80B5     		push	{r7, lr}
 1731              		.cfi_def_cfa_offset 8
 1732              		.cfi_offset 7, -8
 1733              		.cfi_offset 14, -4
 1734 0002 82B0     		sub	sp, sp, #8
 1735              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 54


 1736 0004 00AF     		add	r7, sp, #0
 1737              		.cfi_def_cfa_register 7
 1738 0006 7860     		str	r0, [r7, #4]
1286:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_INTERRUPT_MASK_REG =  interruptMask;
 1739              		.loc 1 1286 0
 1740 0008 024B     		ldr	r3, .L116
 1741 000a 7A68     		ldr	r2, [r7, #4]
 1742 000c 1A60     		str	r2, [r3]
1287:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1743              		.loc 1 1287 0
 1744 000e BD46     		mov	sp, r7
 1745 0010 02B0     		add	sp, sp, #8
 1746              		@ sp needed
 1747 0012 80BD     		pop	{r7, pc}
 1748              	.L117:
 1749              		.align	2
 1750              	.L116:
 1751 0014 38010540 		.word	1074069816
 1752              		.cfi_endproc
 1753              	.LFE35:
 1754              		.size	TCPWM_1_SetInterruptMode, .-TCPWM_1_SetInterruptMode
 1755              		.section	.text.TCPWM_1_GetInterruptSourceMasked,"ax",%progbits
 1756              		.align	2
 1757              		.global	TCPWM_1_GetInterruptSourceMasked
 1758              		.code	16
 1759              		.thumb_func
 1760              		.type	TCPWM_1_GetInterruptSourceMasked, %function
 1761              	TCPWM_1_GetInterruptSourceMasked:
 1762              	.LFB36:
1288:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1289:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1290:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_GetInterruptSourceMasked
1292:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1294:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1295:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Gets the interrupt requests masked by the interrupt mask.
1296:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1297:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1298:.\Generated_Source\PSoC4/TCPWM_1.c **** *   None
1299:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1300:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1301:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Masked interrupt source
1302:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1303:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1304:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1305:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1306:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1307:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_GetInterruptSourceMasked(void)
1308:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1763              		.loc 1 1308 0
 1764              		.cfi_startproc
 1765 0000 80B5     		push	{r7, lr}
 1766              		.cfi_def_cfa_offset 8
 1767              		.cfi_offset 7, -8
 1768              		.cfi_offset 14, -4
 1769 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 55


 1770              		.cfi_def_cfa_register 7
1309:.\Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_INTERRUPT_MASKED_REG);
 1771              		.loc 1 1309 0
 1772 0004 024B     		ldr	r3, .L120
 1773 0006 1B68     		ldr	r3, [r3]
1310:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1774              		.loc 1 1310 0
 1775 0008 181C     		mov	r0, r3
 1776 000a BD46     		mov	sp, r7
 1777              		@ sp needed
 1778 000c 80BD     		pop	{r7, pc}
 1779              	.L121:
 1780 000e C046     		.align	2
 1781              	.L120:
 1782 0010 3C010540 		.word	1074069820
 1783              		.cfi_endproc
 1784              	.LFE36:
 1785              		.size	TCPWM_1_GetInterruptSourceMasked, .-TCPWM_1_GetInterruptSourceMasked
 1786              		.section	.text.TCPWM_1_GetInterruptSource,"ax",%progbits
 1787              		.align	2
 1788              		.global	TCPWM_1_GetInterruptSource
 1789              		.code	16
 1790              		.thumb_func
 1791              		.type	TCPWM_1_GetInterruptSource, %function
 1792              	TCPWM_1_GetInterruptSource:
 1793              	.LFB37:
1311:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1312:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1313:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1314:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_GetInterruptSource
1315:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1316:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1317:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1318:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Gets the interrupt requests (without masking).
1319:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1320:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1321:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1322:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1323:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1324:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Interrupt request value
1325:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1326:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1327:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1328:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1329:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_GetInterruptSource(void)
1331:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1794              		.loc 1 1331 0
 1795              		.cfi_startproc
 1796 0000 80B5     		push	{r7, lr}
 1797              		.cfi_def_cfa_offset 8
 1798              		.cfi_offset 7, -8
 1799              		.cfi_offset 14, -4
 1800 0002 00AF     		add	r7, sp, #0
 1801              		.cfi_def_cfa_register 7
1332:.\Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_INTERRUPT_REQ_REG);
 1802              		.loc 1 1332 0
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 56


 1803 0004 024B     		ldr	r3, .L124
 1804 0006 1B68     		ldr	r3, [r3]
1333:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1805              		.loc 1 1333 0
 1806 0008 181C     		mov	r0, r3
 1807 000a BD46     		mov	sp, r7
 1808              		@ sp needed
 1809 000c 80BD     		pop	{r7, pc}
 1810              	.L125:
 1811 000e C046     		.align	2
 1812              	.L124:
 1813 0010 30010540 		.word	1074069808
 1814              		.cfi_endproc
 1815              	.LFE37:
 1816              		.size	TCPWM_1_GetInterruptSource, .-TCPWM_1_GetInterruptSource
 1817              		.section	.text.TCPWM_1_ClearInterrupt,"ax",%progbits
 1818              		.align	2
 1819              		.global	TCPWM_1_ClearInterrupt
 1820              		.code	16
 1821              		.thumb_func
 1822              		.type	TCPWM_1_ClearInterrupt, %function
 1823              	TCPWM_1_ClearInterrupt:
 1824              	.LFB38:
1334:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1335:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1336:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1337:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ClearInterrupt
1338:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1339:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1340:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1341:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Clears the interrupt request.
1342:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1343:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1344:.\Generated_Source\PSoC4/TCPWM_1.c **** *   interruptMask: Mask of interrupts to clear
1345:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1346:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1347:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1348:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1349:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1350:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1351:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1352:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1353:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_ClearInterrupt(uint32 interruptMask)
1354:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1825              		.loc 1 1354 0
 1826              		.cfi_startproc
 1827 0000 80B5     		push	{r7, lr}
 1828              		.cfi_def_cfa_offset 8
 1829              		.cfi_offset 7, -8
 1830              		.cfi_offset 14, -4
 1831 0002 82B0     		sub	sp, sp, #8
 1832              		.cfi_def_cfa_offset 16
 1833 0004 00AF     		add	r7, sp, #0
 1834              		.cfi_def_cfa_register 7
 1835 0006 7860     		str	r0, [r7, #4]
1355:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_INTERRUPT_REQ_REG = interruptMask;
 1836              		.loc 1 1355 0
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 57


 1837 0008 024B     		ldr	r3, .L127
 1838 000a 7A68     		ldr	r2, [r7, #4]
 1839 000c 1A60     		str	r2, [r3]
1356:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1840              		.loc 1 1356 0
 1841 000e BD46     		mov	sp, r7
 1842 0010 02B0     		add	sp, sp, #8
 1843              		@ sp needed
 1844 0012 80BD     		pop	{r7, pc}
 1845              	.L128:
 1846              		.align	2
 1847              	.L127:
 1848 0014 30010540 		.word	1074069808
 1849              		.cfi_endproc
 1850              	.LFE38:
 1851              		.size	TCPWM_1_ClearInterrupt, .-TCPWM_1_ClearInterrupt
 1852              		.section	.text.TCPWM_1_SetInterrupt,"ax",%progbits
 1853              		.align	2
 1854              		.global	TCPWM_1_SetInterrupt
 1855              		.code	16
 1856              		.thumb_func
 1857              		.type	TCPWM_1_SetInterrupt, %function
 1858              	TCPWM_1_SetInterrupt:
 1859              	.LFB39:
1357:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1358:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1359:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetInterrupt
1361:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1363:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1364:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets a software interrupt request.
1365:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1366:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1367:.\Generated_Source\PSoC4/TCPWM_1.c **** *   interruptMask: Mask of interrupts to set
1368:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1369:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1370:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1371:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1372:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1373:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1374:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1375:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1376:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetInterrupt(uint32 interruptMask)
1377:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1860              		.loc 1 1377 0
 1861              		.cfi_startproc
 1862 0000 80B5     		push	{r7, lr}
 1863              		.cfi_def_cfa_offset 8
 1864              		.cfi_offset 7, -8
 1865              		.cfi_offset 14, -4
 1866 0002 82B0     		sub	sp, sp, #8
 1867              		.cfi_def_cfa_offset 16
 1868 0004 00AF     		add	r7, sp, #0
 1869              		.cfi_def_cfa_register 7
 1870 0006 7860     		str	r0, [r7, #4]
1378:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_INTERRUPT_SET_REG = interruptMask;
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 58


 1871              		.loc 1 1378 0
 1872 0008 024B     		ldr	r3, .L130
 1873 000a 7A68     		ldr	r2, [r7, #4]
 1874 000c 1A60     		str	r2, [r3]
1379:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1875              		.loc 1 1379 0
 1876 000e BD46     		mov	sp, r7
 1877 0010 02B0     		add	sp, sp, #8
 1878              		@ sp needed
 1879 0012 80BD     		pop	{r7, pc}
 1880              	.L131:
 1881              		.align	2
 1882              	.L130:
 1883 0014 34010540 		.word	1074069812
 1884              		.cfi_endproc
 1885              	.LFE39:
 1886              		.size	TCPWM_1_SetInterrupt, .-TCPWM_1_SetInterrupt
 1887              		.text
 1888              	.Letext0:
 1889              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1890              		.section	.debug_info,"",%progbits
 1891              	.Ldebug_info0:
 1892 0000 EC060000 		.4byte	0x6ec
 1893 0004 0400     		.2byte	0x4
 1894 0006 00000000 		.4byte	.Ldebug_abbrev0
 1895 000a 04       		.byte	0x4
 1896 000b 01       		.uleb128 0x1
 1897 000c 1A030000 		.4byte	.LASF76
 1898 0010 01       		.byte	0x1
 1899 0011 FB010000 		.4byte	.LASF77
 1900 0015 59050000 		.4byte	.LASF78
 1901 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1902 001d 00000000 		.4byte	0
 1903 0021 00000000 		.4byte	.Ldebug_line0
 1904 0025 02       		.uleb128 0x2
 1905 0026 01       		.byte	0x1
 1906 0027 06       		.byte	0x6
 1907 0028 D3000000 		.4byte	.LASF0
 1908 002c 02       		.uleb128 0x2
 1909 002d 01       		.byte	0x1
 1910 002e 08       		.byte	0x8
 1911 002f C1030000 		.4byte	.LASF1
 1912 0033 02       		.uleb128 0x2
 1913 0034 02       		.byte	0x2
 1914 0035 05       		.byte	0x5
 1915 0036 10040000 		.4byte	.LASF2
 1916 003a 02       		.uleb128 0x2
 1917 003b 02       		.byte	0x2
 1918 003c 07       		.byte	0x7
 1919 003d 1E020000 		.4byte	.LASF3
 1920 0041 02       		.uleb128 0x2
 1921 0042 04       		.byte	0x4
 1922 0043 05       		.byte	0x5
 1923 0044 FA000000 		.4byte	.LASF4
 1924 0048 02       		.uleb128 0x2
 1925 0049 04       		.byte	0x4
 1926 004a 07       		.byte	0x7
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 59


 1927 004b E0010000 		.4byte	.LASF5
 1928 004f 02       		.uleb128 0x2
 1929 0050 08       		.byte	0x8
 1930 0051 05       		.byte	0x5
 1931 0052 C5000000 		.4byte	.LASF6
 1932 0056 02       		.uleb128 0x2
 1933 0057 08       		.byte	0x8
 1934 0058 07       		.byte	0x7
 1935 0059 7A000000 		.4byte	.LASF7
 1936 005d 03       		.uleb128 0x3
 1937 005e 04       		.byte	0x4
 1938 005f 05       		.byte	0x5
 1939 0060 696E7400 		.ascii	"int\000"
 1940 0064 02       		.uleb128 0x2
 1941 0065 04       		.byte	0x4
 1942 0066 07       		.byte	0x7
 1943 0067 B4010000 		.4byte	.LASF8
 1944 006b 04       		.uleb128 0x4
 1945 006c 1B010000 		.4byte	.LASF9
 1946 0070 02       		.byte	0x2
 1947 0071 A1       		.byte	0xa1
 1948 0072 2C000000 		.4byte	0x2c
 1949 0076 04       		.uleb128 0x4
 1950 0077 3F010000 		.4byte	.LASF10
 1951 007b 02       		.byte	0x2
 1952 007c A3       		.byte	0xa3
 1953 007d 48000000 		.4byte	0x48
 1954 0081 02       		.uleb128 0x2
 1955 0082 04       		.byte	0x4
 1956 0083 04       		.byte	0x4
 1957 0084 0A030000 		.4byte	.LASF11
 1958 0088 02       		.uleb128 0x2
 1959 0089 08       		.byte	0x8
 1960 008a 04       		.byte	0x4
 1961 008b 38010000 		.4byte	.LASF12
 1962 008f 02       		.uleb128 0x2
 1963 0090 01       		.byte	0x1
 1964 0091 08       		.byte	0x8
 1965 0092 7E040000 		.4byte	.LASF13
 1966 0096 05       		.uleb128 0x5
 1967 0097 67020000 		.4byte	.LASF14
 1968 009b 02       		.byte	0x2
 1969 009c 4D01     		.2byte	0x14d
 1970 009e A2000000 		.4byte	0xa2
 1971 00a2 06       		.uleb128 0x6
 1972 00a3 76000000 		.4byte	0x76
 1973 00a7 02       		.uleb128 0x2
 1974 00a8 04       		.byte	0x4
 1975 00a9 07       		.byte	0x7
 1976 00aa 90020000 		.4byte	.LASF15
 1977 00ae 07       		.uleb128 0x7
 1978 00af A8020000 		.4byte	.LASF16
 1979 00b3 01       		.byte	0x1
 1980 00b4 26       		.byte	0x26
 1981 00b5 00000000 		.4byte	.LFB0
 1982 00b9 44000000 		.4byte	.LFE0-.LFB0
 1983 00bd 01       		.uleb128 0x1
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 60


 1984 00be 9C       		.byte	0x9c
 1985 00bf 08       		.uleb128 0x8
 1986 00c0 81020000 		.4byte	.LASF18
 1987 00c4 01       		.byte	0x1
 1988 00c5 B1       		.byte	0xb1
 1989 00c6 00000000 		.4byte	.LFB1
 1990 00ca 38000000 		.4byte	.LFE1-.LFB1
 1991 00ce 01       		.uleb128 0x1
 1992 00cf 9C       		.byte	0x9c
 1993 00d0 E3000000 		.4byte	0xe3
 1994 00d4 09       		.uleb128 0x9
 1995 00d5 D3040000 		.4byte	.LASF20
 1996 00d9 01       		.byte	0x1
 1997 00da B3       		.byte	0xb3
 1998 00db 6B000000 		.4byte	0x6b
 1999 00df 02       		.uleb128 0x2
 2000 00e0 91       		.byte	0x91
 2001 00e1 6F       		.sleb128 -17
 2002 00e2 00       		.byte	0
 2003 00e3 07       		.uleb128 0x7
 2004 00e4 E7020000 		.4byte	.LASF17
 2005 00e8 01       		.byte	0x1
 2006 00e9 E0       		.byte	0xe0
 2007 00ea 00000000 		.4byte	.LFB2
 2008 00ee 24000000 		.4byte	.LFE2-.LFB2
 2009 00f2 01       		.uleb128 0x1
 2010 00f3 9C       		.byte	0x9c
 2011 00f4 08       		.uleb128 0x8
 2012 00f5 A1000000 		.4byte	.LASF19
 2013 00f9 01       		.byte	0x1
 2014 00fa FA       		.byte	0xfa
 2015 00fb 00000000 		.4byte	.LFB3
 2016 00ff 30000000 		.4byte	.LFE3-.LFB3
 2017 0103 01       		.uleb128 0x1
 2018 0104 9C       		.byte	0x9c
 2019 0105 18010000 		.4byte	0x118
 2020 0109 09       		.uleb128 0x9
 2021 010a D3040000 		.4byte	.LASF20
 2022 010e 01       		.byte	0x1
 2023 010f FC       		.byte	0xfc
 2024 0110 6B000000 		.4byte	0x6b
 2025 0114 02       		.uleb128 0x2
 2026 0115 91       		.byte	0x91
 2027 0116 6F       		.sleb128 -17
 2028 0117 00       		.byte	0
 2029 0118 0A       		.uleb128 0xa
 2030 0119 2E000000 		.4byte	.LASF21
 2031 011d 01       		.byte	0x1
 2032 011e 1F01     		.2byte	0x11f
 2033 0120 00000000 		.4byte	.LFB4
 2034 0124 48000000 		.4byte	.LFE4-.LFB4
 2035 0128 01       		.uleb128 0x1
 2036 0129 9C       		.byte	0x9c
 2037 012a 4D010000 		.4byte	0x14d
 2038 012e 0B       		.uleb128 0xb
 2039 012f 83040000 		.4byte	.LASF23
 2040 0133 01       		.byte	0x1
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 61


 2041 0134 1F01     		.2byte	0x11f
 2042 0136 76000000 		.4byte	0x76
 2043 013a 02       		.uleb128 0x2
 2044 013b 91       		.byte	0x91
 2045 013c 64       		.sleb128 -28
 2046 013d 0C       		.uleb128 0xc
 2047 013e D3040000 		.4byte	.LASF20
 2048 0142 01       		.byte	0x1
 2049 0143 2101     		.2byte	0x121
 2050 0145 6B000000 		.4byte	0x6b
 2051 0149 02       		.uleb128 0x2
 2052 014a 91       		.byte	0x91
 2053 014b 6F       		.sleb128 -17
 2054 014c 00       		.byte	0
 2055 014d 0A       		.uleb128 0xa
 2056 014e 3E000000 		.4byte	.LASF22
 2057 0152 01       		.byte	0x1
 2058 0153 4001     		.2byte	0x140
 2059 0155 00000000 		.4byte	.LFB5
 2060 0159 48000000 		.4byte	.LFE5-.LFB5
 2061 015d 01       		.uleb128 0x1
 2062 015e 9C       		.byte	0x9c
 2063 015f 82010000 		.4byte	0x182
 2064 0163 0B       		.uleb128 0xb
 2065 0164 F3000000 		.4byte	.LASF24
 2066 0168 01       		.byte	0x1
 2067 0169 4001     		.2byte	0x140
 2068 016b 76000000 		.4byte	0x76
 2069 016f 02       		.uleb128 0x2
 2070 0170 91       		.byte	0x91
 2071 0171 64       		.sleb128 -28
 2072 0172 0C       		.uleb128 0xc
 2073 0173 D3040000 		.4byte	.LASF20
 2074 0177 01       		.byte	0x1
 2075 0178 4201     		.2byte	0x142
 2076 017a 6B000000 		.4byte	0x6b
 2077 017e 02       		.uleb128 0x2
 2078 017f 91       		.byte	0x91
 2079 0180 6F       		.sleb128 -17
 2080 0181 00       		.byte	0
 2081 0182 0A       		.uleb128 0xa
 2082 0183 50000000 		.4byte	.LASF25
 2083 0187 01       		.byte	0x1
 2084 0188 6501     		.2byte	0x165
 2085 018a 00000000 		.4byte	.LFB6
 2086 018e 48000000 		.4byte	.LFE6-.LFB6
 2087 0192 01       		.uleb128 0x1
 2088 0193 9C       		.byte	0x9c
 2089 0194 B7010000 		.4byte	0x1b7
 2090 0198 0B       		.uleb128 0xb
 2091 0199 10030000 		.4byte	.LASF26
 2092 019d 01       		.byte	0x1
 2093 019e 6501     		.2byte	0x165
 2094 01a0 76000000 		.4byte	0x76
 2095 01a4 02       		.uleb128 0x2
 2096 01a5 91       		.byte	0x91
 2097 01a6 64       		.sleb128 -28
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 62


 2098 01a7 0C       		.uleb128 0xc
 2099 01a8 D3040000 		.4byte	.LASF20
 2100 01ac 01       		.byte	0x1
 2101 01ad 6701     		.2byte	0x167
 2102 01af 6B000000 		.4byte	0x6b
 2103 01b3 02       		.uleb128 0x2
 2104 01b4 91       		.byte	0x91
 2105 01b5 6F       		.sleb128 -17
 2106 01b6 00       		.byte	0
 2107 01b7 0A       		.uleb128 0xa
 2108 01b8 54020000 		.4byte	.LASF27
 2109 01bc 01       		.byte	0x1
 2110 01bd 8501     		.2byte	0x185
 2111 01bf 00000000 		.4byte	.LFB7
 2112 01c3 4C000000 		.4byte	.LFE7-.LFB7
 2113 01c7 01       		.uleb128 0x1
 2114 01c8 9C       		.byte	0x9c
 2115 01c9 EC010000 		.4byte	0x1ec
 2116 01cd 0B       		.uleb128 0xb
 2117 01ce 31020000 		.4byte	.LASF28
 2118 01d2 01       		.byte	0x1
 2119 01d3 8501     		.2byte	0x185
 2120 01d5 76000000 		.4byte	0x76
 2121 01d9 02       		.uleb128 0x2
 2122 01da 91       		.byte	0x91
 2123 01db 64       		.sleb128 -28
 2124 01dc 0C       		.uleb128 0xc
 2125 01dd D3040000 		.4byte	.LASF20
 2126 01e1 01       		.byte	0x1
 2127 01e2 8701     		.2byte	0x187
 2128 01e4 6B000000 		.4byte	0x6b
 2129 01e8 02       		.uleb128 0x2
 2130 01e9 91       		.byte	0x91
 2131 01ea 6F       		.sleb128 -17
 2132 01eb 00       		.byte	0
 2133 01ec 0D       		.uleb128 0xd
 2134 01ed FB040000 		.4byte	.LASF29
 2135 01f1 01       		.byte	0x1
 2136 01f2 BB01     		.2byte	0x1bb
 2137 01f4 00000000 		.4byte	.LFB8
 2138 01f8 1C000000 		.4byte	.LFE8-.LFB8
 2139 01fc 01       		.uleb128 0x1
 2140 01fd 9C       		.byte	0x9c
 2141 01fe 12020000 		.4byte	0x212
 2142 0202 0B       		.uleb128 0xb
 2143 0203 F2010000 		.4byte	.LASF30
 2144 0207 01       		.byte	0x1
 2145 0208 BB01     		.2byte	0x1bb
 2146 020a 76000000 		.4byte	0x76
 2147 020e 02       		.uleb128 0x2
 2148 020f 91       		.byte	0x91
 2149 0210 74       		.sleb128 -12
 2150 0211 00       		.byte	0
 2151 0212 0A       		.uleb128 0xa
 2152 0213 00000000 		.4byte	.LASF31
 2153 0217 01       		.byte	0x1
 2154 0218 DF01     		.2byte	0x1df
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 63


 2155 021a 00000000 		.4byte	.LFB9
 2156 021e 48000000 		.4byte	.LFE9-.LFB9
 2157 0222 01       		.uleb128 0x1
 2158 0223 9C       		.byte	0x9c
 2159 0224 47020000 		.4byte	0x247
 2160 0228 0B       		.uleb128 0xb
 2161 0229 99020000 		.4byte	.LASF32
 2162 022d 01       		.byte	0x1
 2163 022e DF01     		.2byte	0x1df
 2164 0230 76000000 		.4byte	0x76
 2165 0234 02       		.uleb128 0x2
 2166 0235 91       		.byte	0x91
 2167 0236 64       		.sleb128 -28
 2168 0237 0C       		.uleb128 0xc
 2169 0238 D3040000 		.4byte	.LASF20
 2170 023c 01       		.byte	0x1
 2171 023d E101     		.2byte	0x1e1
 2172 023f 6B000000 		.4byte	0x6b
 2173 0243 02       		.uleb128 0x2
 2174 0244 91       		.byte	0x91
 2175 0245 6F       		.sleb128 -17
 2176 0246 00       		.byte	0
 2177 0247 0A       		.uleb128 0xa
 2178 0248 5D010000 		.4byte	.LASF33
 2179 024c 01       		.byte	0x1
 2180 024d 0102     		.2byte	0x201
 2181 024f 00000000 		.4byte	.LFB10
 2182 0253 48000000 		.4byte	.LFE10-.LFB10
 2183 0257 01       		.uleb128 0x1
 2184 0258 9C       		.byte	0x9c
 2185 0259 7C020000 		.4byte	0x27c
 2186 025d 0B       		.uleb128 0xb
 2187 025e E4030000 		.4byte	.LASF34
 2188 0262 01       		.byte	0x1
 2189 0263 0102     		.2byte	0x201
 2190 0265 76000000 		.4byte	0x76
 2191 0269 02       		.uleb128 0x2
 2192 026a 91       		.byte	0x91
 2193 026b 64       		.sleb128 -28
 2194 026c 0C       		.uleb128 0xc
 2195 026d D3040000 		.4byte	.LASF20
 2196 0271 01       		.byte	0x1
 2197 0272 0302     		.2byte	0x203
 2198 0274 6B000000 		.4byte	0x6b
 2199 0278 02       		.uleb128 0x2
 2200 0279 91       		.byte	0x91
 2201 027a 6F       		.sleb128 -17
 2202 027b 00       		.byte	0
 2203 027c 0A       		.uleb128 0xa
 2204 027d B5020000 		.4byte	.LASF35
 2205 0281 01       		.byte	0x1
 2206 0282 2202     		.2byte	0x222
 2207 0284 00000000 		.4byte	.LFB11
 2208 0288 4C000000 		.4byte	.LFE11-.LFB11
 2209 028c 01       		.uleb128 0x1
 2210 028d 9C       		.byte	0x9c
 2211 028e B1020000 		.4byte	0x2b1
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 64


 2212 0292 0B       		.uleb128 0xb
 2213 0293 8A010000 		.4byte	.LASF36
 2214 0297 01       		.byte	0x1
 2215 0298 2202     		.2byte	0x222
 2216 029a 76000000 		.4byte	0x76
 2217 029e 02       		.uleb128 0x2
 2218 029f 91       		.byte	0x91
 2219 02a0 64       		.sleb128 -28
 2220 02a1 0C       		.uleb128 0xc
 2221 02a2 D3040000 		.4byte	.LASF20
 2222 02a6 01       		.byte	0x1
 2223 02a7 2402     		.2byte	0x224
 2224 02a9 6B000000 		.4byte	0x6b
 2225 02ad 02       		.uleb128 0x2
 2226 02ae 91       		.byte	0x91
 2227 02af 6F       		.sleb128 -17
 2228 02b0 00       		.byte	0
 2229 02b1 0A       		.uleb128 0xa
 2230 02b2 0E050000 		.4byte	.LASF37
 2231 02b6 01       		.byte	0x1
 2232 02b7 4302     		.2byte	0x243
 2233 02b9 00000000 		.4byte	.LFB12
 2234 02bd 48000000 		.4byte	.LFE12-.LFB12
 2235 02c1 01       		.uleb128 0x1
 2236 02c2 9C       		.byte	0x9c
 2237 02c3 E6020000 		.4byte	0x2e6
 2238 02c7 0B       		.uleb128 0xb
 2239 02c8 58010000 		.4byte	.LASF38
 2240 02cc 01       		.byte	0x1
 2241 02cd 4302     		.2byte	0x243
 2242 02cf 76000000 		.4byte	0x76
 2243 02d3 02       		.uleb128 0x2
 2244 02d4 91       		.byte	0x91
 2245 02d5 64       		.sleb128 -28
 2246 02d6 0C       		.uleb128 0xc
 2247 02d7 D3040000 		.4byte	.LASF20
 2248 02db 01       		.byte	0x1
 2249 02dc 4502     		.2byte	0x245
 2250 02de 6B000000 		.4byte	0x6b
 2251 02e2 02       		.uleb128 0x2
 2252 02e3 91       		.byte	0x91
 2253 02e4 6F       		.sleb128 -17
 2254 02e5 00       		.byte	0
 2255 02e6 0D       		.uleb128 0xd
 2256 02e7 65000000 		.4byte	.LASF39
 2257 02eb 01       		.byte	0x1
 2258 02ec 6102     		.2byte	0x261
 2259 02ee 00000000 		.4byte	.LFB13
 2260 02f2 1C000000 		.4byte	.LFE13-.LFB13
 2261 02f6 01       		.uleb128 0x1
 2262 02f7 9C       		.byte	0x9c
 2263 02f8 0C030000 		.4byte	0x30c
 2264 02fc 0B       		.uleb128 0xb
 2265 02fd 46010000 		.4byte	.LASF40
 2266 0301 01       		.byte	0x1
 2267 0302 6102     		.2byte	0x261
 2268 0304 76000000 		.4byte	0x76
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 65


 2269 0308 02       		.uleb128 0x2
 2270 0309 91       		.byte	0x91
 2271 030a 74       		.sleb128 -12
 2272 030b 00       		.byte	0
 2273 030c 0E       		.uleb128 0xe
 2274 030d 76010000 		.4byte	.LASF45
 2275 0311 01       		.byte	0x1
 2276 0312 7502     		.2byte	0x275
 2277 0314 76000000 		.4byte	0x76
 2278 0318 00000000 		.4byte	.LFB14
 2279 031c 18000000 		.4byte	.LFE14-.LFB14
 2280 0320 01       		.uleb128 0x1
 2281 0321 9C       		.byte	0x9c
 2282 0322 0A       		.uleb128 0xa
 2283 0323 E4040000 		.4byte	.LASF41
 2284 0327 01       		.byte	0x1
 2285 0328 9202     		.2byte	0x292
 2286 032a 00000000 		.4byte	.LFB15
 2287 032e 48000000 		.4byte	.LFE15-.LFB15
 2288 0332 01       		.uleb128 0x1
 2289 0333 9C       		.byte	0x9c
 2290 0334 57030000 		.4byte	0x357
 2291 0338 0B       		.uleb128 0xb
 2292 0339 9C040000 		.4byte	.LASF42
 2293 033d 01       		.byte	0x1
 2294 033e 9202     		.2byte	0x292
 2295 0340 76000000 		.4byte	0x76
 2296 0344 02       		.uleb128 0x2
 2297 0345 91       		.byte	0x91
 2298 0346 64       		.sleb128 -28
 2299 0347 0C       		.uleb128 0xc
 2300 0348 D3040000 		.4byte	.LASF20
 2301 034c 01       		.byte	0x1
 2302 034d 9402     		.2byte	0x294
 2303 034f 6B000000 		.4byte	0x6b
 2304 0353 02       		.uleb128 0x2
 2305 0354 91       		.byte	0x91
 2306 0355 6F       		.sleb128 -17
 2307 0356 00       		.byte	0
 2308 0357 0D       		.uleb128 0xd
 2309 0358 96030000 		.4byte	.LASF43
 2310 035c 01       		.byte	0x1
 2311 035d AF02     		.2byte	0x2af
 2312 035f 00000000 		.4byte	.LFB16
 2313 0363 1C000000 		.4byte	.LFE16-.LFB16
 2314 0367 01       		.uleb128 0x1
 2315 0368 9C       		.byte	0x9c
 2316 0369 7D030000 		.4byte	0x37d
 2317 036d 0B       		.uleb128 0xb
 2318 036e A8040000 		.4byte	.LASF44
 2319 0372 01       		.byte	0x1
 2320 0373 AF02     		.2byte	0x2af
 2321 0375 76000000 		.4byte	0x76
 2322 0379 02       		.uleb128 0x2
 2323 037a 91       		.byte	0x91
 2324 037b 74       		.sleb128 -12
 2325 037c 00       		.byte	0
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 66


 2326 037d 0E       		.uleb128 0xe
 2327 037e 55040000 		.4byte	.LASF46
 2328 0382 01       		.byte	0x1
 2329 0383 C302     		.2byte	0x2c3
 2330 0385 76000000 		.4byte	0x76
 2331 0389 00000000 		.4byte	.LFB17
 2332 038d 18000000 		.4byte	.LFE17-.LFB17
 2333 0391 01       		.uleb128 0x1
 2334 0392 9C       		.byte	0x9c
 2335 0393 0A       		.uleb128 0xa
 2336 0394 AE000000 		.4byte	.LASF47
 2337 0398 01       		.byte	0x1
 2338 0399 DD02     		.2byte	0x2dd
 2339 039b 00000000 		.4byte	.LFB18
 2340 039f 48000000 		.4byte	.LFE18-.LFB18
 2341 03a3 01       		.uleb128 0x1
 2342 03a4 9C       		.byte	0x9c
 2343 03a5 C8030000 		.4byte	0x3c8
 2344 03a9 0B       		.uleb128 0xb
 2345 03aa 4E050000 		.4byte	.LASF48
 2346 03ae 01       		.byte	0x1
 2347 03af DD02     		.2byte	0x2dd
 2348 03b1 76000000 		.4byte	0x76
 2349 03b5 02       		.uleb128 0x2
 2350 03b6 91       		.byte	0x91
 2351 03b7 64       		.sleb128 -28
 2352 03b8 0C       		.uleb128 0xc
 2353 03b9 D3040000 		.4byte	.LASF20
 2354 03bd 01       		.byte	0x1
 2355 03be DF02     		.2byte	0x2df
 2356 03c0 6B000000 		.4byte	0x6b
 2357 03c4 02       		.uleb128 0x2
 2358 03c5 91       		.byte	0x91
 2359 03c6 6F       		.sleb128 -17
 2360 03c7 00       		.byte	0
 2361 03c8 0D       		.uleb128 0xd
 2362 03c9 AA030000 		.4byte	.LASF49
 2363 03cd 01       		.byte	0x1
 2364 03ce F802     		.2byte	0x2f8
 2365 03d0 00000000 		.4byte	.LFB19
 2366 03d4 1C000000 		.4byte	.LFE19-.LFB19
 2367 03d8 01       		.uleb128 0x1
 2368 03d9 9C       		.byte	0x9c
 2369 03da EE030000 		.4byte	0x3ee
 2370 03de 0B       		.uleb128 0xb
 2371 03df A0050000 		.4byte	.LASF50
 2372 03e3 01       		.byte	0x1
 2373 03e4 F802     		.2byte	0x2f8
 2374 03e6 76000000 		.4byte	0x76
 2375 03ea 02       		.uleb128 0x2
 2376 03eb 91       		.byte	0x91
 2377 03ec 74       		.sleb128 -12
 2378 03ed 00       		.byte	0
 2379 03ee 0E       		.uleb128 0xe
 2380 03ef 1A040000 		.4byte	.LASF51
 2381 03f3 01       		.byte	0x1
 2382 03f4 0C03     		.2byte	0x30c
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 67


 2383 03f6 76000000 		.4byte	0x76
 2384 03fa 00000000 		.4byte	.LFB20
 2385 03fe 18000000 		.4byte	.LFE20-.LFB20
 2386 0402 01       		.uleb128 0x1
 2387 0403 9C       		.byte	0x9c
 2388 0404 0A       		.uleb128 0xa
 2389 0405 68040000 		.4byte	.LASF52
 2390 0409 01       		.byte	0x1
 2391 040a 2603     		.2byte	0x326
 2392 040c 00000000 		.4byte	.LFB21
 2393 0410 48000000 		.4byte	.LFE21-.LFB21
 2394 0414 01       		.uleb128 0x1
 2395 0415 9C       		.byte	0x9c
 2396 0416 39040000 		.4byte	0x439
 2397 041a 0B       		.uleb128 0xb
 2398 041b 4E050000 		.4byte	.LASF48
 2399 041f 01       		.byte	0x1
 2400 0420 2603     		.2byte	0x326
 2401 0422 76000000 		.4byte	0x76
 2402 0426 02       		.uleb128 0x2
 2403 0427 91       		.byte	0x91
 2404 0428 64       		.sleb128 -28
 2405 0429 0C       		.uleb128 0xc
 2406 042a D3040000 		.4byte	.LASF20
 2407 042e 01       		.byte	0x1
 2408 042f 2803     		.2byte	0x328
 2409 0431 6B000000 		.4byte	0x6b
 2410 0435 02       		.uleb128 0x2
 2411 0436 91       		.byte	0x91
 2412 0437 6F       		.sleb128 -17
 2413 0438 00       		.byte	0
 2414 0439 0D       		.uleb128 0xd
 2415 043a CF030000 		.4byte	.LASF53
 2416 043e 01       		.byte	0x1
 2417 043f 4303     		.2byte	0x343
 2418 0441 00000000 		.4byte	.LFB22
 2419 0445 1C000000 		.4byte	.LFE22-.LFB22
 2420 0449 01       		.uleb128 0x1
 2421 044a 9C       		.byte	0x9c
 2422 044b 5F040000 		.4byte	0x45f
 2423 044f 0B       		.uleb128 0xb
 2424 0450 DF020000 		.4byte	.LASF54
 2425 0454 01       		.byte	0x1
 2426 0455 4303     		.2byte	0x343
 2427 0457 76000000 		.4byte	0x76
 2428 045b 02       		.uleb128 0x2
 2429 045c 91       		.byte	0x91
 2430 045d 74       		.sleb128 -12
 2431 045e 00       		.byte	0
 2432 045f 0E       		.uleb128 0xe
 2433 0460 DF000000 		.4byte	.LASF55
 2434 0464 01       		.byte	0x1
 2435 0465 6E03     		.2byte	0x36e
 2436 0467 76000000 		.4byte	0x76
 2437 046b 00000000 		.4byte	.LFB23
 2438 046f 18000000 		.4byte	.LFE23-.LFB23
 2439 0473 01       		.uleb128 0x1
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 68


 2440 0474 9C       		.byte	0x9c
 2441 0475 0D       		.uleb128 0xd
 2442 0476 03010000 		.4byte	.LASF56
 2443 047a 01       		.byte	0x1
 2444 047b 9C03     		.2byte	0x39c
 2445 047d 00000000 		.4byte	.LFB24
 2446 0481 1C000000 		.4byte	.LFE24-.LFB24
 2447 0485 01       		.uleb128 0x1
 2448 0486 9C       		.byte	0x9c
 2449 0487 9B040000 		.4byte	0x49b
 2450 048b 0B       		.uleb128 0xb
 2451 048c C8040000 		.4byte	.LASF57
 2452 0490 01       		.byte	0x1
 2453 0491 9C03     		.2byte	0x39c
 2454 0493 76000000 		.4byte	0x76
 2455 0497 02       		.uleb128 0x2
 2456 0498 91       		.byte	0x91
 2457 0499 74       		.sleb128 -12
 2458 049a 00       		.byte	0
 2459 049b 0E       		.uleb128 0xe
 2460 049c 3E040000 		.4byte	.LASF58
 2461 04a0 01       		.byte	0x1
 2462 04a1 C503     		.2byte	0x3c5
 2463 04a3 76000000 		.4byte	0x76
 2464 04a7 00000000 		.4byte	.LFB25
 2465 04ab 18000000 		.4byte	.LFE25-.LFB25
 2466 04af 01       		.uleb128 0x1
 2467 04b0 9C       		.byte	0x9c
 2468 04b1 0E       		.uleb128 0xe
 2469 04b2 88040000 		.4byte	.LASF59
 2470 04b6 01       		.byte	0x1
 2471 04b7 F303     		.2byte	0x3f3
 2472 04b9 76000000 		.4byte	0x76
 2473 04bd 00000000 		.4byte	.LFB26
 2474 04c1 18000000 		.4byte	.LFE26-.LFB26
 2475 04c5 01       		.uleb128 0x1
 2476 04c6 9C       		.byte	0x9c
 2477 04c7 0E       		.uleb128 0xe
 2478 04c8 17000000 		.4byte	.LASF60
 2479 04cc 01       		.byte	0x1
 2480 04cd 0804     		.2byte	0x408
 2481 04cf 76000000 		.4byte	0x76
 2482 04d3 00000000 		.4byte	.LFB27
 2483 04d7 18000000 		.4byte	.LFE27-.LFB27
 2484 04db 01       		.uleb128 0x1
 2485 04dc 9C       		.byte	0x9c
 2486 04dd 0A       		.uleb128 0xa
 2487 04de AA050000 		.4byte	.LASF61
 2488 04e2 01       		.byte	0x1
 2489 04e3 2304     		.2byte	0x423
 2490 04e5 00000000 		.4byte	.LFB28
 2491 04e9 44000000 		.4byte	.LFE28-.LFB28
 2492 04ed 01       		.uleb128 0x1
 2493 04ee 9C       		.byte	0x9c
 2494 04ef 12050000 		.4byte	0x512
 2495 04f3 0B       		.uleb128 0xb
 2496 04f4 4C010000 		.4byte	.LASF62
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 69


 2497 04f8 01       		.byte	0x1
 2498 04f9 2304     		.2byte	0x423
 2499 04fb 76000000 		.4byte	0x76
 2500 04ff 02       		.uleb128 0x2
 2501 0500 91       		.byte	0x91
 2502 0501 64       		.sleb128 -28
 2503 0502 0C       		.uleb128 0xc
 2504 0503 D3040000 		.4byte	.LASF20
 2505 0507 01       		.byte	0x1
 2506 0508 2504     		.2byte	0x425
 2507 050a 6B000000 		.4byte	0x6b
 2508 050e 02       		.uleb128 0x2
 2509 050f 91       		.byte	0x91
 2510 0510 6F       		.sleb128 -17
 2511 0511 00       		.byte	0
 2512 0512 0A       		.uleb128 0xa
 2513 0513 23050000 		.4byte	.LASF63
 2514 0517 01       		.byte	0x1
 2515 0518 4404     		.2byte	0x444
 2516 051a 00000000 		.4byte	.LFB29
 2517 051e 44000000 		.4byte	.LFE29-.LFB29
 2518 0522 01       		.uleb128 0x1
 2519 0523 9C       		.byte	0x9c
 2520 0524 47050000 		.4byte	0x547
 2521 0528 0B       		.uleb128 0xb
 2522 0529 4C010000 		.4byte	.LASF62
 2523 052d 01       		.byte	0x1
 2524 052e 4404     		.2byte	0x444
 2525 0530 76000000 		.4byte	0x76
 2526 0534 02       		.uleb128 0x2
 2527 0535 91       		.byte	0x91
 2528 0536 64       		.sleb128 -28
 2529 0537 0C       		.uleb128 0xc
 2530 0538 D3040000 		.4byte	.LASF20
 2531 053c 01       		.byte	0x1
 2532 053d 4604     		.2byte	0x446
 2533 053f 6B000000 		.4byte	0x6b
 2534 0543 02       		.uleb128 0x2
 2535 0544 91       		.byte	0x91
 2536 0545 6F       		.sleb128 -17
 2537 0546 00       		.byte	0
 2538 0547 0A       		.uleb128 0xa
 2539 0548 39050000 		.4byte	.LASF64
 2540 054c 01       		.byte	0x1
 2541 054d 6504     		.2byte	0x465
 2542 054f 00000000 		.4byte	.LFB30
 2543 0553 48000000 		.4byte	.LFE30-.LFB30
 2544 0557 01       		.uleb128 0x1
 2545 0558 9C       		.byte	0x9c
 2546 0559 7C050000 		.4byte	0x57c
 2547 055d 0B       		.uleb128 0xb
 2548 055e 4C010000 		.4byte	.LASF62
 2549 0562 01       		.byte	0x1
 2550 0563 6504     		.2byte	0x465
 2551 0565 76000000 		.4byte	0x76
 2552 0569 02       		.uleb128 0x2
 2553 056a 91       		.byte	0x91
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 70


 2554 056b 64       		.sleb128 -28
 2555 056c 0C       		.uleb128 0xc
 2556 056d D3040000 		.4byte	.LASF20
 2557 0571 01       		.byte	0x1
 2558 0572 6704     		.2byte	0x467
 2559 0574 6B000000 		.4byte	0x6b
 2560 0578 02       		.uleb128 0x2
 2561 0579 91       		.byte	0x91
 2562 057a 6F       		.sleb128 -17
 2563 057b 00       		.byte	0
 2564 057c 0A       		.uleb128 0xa
 2565 057d 6D020000 		.4byte	.LASF65
 2566 0581 01       		.byte	0x1
 2567 0582 8504     		.2byte	0x485
 2568 0584 00000000 		.4byte	.LFB31
 2569 0588 44000000 		.4byte	.LFE31-.LFB31
 2570 058c 01       		.uleb128 0x1
 2571 058d 9C       		.byte	0x9c
 2572 058e B1050000 		.4byte	0x5b1
 2573 0592 0B       		.uleb128 0xb
 2574 0593 4C010000 		.4byte	.LASF62
 2575 0597 01       		.byte	0x1
 2576 0598 8504     		.2byte	0x485
 2577 059a 76000000 		.4byte	0x76
 2578 059e 02       		.uleb128 0x2
 2579 059f 91       		.byte	0x91
 2580 05a0 64       		.sleb128 -28
 2581 05a1 0C       		.uleb128 0xc
 2582 05a2 D3040000 		.4byte	.LASF20
 2583 05a6 01       		.byte	0x1
 2584 05a7 8704     		.2byte	0x487
 2585 05a9 6B000000 		.4byte	0x6b
 2586 05ad 02       		.uleb128 0x2
 2587 05ae 91       		.byte	0x91
 2588 05af 6F       		.sleb128 -17
 2589 05b0 00       		.byte	0
 2590 05b1 0A       		.uleb128 0xa
 2591 05b2 F5020000 		.4byte	.LASF66
 2592 05b6 01       		.byte	0x1
 2593 05b7 A604     		.2byte	0x4a6
 2594 05b9 00000000 		.4byte	.LFB32
 2595 05bd 44000000 		.4byte	.LFE32-.LFB32
 2596 05c1 01       		.uleb128 0x1
 2597 05c2 9C       		.byte	0x9c
 2598 05c3 E6050000 		.4byte	0x5e6
 2599 05c7 0B       		.uleb128 0xb
 2600 05c8 4C010000 		.4byte	.LASF62
 2601 05cc 01       		.byte	0x1
 2602 05cd A604     		.2byte	0x4a6
 2603 05cf 76000000 		.4byte	0x76
 2604 05d3 02       		.uleb128 0x2
 2605 05d4 91       		.byte	0x91
 2606 05d5 64       		.sleb128 -28
 2607 05d6 0C       		.uleb128 0xc
 2608 05d7 D3040000 		.4byte	.LASF20
 2609 05db 01       		.byte	0x1
 2610 05dc A804     		.2byte	0x4a8
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 71


 2611 05de 6B000000 		.4byte	0x6b
 2612 05e2 02       		.uleb128 0x2
 2613 05e3 91       		.byte	0x91
 2614 05e4 6F       		.sleb128 -17
 2615 05e5 00       		.byte	0
 2616 05e6 0A       		.uleb128 0xa
 2617 05e7 C1010000 		.4byte	.LASF67
 2618 05eb 01       		.byte	0x1
 2619 05ec CE04     		.2byte	0x4ce
 2620 05ee 00000000 		.4byte	.LFB33
 2621 05f2 3C000000 		.4byte	.LFE33-.LFB33
 2622 05f6 01       		.uleb128 0x1
 2623 05f7 9C       		.byte	0x9c
 2624 05f8 2A060000 		.4byte	0x62a
 2625 05fc 0B       		.uleb128 0xb
 2626 05fd 58010000 		.4byte	.LASF38
 2627 0601 01       		.byte	0x1
 2628 0602 CE04     		.2byte	0x4ce
 2629 0604 76000000 		.4byte	0x76
 2630 0608 02       		.uleb128 0x2
 2631 0609 91       		.byte	0x91
 2632 060a 64       		.sleb128 -28
 2633 060b 0B       		.uleb128 0xb
 2634 060c D8010000 		.4byte	.LASF68
 2635 0610 01       		.byte	0x1
 2636 0611 CE04     		.2byte	0x4ce
 2637 0613 76000000 		.4byte	0x76
 2638 0617 02       		.uleb128 0x2
 2639 0618 91       		.byte	0x91
 2640 0619 60       		.sleb128 -32
 2641 061a 0C       		.uleb128 0xc
 2642 061b D3040000 		.4byte	.LASF20
 2643 061f 01       		.byte	0x1
 2644 0620 D004     		.2byte	0x4d0
 2645 0622 6B000000 		.4byte	0x6b
 2646 0626 02       		.uleb128 0x2
 2647 0627 91       		.byte	0x91
 2648 0628 6F       		.sleb128 -17
 2649 0629 00       		.byte	0
 2650 062a 0E       		.uleb128 0xe
 2651 062b CC020000 		.4byte	.LASF69
 2652 062f 01       		.byte	0x1
 2653 0630 EB04     		.2byte	0x4eb
 2654 0632 76000000 		.4byte	0x76
 2655 0636 00000000 		.4byte	.LFB34
 2656 063a 20000000 		.4byte	.LFE34-.LFB34
 2657 063e 01       		.uleb128 0x1
 2658 063f 9C       		.byte	0x9c
 2659 0640 0D       		.uleb128 0xd
 2660 0641 AF040000 		.4byte	.LASF70
 2661 0645 01       		.byte	0x1
 2662 0646 0405     		.2byte	0x504
 2663 0648 00000000 		.4byte	.LFB35
 2664 064c 18000000 		.4byte	.LFE35-.LFB35
 2665 0650 01       		.uleb128 0x1
 2666 0651 9C       		.byte	0x9c
 2667 0652 66060000 		.4byte	0x666
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 72


 2668 0656 0B       		.uleb128 0xb
 2669 0657 30040000 		.4byte	.LASF71
 2670 065b 01       		.byte	0x1
 2671 065c 0405     		.2byte	0x504
 2672 065e 76000000 		.4byte	0x76
 2673 0662 02       		.uleb128 0x2
 2674 0663 91       		.byte	0x91
 2675 0664 74       		.sleb128 -12
 2676 0665 00       		.byte	0
 2677 0666 0E       		.uleb128 0xe
 2678 0667 93010000 		.4byte	.LASF72
 2679 066b 01       		.byte	0x1
 2680 066c 1B05     		.2byte	0x51b
 2681 066e 76000000 		.4byte	0x76
 2682 0672 00000000 		.4byte	.LFB36
 2683 0676 14000000 		.4byte	.LFE36-.LFB36
 2684 067a 01       		.uleb128 0x1
 2685 067b 9C       		.byte	0x9c
 2686 067c 0E       		.uleb128 0xe
 2687 067d F5030000 		.4byte	.LASF73
 2688 0681 01       		.byte	0x1
 2689 0682 3205     		.2byte	0x532
 2690 0684 76000000 		.4byte	0x76
 2691 0688 00000000 		.4byte	.LFB37
 2692 068c 14000000 		.4byte	.LFE37-.LFB37
 2693 0690 01       		.uleb128 0x1
 2694 0691 9C       		.byte	0x9c
 2695 0692 0D       		.uleb128 0xd
 2696 0693 21010000 		.4byte	.LASF74
 2697 0697 01       		.byte	0x1
 2698 0698 4905     		.2byte	0x549
 2699 069a 00000000 		.4byte	.LFB38
 2700 069e 18000000 		.4byte	.LFE38-.LFB38
 2701 06a2 01       		.uleb128 0x1
 2702 06a3 9C       		.byte	0x9c
 2703 06a4 B8060000 		.4byte	0x6b8
 2704 06a8 0B       		.uleb128 0xb
 2705 06a9 30040000 		.4byte	.LASF71
 2706 06ad 01       		.byte	0x1
 2707 06ae 4905     		.2byte	0x549
 2708 06b0 76000000 		.4byte	0x76
 2709 06b4 02       		.uleb128 0x2
 2710 06b5 91       		.byte	0x91
 2711 06b6 74       		.sleb128 -12
 2712 06b7 00       		.byte	0
 2713 06b8 0D       		.uleb128 0xd
 2714 06b9 3F020000 		.4byte	.LASF75
 2715 06bd 01       		.byte	0x1
 2716 06be 6005     		.2byte	0x560
 2717 06c0 00000000 		.4byte	.LFB39
 2718 06c4 18000000 		.4byte	.LFE39-.LFB39
 2719 06c8 01       		.uleb128 0x1
 2720 06c9 9C       		.byte	0x9c
 2721 06ca DE060000 		.4byte	0x6de
 2722 06ce 0B       		.uleb128 0xb
 2723 06cf 30040000 		.4byte	.LASF71
 2724 06d3 01       		.byte	0x1
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 73


 2725 06d4 6005     		.2byte	0x560
 2726 06d6 76000000 		.4byte	0x76
 2727 06da 02       		.uleb128 0x2
 2728 06db 91       		.byte	0x91
 2729 06dc 74       		.sleb128 -12
 2730 06dd 00       		.byte	0
 2731 06de 0F       		.uleb128 0xf
 2732 06df 91000000 		.4byte	.LASF79
 2733 06e3 01       		.byte	0x1
 2734 06e4 15       		.byte	0x15
 2735 06e5 6B000000 		.4byte	0x6b
 2736 06e9 05       		.uleb128 0x5
 2737 06ea 03       		.byte	0x3
 2738 06eb 00000000 		.4byte	TCPWM_1_initVar
 2739 06ef 00       		.byte	0
 2740              		.section	.debug_abbrev,"",%progbits
 2741              	.Ldebug_abbrev0:
 2742 0000 01       		.uleb128 0x1
 2743 0001 11       		.uleb128 0x11
 2744 0002 01       		.byte	0x1
 2745 0003 25       		.uleb128 0x25
 2746 0004 0E       		.uleb128 0xe
 2747 0005 13       		.uleb128 0x13
 2748 0006 0B       		.uleb128 0xb
 2749 0007 03       		.uleb128 0x3
 2750 0008 0E       		.uleb128 0xe
 2751 0009 1B       		.uleb128 0x1b
 2752 000a 0E       		.uleb128 0xe
 2753 000b 55       		.uleb128 0x55
 2754 000c 17       		.uleb128 0x17
 2755 000d 11       		.uleb128 0x11
 2756 000e 01       		.uleb128 0x1
 2757 000f 10       		.uleb128 0x10
 2758 0010 17       		.uleb128 0x17
 2759 0011 00       		.byte	0
 2760 0012 00       		.byte	0
 2761 0013 02       		.uleb128 0x2
 2762 0014 24       		.uleb128 0x24
 2763 0015 00       		.byte	0
 2764 0016 0B       		.uleb128 0xb
 2765 0017 0B       		.uleb128 0xb
 2766 0018 3E       		.uleb128 0x3e
 2767 0019 0B       		.uleb128 0xb
 2768 001a 03       		.uleb128 0x3
 2769 001b 0E       		.uleb128 0xe
 2770 001c 00       		.byte	0
 2771 001d 00       		.byte	0
 2772 001e 03       		.uleb128 0x3
 2773 001f 24       		.uleb128 0x24
 2774 0020 00       		.byte	0
 2775 0021 0B       		.uleb128 0xb
 2776 0022 0B       		.uleb128 0xb
 2777 0023 3E       		.uleb128 0x3e
 2778 0024 0B       		.uleb128 0xb
 2779 0025 03       		.uleb128 0x3
 2780 0026 08       		.uleb128 0x8
 2781 0027 00       		.byte	0
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 74


 2782 0028 00       		.byte	0
 2783 0029 04       		.uleb128 0x4
 2784 002a 16       		.uleb128 0x16
 2785 002b 00       		.byte	0
 2786 002c 03       		.uleb128 0x3
 2787 002d 0E       		.uleb128 0xe
 2788 002e 3A       		.uleb128 0x3a
 2789 002f 0B       		.uleb128 0xb
 2790 0030 3B       		.uleb128 0x3b
 2791 0031 0B       		.uleb128 0xb
 2792 0032 49       		.uleb128 0x49
 2793 0033 13       		.uleb128 0x13
 2794 0034 00       		.byte	0
 2795 0035 00       		.byte	0
 2796 0036 05       		.uleb128 0x5
 2797 0037 16       		.uleb128 0x16
 2798 0038 00       		.byte	0
 2799 0039 03       		.uleb128 0x3
 2800 003a 0E       		.uleb128 0xe
 2801 003b 3A       		.uleb128 0x3a
 2802 003c 0B       		.uleb128 0xb
 2803 003d 3B       		.uleb128 0x3b
 2804 003e 05       		.uleb128 0x5
 2805 003f 49       		.uleb128 0x49
 2806 0040 13       		.uleb128 0x13
 2807 0041 00       		.byte	0
 2808 0042 00       		.byte	0
 2809 0043 06       		.uleb128 0x6
 2810 0044 35       		.uleb128 0x35
 2811 0045 00       		.byte	0
 2812 0046 49       		.uleb128 0x49
 2813 0047 13       		.uleb128 0x13
 2814 0048 00       		.byte	0
 2815 0049 00       		.byte	0
 2816 004a 07       		.uleb128 0x7
 2817 004b 2E       		.uleb128 0x2e
 2818 004c 00       		.byte	0
 2819 004d 3F       		.uleb128 0x3f
 2820 004e 19       		.uleb128 0x19
 2821 004f 03       		.uleb128 0x3
 2822 0050 0E       		.uleb128 0xe
 2823 0051 3A       		.uleb128 0x3a
 2824 0052 0B       		.uleb128 0xb
 2825 0053 3B       		.uleb128 0x3b
 2826 0054 0B       		.uleb128 0xb
 2827 0055 27       		.uleb128 0x27
 2828 0056 19       		.uleb128 0x19
 2829 0057 11       		.uleb128 0x11
 2830 0058 01       		.uleb128 0x1
 2831 0059 12       		.uleb128 0x12
 2832 005a 06       		.uleb128 0x6
 2833 005b 40       		.uleb128 0x40
 2834 005c 18       		.uleb128 0x18
 2835 005d 9642     		.uleb128 0x2116
 2836 005f 19       		.uleb128 0x19
 2837 0060 00       		.byte	0
 2838 0061 00       		.byte	0
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 75


 2839 0062 08       		.uleb128 0x8
 2840 0063 2E       		.uleb128 0x2e
 2841 0064 01       		.byte	0x1
 2842 0065 3F       		.uleb128 0x3f
 2843 0066 19       		.uleb128 0x19
 2844 0067 03       		.uleb128 0x3
 2845 0068 0E       		.uleb128 0xe
 2846 0069 3A       		.uleb128 0x3a
 2847 006a 0B       		.uleb128 0xb
 2848 006b 3B       		.uleb128 0x3b
 2849 006c 0B       		.uleb128 0xb
 2850 006d 27       		.uleb128 0x27
 2851 006e 19       		.uleb128 0x19
 2852 006f 11       		.uleb128 0x11
 2853 0070 01       		.uleb128 0x1
 2854 0071 12       		.uleb128 0x12
 2855 0072 06       		.uleb128 0x6
 2856 0073 40       		.uleb128 0x40
 2857 0074 18       		.uleb128 0x18
 2858 0075 9642     		.uleb128 0x2116
 2859 0077 19       		.uleb128 0x19
 2860 0078 01       		.uleb128 0x1
 2861 0079 13       		.uleb128 0x13
 2862 007a 00       		.byte	0
 2863 007b 00       		.byte	0
 2864 007c 09       		.uleb128 0x9
 2865 007d 34       		.uleb128 0x34
 2866 007e 00       		.byte	0
 2867 007f 03       		.uleb128 0x3
 2868 0080 0E       		.uleb128 0xe
 2869 0081 3A       		.uleb128 0x3a
 2870 0082 0B       		.uleb128 0xb
 2871 0083 3B       		.uleb128 0x3b
 2872 0084 0B       		.uleb128 0xb
 2873 0085 49       		.uleb128 0x49
 2874 0086 13       		.uleb128 0x13
 2875 0087 02       		.uleb128 0x2
 2876 0088 18       		.uleb128 0x18
 2877 0089 00       		.byte	0
 2878 008a 00       		.byte	0
 2879 008b 0A       		.uleb128 0xa
 2880 008c 2E       		.uleb128 0x2e
 2881 008d 01       		.byte	0x1
 2882 008e 3F       		.uleb128 0x3f
 2883 008f 19       		.uleb128 0x19
 2884 0090 03       		.uleb128 0x3
 2885 0091 0E       		.uleb128 0xe
 2886 0092 3A       		.uleb128 0x3a
 2887 0093 0B       		.uleb128 0xb
 2888 0094 3B       		.uleb128 0x3b
 2889 0095 05       		.uleb128 0x5
 2890 0096 27       		.uleb128 0x27
 2891 0097 19       		.uleb128 0x19
 2892 0098 11       		.uleb128 0x11
 2893 0099 01       		.uleb128 0x1
 2894 009a 12       		.uleb128 0x12
 2895 009b 06       		.uleb128 0x6
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 76


 2896 009c 40       		.uleb128 0x40
 2897 009d 18       		.uleb128 0x18
 2898 009e 9642     		.uleb128 0x2116
 2899 00a0 19       		.uleb128 0x19
 2900 00a1 01       		.uleb128 0x1
 2901 00a2 13       		.uleb128 0x13
 2902 00a3 00       		.byte	0
 2903 00a4 00       		.byte	0
 2904 00a5 0B       		.uleb128 0xb
 2905 00a6 05       		.uleb128 0x5
 2906 00a7 00       		.byte	0
 2907 00a8 03       		.uleb128 0x3
 2908 00a9 0E       		.uleb128 0xe
 2909 00aa 3A       		.uleb128 0x3a
 2910 00ab 0B       		.uleb128 0xb
 2911 00ac 3B       		.uleb128 0x3b
 2912 00ad 05       		.uleb128 0x5
 2913 00ae 49       		.uleb128 0x49
 2914 00af 13       		.uleb128 0x13
 2915 00b0 02       		.uleb128 0x2
 2916 00b1 18       		.uleb128 0x18
 2917 00b2 00       		.byte	0
 2918 00b3 00       		.byte	0
 2919 00b4 0C       		.uleb128 0xc
 2920 00b5 34       		.uleb128 0x34
 2921 00b6 00       		.byte	0
 2922 00b7 03       		.uleb128 0x3
 2923 00b8 0E       		.uleb128 0xe
 2924 00b9 3A       		.uleb128 0x3a
 2925 00ba 0B       		.uleb128 0xb
 2926 00bb 3B       		.uleb128 0x3b
 2927 00bc 05       		.uleb128 0x5
 2928 00bd 49       		.uleb128 0x49
 2929 00be 13       		.uleb128 0x13
 2930 00bf 02       		.uleb128 0x2
 2931 00c0 18       		.uleb128 0x18
 2932 00c1 00       		.byte	0
 2933 00c2 00       		.byte	0
 2934 00c3 0D       		.uleb128 0xd
 2935 00c4 2E       		.uleb128 0x2e
 2936 00c5 01       		.byte	0x1
 2937 00c6 3F       		.uleb128 0x3f
 2938 00c7 19       		.uleb128 0x19
 2939 00c8 03       		.uleb128 0x3
 2940 00c9 0E       		.uleb128 0xe
 2941 00ca 3A       		.uleb128 0x3a
 2942 00cb 0B       		.uleb128 0xb
 2943 00cc 3B       		.uleb128 0x3b
 2944 00cd 05       		.uleb128 0x5
 2945 00ce 27       		.uleb128 0x27
 2946 00cf 19       		.uleb128 0x19
 2947 00d0 11       		.uleb128 0x11
 2948 00d1 01       		.uleb128 0x1
 2949 00d2 12       		.uleb128 0x12
 2950 00d3 06       		.uleb128 0x6
 2951 00d4 40       		.uleb128 0x40
 2952 00d5 18       		.uleb128 0x18
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 77


 2953 00d6 9742     		.uleb128 0x2117
 2954 00d8 19       		.uleb128 0x19
 2955 00d9 01       		.uleb128 0x1
 2956 00da 13       		.uleb128 0x13
 2957 00db 00       		.byte	0
 2958 00dc 00       		.byte	0
 2959 00dd 0E       		.uleb128 0xe
 2960 00de 2E       		.uleb128 0x2e
 2961 00df 00       		.byte	0
 2962 00e0 3F       		.uleb128 0x3f
 2963 00e1 19       		.uleb128 0x19
 2964 00e2 03       		.uleb128 0x3
 2965 00e3 0E       		.uleb128 0xe
 2966 00e4 3A       		.uleb128 0x3a
 2967 00e5 0B       		.uleb128 0xb
 2968 00e6 3B       		.uleb128 0x3b
 2969 00e7 05       		.uleb128 0x5
 2970 00e8 27       		.uleb128 0x27
 2971 00e9 19       		.uleb128 0x19
 2972 00ea 49       		.uleb128 0x49
 2973 00eb 13       		.uleb128 0x13
 2974 00ec 11       		.uleb128 0x11
 2975 00ed 01       		.uleb128 0x1
 2976 00ee 12       		.uleb128 0x12
 2977 00ef 06       		.uleb128 0x6
 2978 00f0 40       		.uleb128 0x40
 2979 00f1 18       		.uleb128 0x18
 2980 00f2 9742     		.uleb128 0x2117
 2981 00f4 19       		.uleb128 0x19
 2982 00f5 00       		.byte	0
 2983 00f6 00       		.byte	0
 2984 00f7 0F       		.uleb128 0xf
 2985 00f8 34       		.uleb128 0x34
 2986 00f9 00       		.byte	0
 2987 00fa 03       		.uleb128 0x3
 2988 00fb 0E       		.uleb128 0xe
 2989 00fc 3A       		.uleb128 0x3a
 2990 00fd 0B       		.uleb128 0xb
 2991 00fe 3B       		.uleb128 0x3b
 2992 00ff 0B       		.uleb128 0xb
 2993 0100 49       		.uleb128 0x49
 2994 0101 13       		.uleb128 0x13
 2995 0102 3F       		.uleb128 0x3f
 2996 0103 19       		.uleb128 0x19
 2997 0104 02       		.uleb128 0x2
 2998 0105 18       		.uleb128 0x18
 2999 0106 00       		.byte	0
 3000 0107 00       		.byte	0
 3001 0108 00       		.byte	0
 3002              		.section	.debug_aranges,"",%progbits
 3003 0000 54010000 		.4byte	0x154
 3004 0004 0200     		.2byte	0x2
 3005 0006 00000000 		.4byte	.Ldebug_info0
 3006 000a 04       		.byte	0x4
 3007 000b 00       		.byte	0
 3008 000c 0000     		.2byte	0
 3009 000e 0000     		.2byte	0
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 78


 3010 0010 00000000 		.4byte	.LFB0
 3011 0014 44000000 		.4byte	.LFE0-.LFB0
 3012 0018 00000000 		.4byte	.LFB1
 3013 001c 38000000 		.4byte	.LFE1-.LFB1
 3014 0020 00000000 		.4byte	.LFB2
 3015 0024 24000000 		.4byte	.LFE2-.LFB2
 3016 0028 00000000 		.4byte	.LFB3
 3017 002c 30000000 		.4byte	.LFE3-.LFB3
 3018 0030 00000000 		.4byte	.LFB4
 3019 0034 48000000 		.4byte	.LFE4-.LFB4
 3020 0038 00000000 		.4byte	.LFB5
 3021 003c 48000000 		.4byte	.LFE5-.LFB5
 3022 0040 00000000 		.4byte	.LFB6
 3023 0044 48000000 		.4byte	.LFE6-.LFB6
 3024 0048 00000000 		.4byte	.LFB7
 3025 004c 4C000000 		.4byte	.LFE7-.LFB7
 3026 0050 00000000 		.4byte	.LFB8
 3027 0054 1C000000 		.4byte	.LFE8-.LFB8
 3028 0058 00000000 		.4byte	.LFB9
 3029 005c 48000000 		.4byte	.LFE9-.LFB9
 3030 0060 00000000 		.4byte	.LFB10
 3031 0064 48000000 		.4byte	.LFE10-.LFB10
 3032 0068 00000000 		.4byte	.LFB11
 3033 006c 4C000000 		.4byte	.LFE11-.LFB11
 3034 0070 00000000 		.4byte	.LFB12
 3035 0074 48000000 		.4byte	.LFE12-.LFB12
 3036 0078 00000000 		.4byte	.LFB13
 3037 007c 1C000000 		.4byte	.LFE13-.LFB13
 3038 0080 00000000 		.4byte	.LFB14
 3039 0084 18000000 		.4byte	.LFE14-.LFB14
 3040 0088 00000000 		.4byte	.LFB15
 3041 008c 48000000 		.4byte	.LFE15-.LFB15
 3042 0090 00000000 		.4byte	.LFB16
 3043 0094 1C000000 		.4byte	.LFE16-.LFB16
 3044 0098 00000000 		.4byte	.LFB17
 3045 009c 18000000 		.4byte	.LFE17-.LFB17
 3046 00a0 00000000 		.4byte	.LFB18
 3047 00a4 48000000 		.4byte	.LFE18-.LFB18
 3048 00a8 00000000 		.4byte	.LFB19
 3049 00ac 1C000000 		.4byte	.LFE19-.LFB19
 3050 00b0 00000000 		.4byte	.LFB20
 3051 00b4 18000000 		.4byte	.LFE20-.LFB20
 3052 00b8 00000000 		.4byte	.LFB21
 3053 00bc 48000000 		.4byte	.LFE21-.LFB21
 3054 00c0 00000000 		.4byte	.LFB22
 3055 00c4 1C000000 		.4byte	.LFE22-.LFB22
 3056 00c8 00000000 		.4byte	.LFB23
 3057 00cc 18000000 		.4byte	.LFE23-.LFB23
 3058 00d0 00000000 		.4byte	.LFB24
 3059 00d4 1C000000 		.4byte	.LFE24-.LFB24
 3060 00d8 00000000 		.4byte	.LFB25
 3061 00dc 18000000 		.4byte	.LFE25-.LFB25
 3062 00e0 00000000 		.4byte	.LFB26
 3063 00e4 18000000 		.4byte	.LFE26-.LFB26
 3064 00e8 00000000 		.4byte	.LFB27
 3065 00ec 18000000 		.4byte	.LFE27-.LFB27
 3066 00f0 00000000 		.4byte	.LFB28
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 79


 3067 00f4 44000000 		.4byte	.LFE28-.LFB28
 3068 00f8 00000000 		.4byte	.LFB29
 3069 00fc 44000000 		.4byte	.LFE29-.LFB29
 3070 0100 00000000 		.4byte	.LFB30
 3071 0104 48000000 		.4byte	.LFE30-.LFB30
 3072 0108 00000000 		.4byte	.LFB31
 3073 010c 44000000 		.4byte	.LFE31-.LFB31
 3074 0110 00000000 		.4byte	.LFB32
 3075 0114 44000000 		.4byte	.LFE32-.LFB32
 3076 0118 00000000 		.4byte	.LFB33
 3077 011c 3C000000 		.4byte	.LFE33-.LFB33
 3078 0120 00000000 		.4byte	.LFB34
 3079 0124 20000000 		.4byte	.LFE34-.LFB34
 3080 0128 00000000 		.4byte	.LFB35
 3081 012c 18000000 		.4byte	.LFE35-.LFB35
 3082 0130 00000000 		.4byte	.LFB36
 3083 0134 14000000 		.4byte	.LFE36-.LFB36
 3084 0138 00000000 		.4byte	.LFB37
 3085 013c 14000000 		.4byte	.LFE37-.LFB37
 3086 0140 00000000 		.4byte	.LFB38
 3087 0144 18000000 		.4byte	.LFE38-.LFB38
 3088 0148 00000000 		.4byte	.LFB39
 3089 014c 18000000 		.4byte	.LFE39-.LFB39
 3090 0150 00000000 		.4byte	0
 3091 0154 00000000 		.4byte	0
 3092              		.section	.debug_ranges,"",%progbits
 3093              	.Ldebug_ranges0:
 3094 0000 00000000 		.4byte	.LFB0
 3095 0004 44000000 		.4byte	.LFE0
 3096 0008 00000000 		.4byte	.LFB1
 3097 000c 38000000 		.4byte	.LFE1
 3098 0010 00000000 		.4byte	.LFB2
 3099 0014 24000000 		.4byte	.LFE2
 3100 0018 00000000 		.4byte	.LFB3
 3101 001c 30000000 		.4byte	.LFE3
 3102 0020 00000000 		.4byte	.LFB4
 3103 0024 48000000 		.4byte	.LFE4
 3104 0028 00000000 		.4byte	.LFB5
 3105 002c 48000000 		.4byte	.LFE5
 3106 0030 00000000 		.4byte	.LFB6
 3107 0034 48000000 		.4byte	.LFE6
 3108 0038 00000000 		.4byte	.LFB7
 3109 003c 4C000000 		.4byte	.LFE7
 3110 0040 00000000 		.4byte	.LFB8
 3111 0044 1C000000 		.4byte	.LFE8
 3112 0048 00000000 		.4byte	.LFB9
 3113 004c 48000000 		.4byte	.LFE9
 3114 0050 00000000 		.4byte	.LFB10
 3115 0054 48000000 		.4byte	.LFE10
 3116 0058 00000000 		.4byte	.LFB11
 3117 005c 4C000000 		.4byte	.LFE11
 3118 0060 00000000 		.4byte	.LFB12
 3119 0064 48000000 		.4byte	.LFE12
 3120 0068 00000000 		.4byte	.LFB13
 3121 006c 1C000000 		.4byte	.LFE13
 3122 0070 00000000 		.4byte	.LFB14
 3123 0074 18000000 		.4byte	.LFE14
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 80


 3124 0078 00000000 		.4byte	.LFB15
 3125 007c 48000000 		.4byte	.LFE15
 3126 0080 00000000 		.4byte	.LFB16
 3127 0084 1C000000 		.4byte	.LFE16
 3128 0088 00000000 		.4byte	.LFB17
 3129 008c 18000000 		.4byte	.LFE17
 3130 0090 00000000 		.4byte	.LFB18
 3131 0094 48000000 		.4byte	.LFE18
 3132 0098 00000000 		.4byte	.LFB19
 3133 009c 1C000000 		.4byte	.LFE19
 3134 00a0 00000000 		.4byte	.LFB20
 3135 00a4 18000000 		.4byte	.LFE20
 3136 00a8 00000000 		.4byte	.LFB21
 3137 00ac 48000000 		.4byte	.LFE21
 3138 00b0 00000000 		.4byte	.LFB22
 3139 00b4 1C000000 		.4byte	.LFE22
 3140 00b8 00000000 		.4byte	.LFB23
 3141 00bc 18000000 		.4byte	.LFE23
 3142 00c0 00000000 		.4byte	.LFB24
 3143 00c4 1C000000 		.4byte	.LFE24
 3144 00c8 00000000 		.4byte	.LFB25
 3145 00cc 18000000 		.4byte	.LFE25
 3146 00d0 00000000 		.4byte	.LFB26
 3147 00d4 18000000 		.4byte	.LFE26
 3148 00d8 00000000 		.4byte	.LFB27
 3149 00dc 18000000 		.4byte	.LFE27
 3150 00e0 00000000 		.4byte	.LFB28
 3151 00e4 44000000 		.4byte	.LFE28
 3152 00e8 00000000 		.4byte	.LFB29
 3153 00ec 44000000 		.4byte	.LFE29
 3154 00f0 00000000 		.4byte	.LFB30
 3155 00f4 48000000 		.4byte	.LFE30
 3156 00f8 00000000 		.4byte	.LFB31
 3157 00fc 44000000 		.4byte	.LFE31
 3158 0100 00000000 		.4byte	.LFB32
 3159 0104 44000000 		.4byte	.LFE32
 3160 0108 00000000 		.4byte	.LFB33
 3161 010c 3C000000 		.4byte	.LFE33
 3162 0110 00000000 		.4byte	.LFB34
 3163 0114 20000000 		.4byte	.LFE34
 3164 0118 00000000 		.4byte	.LFB35
 3165 011c 18000000 		.4byte	.LFE35
 3166 0120 00000000 		.4byte	.LFB36
 3167 0124 14000000 		.4byte	.LFE36
 3168 0128 00000000 		.4byte	.LFB37
 3169 012c 14000000 		.4byte	.LFE37
 3170 0130 00000000 		.4byte	.LFB38
 3171 0134 18000000 		.4byte	.LFE38
 3172 0138 00000000 		.4byte	.LFB39
 3173 013c 18000000 		.4byte	.LFE39
 3174 0140 00000000 		.4byte	0
 3175 0144 00000000 		.4byte	0
 3176              		.section	.debug_line,"",%progbits
 3177              	.Ldebug_line0:
 3178 0000 6D030000 		.section	.debug_str,"MS",%progbits,1
 3178      02004600 
 3178      00000201 
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 81


 3178      FB0E0D00 
 3178      01010101 
 3179              	.LASF31:
 3180 0000 54435057 		.ascii	"TCPWM_1_SetPWMSyncKill\000"
 3180      4D5F315F 
 3180      53657450 
 3180      574D5379 
 3180      6E634B69 
 3181              	.LASF60:
 3182 0017 54435057 		.ascii	"TCPWM_1_ReadCaptureBuf\000"
 3182      4D5F315F 
 3182      52656164 
 3182      43617074 
 3182      75726542 
 3183              	.LASF21:
 3184 002e 54435057 		.ascii	"TCPWM_1_SetMode\000"
 3184      4D5F315F 
 3184      5365744D 
 3184      6F646500 
 3185              	.LASF22:
 3186 003e 54435057 		.ascii	"TCPWM_1_SetQDMode\000"
 3186      4D5F315F 
 3186      53657451 
 3186      444D6F64 
 3186      6500
 3187              	.LASF25:
 3188 0050 54435057 		.ascii	"TCPWM_1_SetPrescaler\000"
 3188      4D5F315F 
 3188      53657450 
 3188      72657363 
 3188      616C6572 
 3189              	.LASF39:
 3190 0065 54435057 		.ascii	"TCPWM_1_WriteCounter\000"
 3190      4D5F315F 
 3190      57726974 
 3190      65436F75 
 3190      6E746572 
 3191              	.LASF7:
 3192 007a 6C6F6E67 		.ascii	"long long unsigned int\000"
 3192      206C6F6E 
 3192      6720756E 
 3192      7369676E 
 3192      65642069 
 3193              	.LASF79:
 3194 0091 54435057 		.ascii	"TCPWM_1_initVar\000"
 3194      4D5F315F 
 3194      696E6974 
 3194      56617200 
 3195              	.LASF19:
 3196 00a1 54435057 		.ascii	"TCPWM_1_Stop\000"
 3196      4D5F315F 
 3196      53746F70 
 3196      00
 3197              	.LASF47:
 3198 00ae 54435057 		.ascii	"TCPWM_1_SetCompareSwap\000"
 3198      4D5F315F 
 3198      53657443 
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 82


 3198      6F6D7061 
 3198      72655377 
 3199              	.LASF6:
 3200 00c5 6C6F6E67 		.ascii	"long long int\000"
 3200      206C6F6E 
 3200      6720696E 
 3200      7400
 3201              	.LASF0:
 3202 00d3 7369676E 		.ascii	"signed char\000"
 3202      65642063 
 3202      68617200 
 3203              	.LASF55:
 3204 00df 54435057 		.ascii	"TCPWM_1_ReadCompare\000"
 3204      4D5F315F 
 3204      52656164 
 3204      436F6D70 
 3204      61726500 
 3205              	.LASF24:
 3206 00f3 71644D6F 		.ascii	"qdMode\000"
 3206      646500
 3207              	.LASF4:
 3208 00fa 6C6F6E67 		.ascii	"long int\000"
 3208      20696E74 
 3208      00
 3209              	.LASF56:
 3210 0103 54435057 		.ascii	"TCPWM_1_WriteCompareBuf\000"
 3210      4D5F315F 
 3210      57726974 
 3210      65436F6D 
 3210      70617265 
 3211              	.LASF9:
 3212 011b 75696E74 		.ascii	"uint8\000"
 3212      3800
 3213              	.LASF74:
 3214 0121 54435057 		.ascii	"TCPWM_1_ClearInterrupt\000"
 3214      4D5F315F 
 3214      436C6561 
 3214      72496E74 
 3214      65727275 
 3215              	.LASF12:
 3216 0138 646F7562 		.ascii	"double\000"
 3216      6C6500
 3217              	.LASF10:
 3218 013f 75696E74 		.ascii	"uint32\000"
 3218      333200
 3219              	.LASF40:
 3220 0146 636F756E 		.ascii	"count\000"
 3220      7400
 3221              	.LASF62:
 3222 014c 74726967 		.ascii	"triggerMode\000"
 3222      6765724D 
 3222      6F646500 
 3223              	.LASF38:
 3224 0158 6D61736B 		.ascii	"mask\000"
 3224      00
 3225              	.LASF33:
 3226 015d 54435057 		.ascii	"TCPWM_1_SetPWMStopOnKill\000"
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 83


 3226      4D5F315F 
 3226      53657450 
 3226      574D5374 
 3226      6F704F6E 
 3227              	.LASF45:
 3228 0176 54435057 		.ascii	"TCPWM_1_ReadCounter\000"
 3228      4D5F315F 
 3228      52656164 
 3228      436F756E 
 3228      74657200 
 3229              	.LASF36:
 3230 018a 64656164 		.ascii	"deadTime\000"
 3230      54696D65 
 3230      00
 3231              	.LASF72:
 3232 0193 54435057 		.ascii	"TCPWM_1_GetInterruptSourceMasked\000"
 3232      4D5F315F 
 3232      47657449 
 3232      6E746572 
 3232      72757074 
 3233              	.LASF8:
 3234 01b4 756E7369 		.ascii	"unsigned int\000"
 3234      676E6564 
 3234      20696E74 
 3234      00
 3235              	.LASF67:
 3236 01c1 54435057 		.ascii	"TCPWM_1_TriggerCommand\000"
 3236      4D5F315F 
 3236      54726967 
 3236      67657243 
 3236      6F6D6D61 
 3237              	.LASF68:
 3238 01d8 636F6D6D 		.ascii	"command\000"
 3238      616E6400 
 3239              	.LASF5:
 3240 01e0 6C6F6E67 		.ascii	"long unsigned int\000"
 3240      20756E73 
 3240      69676E65 
 3240      6420696E 
 3240      7400
 3241              	.LASF30:
 3242 01f2 6D6F6465 		.ascii	"modeMask\000"
 3242      4D61736B 
 3242      00
 3243              	.LASF77:
 3244 01fb 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\TCPWM_1.c\000"
 3244      6E657261 
 3244      7465645F 
 3244      536F7572 
 3244      63655C50 
 3245              	.LASF3:
 3246 021e 73686F72 		.ascii	"short unsigned int\000"
 3246      7420756E 
 3246      7369676E 
 3246      65642069 
 3246      6E7400
 3247              	.LASF28:
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 84


 3248 0231 6F6E6553 		.ascii	"oneShotEnable\000"
 3248      686F7445 
 3248      6E61626C 
 3248      6500
 3249              	.LASF75:
 3250 023f 54435057 		.ascii	"TCPWM_1_SetInterrupt\000"
 3250      4D5F315F 
 3250      53657449 
 3250      6E746572 
 3250      72757074 
 3251              	.LASF27:
 3252 0254 54435057 		.ascii	"TCPWM_1_SetOneShot\000"
 3252      4D5F315F 
 3252      5365744F 
 3252      6E655368 
 3252      6F7400
 3253              	.LASF14:
 3254 0267 72656733 		.ascii	"reg32\000"
 3254      3200
 3255              	.LASF65:
 3256 026d 54435057 		.ascii	"TCPWM_1_SetStopMode\000"
 3256      4D5F315F 
 3256      53657453 
 3256      746F704D 
 3256      6F646500 
 3257              	.LASF18:
 3258 0281 54435057 		.ascii	"TCPWM_1_Enable\000"
 3258      4D5F315F 
 3258      456E6162 
 3258      6C6500
 3259              	.LASF15:
 3260 0290 73697A65 		.ascii	"sizetype\000"
 3260      74797065 
 3260      00
 3261              	.LASF32:
 3262 0299 73796E63 		.ascii	"syncKillEnable\000"
 3262      4B696C6C 
 3262      456E6162 
 3262      6C6500
 3263              	.LASF16:
 3264 02a8 54435057 		.ascii	"TCPWM_1_Init\000"
 3264      4D5F315F 
 3264      496E6974 
 3264      00
 3265              	.LASF35:
 3266 02b5 54435057 		.ascii	"TCPWM_1_SetPWMDeadTime\000"
 3266      4D5F315F 
 3266      53657450 
 3266      574D4465 
 3266      61645469 
 3267              	.LASF69:
 3268 02cc 54435057 		.ascii	"TCPWM_1_ReadStatus\000"
 3268      4D5F315F 
 3268      52656164 
 3268      53746174 
 3268      757300
 3269              	.LASF54:
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 85


 3270 02df 636F6D70 		.ascii	"compare\000"
 3270      61726500 
 3271              	.LASF17:
 3272 02e7 54435057 		.ascii	"TCPWM_1_Start\000"
 3272      4D5F315F 
 3272      53746172 
 3272      7400
 3273              	.LASF66:
 3274 02f5 54435057 		.ascii	"TCPWM_1_SetCountMode\000"
 3274      4D5F315F 
 3274      53657443 
 3274      6F756E74 
 3274      4D6F6465 
 3275              	.LASF11:
 3276 030a 666C6F61 		.ascii	"float\000"
 3276      7400
 3277              	.LASF26:
 3278 0310 70726573 		.ascii	"prescaler\000"
 3278      63616C65 
 3278      7200
 3279              	.LASF76:
 3280 031a 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3280      4320342E 
 3280      382E3420 
 3280      32303134 
 3280      30353236 
 3281 034d 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 3281      20726576 
 3281      6973696F 
 3281      6E203231 
 3281      31333538 
 3282 0380 30202D66 		.ascii	"0 -ffunction-sections\000"
 3282      66756E63 
 3282      74696F6E 
 3282      2D736563 
 3282      74696F6E 
 3283              	.LASF43:
 3284 0396 54435057 		.ascii	"TCPWM_1_WritePeriod\000"
 3284      4D5F315F 
 3284      57726974 
 3284      65506572 
 3284      696F6400 
 3285              	.LASF49:
 3286 03aa 54435057 		.ascii	"TCPWM_1_WritePeriodBuf\000"
 3286      4D5F315F 
 3286      57726974 
 3286      65506572 
 3286      696F6442 
 3287              	.LASF1:
 3288 03c1 756E7369 		.ascii	"unsigned char\000"
 3288      676E6564 
 3288      20636861 
 3288      7200
 3289              	.LASF53:
 3290 03cf 54435057 		.ascii	"TCPWM_1_WriteCompare\000"
 3290      4D5F315F 
 3290      57726974 
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 86


 3290      65436F6D 
 3290      70617265 
 3291              	.LASF34:
 3292 03e4 73746F70 		.ascii	"stopOnKillEnable\000"
 3292      4F6E4B69 
 3292      6C6C456E 
 3292      61626C65 
 3292      00
 3293              	.LASF73:
 3294 03f5 54435057 		.ascii	"TCPWM_1_GetInterruptSource\000"
 3294      4D5F315F 
 3294      47657449 
 3294      6E746572 
 3294      72757074 
 3295              	.LASF2:
 3296 0410 73686F72 		.ascii	"short int\000"
 3296      7420696E 
 3296      7400
 3297              	.LASF51:
 3298 041a 54435057 		.ascii	"TCPWM_1_ReadPeriodBuf\000"
 3298      4D5F315F 
 3298      52656164 
 3298      50657269 
 3298      6F644275 
 3299              	.LASF71:
 3300 0430 696E7465 		.ascii	"interruptMask\000"
 3300      72727570 
 3300      744D6173 
 3300      6B00
 3301              	.LASF58:
 3302 043e 54435057 		.ascii	"TCPWM_1_ReadCompareBuf\000"
 3302      4D5F315F 
 3302      52656164 
 3302      436F6D70 
 3302      61726542 
 3303              	.LASF46:
 3304 0455 54435057 		.ascii	"TCPWM_1_ReadPeriod\000"
 3304      4D5F315F 
 3304      52656164 
 3304      50657269 
 3304      6F6400
 3305              	.LASF52:
 3306 0468 54435057 		.ascii	"TCPWM_1_SetPeriodSwap\000"
 3306      4D5F315F 
 3306      53657450 
 3306      6572696F 
 3306      64537761 
 3307              	.LASF13:
 3308 047e 63686172 		.ascii	"char\000"
 3308      00
 3309              	.LASF23:
 3310 0483 6D6F6465 		.ascii	"mode\000"
 3310      00
 3311              	.LASF59:
 3312 0488 54435057 		.ascii	"TCPWM_1_ReadCapture\000"
 3312      4D5F315F 
 3312      52656164 
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 87


 3312      43617074 
 3312      75726500 
 3313              	.LASF42:
 3314 049c 636F756E 		.ascii	"counterMode\000"
 3314      7465724D 
 3314      6F646500 
 3315              	.LASF44:
 3316 04a8 70657269 		.ascii	"period\000"
 3316      6F6400
 3317              	.LASF70:
 3318 04af 54435057 		.ascii	"TCPWM_1_SetInterruptMode\000"
 3318      4D5F315F 
 3318      53657449 
 3318      6E746572 
 3318      72757074 
 3319              	.LASF57:
 3320 04c8 636F6D70 		.ascii	"compareBuf\000"
 3320      61726542 
 3320      756600
 3321              	.LASF20:
 3322 04d3 656E6162 		.ascii	"enableInterrupts\000"
 3322      6C65496E 
 3322      74657272 
 3322      75707473 
 3322      00
 3323              	.LASF41:
 3324 04e4 54435057 		.ascii	"TCPWM_1_SetCounterMode\000"
 3324      4D5F315F 
 3324      53657443 
 3324      6F756E74 
 3324      65724D6F 
 3325              	.LASF29:
 3326 04fb 54435057 		.ascii	"TCPWM_1_SetPWMMode\000"
 3326      4D5F315F 
 3326      53657450 
 3326      574D4D6F 
 3326      646500
 3327              	.LASF37:
 3328 050e 54435057 		.ascii	"TCPWM_1_SetPWMInvert\000"
 3328      4D5F315F 
 3328      53657450 
 3328      574D496E 
 3328      76657274 
 3329              	.LASF63:
 3330 0523 54435057 		.ascii	"TCPWM_1_SetReloadMode\000"
 3330      4D5F315F 
 3330      53657452 
 3330      656C6F61 
 3330      644D6F64 
 3331              	.LASF64:
 3332 0539 54435057 		.ascii	"TCPWM_1_SetStartMode\000"
 3332      4D5F315F 
 3332      53657453 
 3332      74617274 
 3332      4D6F6465 
 3333              	.LASF48:
 3334 054e 73776170 		.ascii	"swapEnable\000"
ARM GAS  C:\Users\Karsten\AppData\Local\Temp\cct5sizh.s 			page 88


 3334      456E6162 
 3334      6C6500
 3335              	.LASF78:
 3336 0559 433A5C55 		.ascii	"C:\\Users\\Karsten\\Desktop\\IHA\\3. Semester\\Proj"
 3336      73657273 
 3336      5C4B6172 
 3336      7374656E 
 3336      5C446573 
 3337 0586 656B745C 		.ascii	"ekt\\PHProbe\\PHProbe.cydsn\000"
 3337      50485072 
 3337      6F62655C 
 3337      50485072 
 3337      6F62652E 
 3338              	.LASF50:
 3339 05a0 70657269 		.ascii	"periodBuf\000"
 3339      6F644275 
 3339      6600
 3340              	.LASF61:
 3341 05aa 54435057 		.ascii	"TCPWM_1_SetCaptureMode\000"
 3341      4D5F315F 
 3341      53657443 
 3341      61707475 
 3341      72654D6F 
 3342              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
